#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPUI_VisionAward

#include "Basic.hpp"

#include "BPUI_VisionAward_classes.hpp"
#include "BPUI_VisionAward_parameters.hpp"


namespace SDK
{

// Function BPUI_VisionAward.BPUI_VisionAward_C.BP_SetVisionInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVisionData                      VisionData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBPUI_VisionAward_C::BP_SetVisionInfo(const struct FVisionData& VisionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_VisionAward_C", "BP_SetVisionInfo");

	Params::BPUI_VisionAward_C_BP_SetVisionInfo Parms{};

	Parms.VisionData = std::move(VisionData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPUI_VisionAward.BPUI_VisionAward_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBPUI_VisionAward_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_VisionAward_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPUI_VisionAward.BPUI_VisionAward_C.ExecuteUbergraph_BPUI_VisionAward
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPUI_VisionAward_C::ExecuteUbergraph_BPUI_VisionAward(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_VisionAward_C", "ExecuteUbergraph_BPUI_VisionAward");

	Params::BPUI_VisionAward_C_ExecuteUbergraph_BPUI_VisionAward Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPUI_VisionAward.BPUI_VisionAward_C.PlayShowAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UBPUI_VisionAward_C::PlayShowAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_VisionAward_C", "PlayShowAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPUI_VisionAward.BPUI_VisionAward_C.SequenceEvent
// (BlueprintCallable, BlueprintEvent)

void UBPUI_VisionAward_C::SequenceEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_VisionAward_C", "SequenceEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPUI_VisionAward.BPUI_VisionAward_C.SequenceEvent__ENTRYPOINTBPUI_VisionAward
// (Public, BlueprintCallable, BlueprintEvent)

void UBPUI_VisionAward_C::SequenceEvent__ENTRYPOINTBPUI_VisionAward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_VisionAward_C", "SequenceEvent__ENTRYPOINTBPUI_VisionAward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPUI_VisionAward.BPUI_VisionAward_C.SetAnimPlaySpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InSpeed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPUI_VisionAward_C::SetAnimPlaySpeed(double InSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_VisionAward_C", "SetAnimPlaySpeed");

	Params::BPUI_VisionAward_C_SetAnimPlaySpeed Parms{};

	Parms.InSpeed = InSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPUI_VisionAward.BPUI_VisionAward_C.SetTextWithDiffColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextBlock*                       InWidget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UBPUI_VisionAward_C::SetTextWithDiffColor(class UTextBlock* InWidget, const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_VisionAward_C", "SetTextWithDiffColor");

	Params::BPUI_VisionAward_C_SetTextWithDiffColor Parms{};

	Parms.InWidget = InWidget;
	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPUI_VisionAward.BPUI_VisionAward_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPUI_VisionAward_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_VisionAward_C", "Tick");

	Params::BPUI_VisionAward_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

