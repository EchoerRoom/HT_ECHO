#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluxInteractionCapture_Vehicle

#include "Basic.hpp"

#include "BP_FluxInteractionCapture_Vehicle_classes.hpp"
#include "BP_FluxInteractionCapture_Vehicle_parameters.hpp"


namespace SDK
{

// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.BndEvt__WaterSurface_BP_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_FluxInteractionCapture_Vehicle_C::BndEvt__WaterSurface_BP_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "BndEvt__WaterSurface_BP_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_FluxInteractionCapture_Vehicle_C_BndEvt__WaterSurface_BP_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.BndEvt__WaterSurface_BP_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxInteractionCapture_Vehicle_C::BndEvt__WaterSurface_BP_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "BndEvt__WaterSurface_BP_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_FluxInteractionCapture_Vehicle_C_BndEvt__WaterSurface_BP_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.CanRenderInteractions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanRender                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxInteractionCapture_Vehicle_C::CanRenderInteractions(bool* CanRender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "CanRenderInteractions");

	Params::BP_FluxInteractionCapture_Vehicle_C_CanRenderInteractions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanRender != nullptr)
		*CanRender = Parms.CanRender;
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.ExecuteUbergraph_BP_FluxInteractionCapture_Vehicle
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxInteractionCapture_Vehicle_C::ExecuteUbergraph_BP_FluxInteractionCapture_Vehicle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "ExecuteUbergraph_BP_FluxInteractionCapture_Vehicle");

	Params::BP_FluxInteractionCapture_Vehicle_C_ExecuteUbergraph_BP_FluxInteractionCapture_Vehicle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.GetCoastlineState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPDA_FluxCoastlineState_C*        State                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FluxInteractionCapture_Vehicle_C::GetCoastlineState(class UPDA_FluxCoastlineState_C** State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "GetCoastlineState");

	Params::BP_FluxInteractionCapture_Vehicle_C_GetCoastlineState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.GetSimulationState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPDA_FluxSimulationState_C*       State                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FluxInteractionCapture_Vehicle_C::GetSimulationState(class UPDA_FluxSimulationState_C** State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "GetSimulationState");

	Params::BP_FluxInteractionCapture_Vehicle_C_GetSimulationState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.InitializeArea
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxInteractionCapture_Vehicle_C::InitializeArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "InitializeArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.PreviewDebugArea
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxInteractionCapture_Vehicle_C::PreviewDebugArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "PreviewDebugArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FluxInteractionCapture_Vehicle_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.SetInteractionsArea
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Param_Area                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxInteractionCapture_Vehicle_C::SetInteractionsArea(const struct FLinearColor& Param_Area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "SetInteractionsArea");

	Params::BP_FluxInteractionCapture_Vehicle_C_SetInteractionsArea Parms{};

	Parms.Param_Area = std::move(Param_Area);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.SetInteractionsAreaVehicle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Param_Area                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxInteractionCapture_Vehicle_C::SetInteractionsAreaVehicle(const struct FLinearColor& Param_Area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "SetInteractionsAreaVehicle");

	Params::BP_FluxInteractionCapture_Vehicle_C_SetInteractionsAreaVehicle Parms{};

	Parms.Param_Area = std::move(Param_Area);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.SetInteractionsTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FluxInteractionCapture_Vehicle_C::SetInteractionsTexture(class UTextureRenderTarget2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "SetInteractionsTexture");

	Params::BP_FluxInteractionCapture_Vehicle_C_SetInteractionsTexture Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.SetInteractionsTextureVehicle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FluxInteractionCapture_Vehicle_C::SetInteractionsTextureVehicle(class UTextureRenderTarget2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "SetInteractionsTextureVehicle");

	Params::BP_FluxInteractionCapture_Vehicle_C_SetInteractionsTextureVehicle Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxInteractionCapture_Vehicle.BP_FluxInteractionCapture_Vehicle_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxInteractionCapture_Vehicle_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxInteractionCapture_Vehicle_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

