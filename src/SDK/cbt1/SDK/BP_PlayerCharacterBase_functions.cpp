#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCharacterBase

#include "Basic.hpp"

#include "BP_PlayerCharacterBase_classes.hpp"
#include "BP_PlayerCharacterBase_parameters.hpp"


namespace SDK
{

// Function BP_PlayerCharacterBase.BP_PlayerCharacterBase_C.BndEvt__BP_PlayerCharacterBase_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_PlayerCharacterBase_C::BndEvt__BP_PlayerCharacterBase_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacterBase_C", "BndEvt__BP_PlayerCharacterBase_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_PlayerCharacterBase_C_BndEvt__BP_PlayerCharacterBase_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacterBase.BP_PlayerCharacterBase_C.ExecuteUbergraph_BP_PlayerCharacterBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacterBase_C::ExecuteUbergraph_BP_PlayerCharacterBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacterBase_C", "ExecuteUbergraph_BP_PlayerCharacterBase");

	Params::BP_PlayerCharacterBase_C_ExecuteUbergraph_BP_PlayerCharacterBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacterBase.BP_PlayerCharacterBase_C.FoliageInteractionGetOwnerInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CurrentPosition                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CurrentForwardVector                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacterBase_C::FoliageInteractionGetOwnerInfo(struct FVector* CurrentPosition, struct FVector* CurrentForwardVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacterBase_C", "FoliageInteractionGetOwnerInfo");

	Params::BP_PlayerCharacterBase_C_FoliageInteractionGetOwnerInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentPosition != nullptr)
		*CurrentPosition = std::move(Parms.CurrentPosition);

	if (CurrentForwardVector != nullptr)
		*CurrentForwardVector = std::move(Parms.CurrentForwardVector);
}


// Function BP_PlayerCharacterBase.BP_PlayerCharacterBase_C.FoliageInteractionGetTrail
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldAddTrail                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TrailVelocity                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TrailLocaltion                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TrailRadius                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TrailAlpha                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacterBase_C::FoliageInteractionGetTrail(bool* ShouldAddTrail, struct FVector* TrailVelocity, struct FVector* TrailLocaltion, double* TrailRadius, double* TrailAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacterBase_C", "FoliageInteractionGetTrail");

	Params::BP_PlayerCharacterBase_C_FoliageInteractionGetTrail Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldAddTrail != nullptr)
		*ShouldAddTrail = Parms.ShouldAddTrail;

	if (TrailVelocity != nullptr)
		*TrailVelocity = std::move(Parms.TrailVelocity);

	if (TrailLocaltion != nullptr)
		*TrailLocaltion = std::move(Parms.TrailLocaltion);

	if (TrailRadius != nullptr)
		*TrailRadius = Parms.TrailRadius;

	if (TrailAlpha != nullptr)
		*TrailAlpha = Parms.TrailAlpha;
}


// Function BP_PlayerCharacterBase.BP_PlayerCharacterBase_C.GetInteractions
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Ratio                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Iteration                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FBS_FluxInteractionData>  Interactions                                           (Parm, OutParm)

void ABP_PlayerCharacterBase_C::GetInteractions(double Ratio, int32 Iteration, TArray<struct FBS_FluxInteractionData>* Interactions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacterBase_C", "GetInteractions");

	Params::BP_PlayerCharacterBase_C_GetInteractions Parms{};

	Parms.Ratio = Ratio;
	Parms.Iteration = Iteration;

	UObject::ProcessEvent(Func, &Parms);

	if (Interactions != nullptr)
		*Interactions = std::move(Parms.Interactions);
}


// Function BP_PlayerCharacterBase.BP_PlayerCharacterBase_C.GetOceanHeight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacterBase_C::GetOceanHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacterBase_C", "GetOceanHeight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacterBase.BP_PlayerCharacterBase_C.PlayVideo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          VideoTexture                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacterBase_C::PlayVideo(class UObject* VideoTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacterBase_C", "PlayVideo");

	Params::BP_PlayerCharacterBase_C_PlayVideo Parms{};

	Parms.VideoTexture = VideoTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacterBase.BP_PlayerCharacterBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerCharacterBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacterBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacterBase.BP_PlayerCharacterBase_C.GetNiagaraSysRecover
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UHTNiagaraComponent*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UHTNiagaraComponent* ABP_PlayerCharacterBase_C::GetNiagaraSysRecover() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacterBase_C", "GetNiagaraSysRecover");

	Params::BP_PlayerCharacterBase_C_GetNiagaraSysRecover Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

