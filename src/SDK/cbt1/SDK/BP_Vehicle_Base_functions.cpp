#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Vehicle_Base

#include "Basic.hpp"

#include "BP_Vehicle_Base_classes.hpp"
#include "BP_Vehicle_Base_parameters.hpp"


namespace SDK
{

// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_CloseDoor
// (BlueprintEvent)

void ABP_Vehicle_Base_C::BPCall_CloseDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_CloseDoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_OpenDoor
// (BlueprintEvent)

void ABP_Vehicle_Base_C::BPCall_OpenDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_OpenDoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_OperateDoubleFlash
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TurnOn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Vehicle_Base_C::BPCall_OperateDoubleFlash(bool TurnOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_OperateDoubleFlash");

	Params::BP_Vehicle_Base_C_BPCall_OperateDoubleFlash Parms{};

	Parms.TurnOn = TurnOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_OperateFrontLights
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TurnOn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Vehicle_Base_C::BPCall_OperateFrontLights(bool TurnOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_OperateFrontLights");

	Params::BP_Vehicle_Base_C_BPCall_OperateFrontLights Parms{};

	Parms.TurnOn = TurnOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_StartEngine
// (BlueprintEvent)

void ABP_Vehicle_Base_C::BPCall_StartEngine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_StartEngine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_StartTireNoise
// (BlueprintEvent)

void ABP_Vehicle_Base_C::BPCall_StartTireNoise()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_StartTireNoise");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_StartTireSkip
// (BlueprintEvent)

void ABP_Vehicle_Base_C::BPCall_StartTireSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_StartTireSkip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_StopEngine
// (BlueprintEvent)

void ABP_Vehicle_Base_C::BPCall_StopEngine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_StopEngine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_StopTireNoise
// (BlueprintEvent)

void ABP_Vehicle_Base_C::BPCall_StopTireNoise()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_StopTireNoise");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_StopTireSkip
// (BlueprintEvent)

void ABP_Vehicle_Base_C::BPCall_StopTireSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_StopTireSkip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_SwitchFPP
// (BlueprintEvent)

void ABP_Vehicle_Base_C::BPCall_SwitchFPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_SwitchFPP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_SwitchTPP
// (BlueprintEvent)

void ABP_Vehicle_Base_C::BPCall_SwitchTPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_SwitchTPP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.BPCall_VehicleMoveGroundChanged
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             GroundTypeName                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Vehicle_Base_C::BPCall_VehicleMoveGroundChanged(const class FName& GroundTypeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "BPCall_VehicleMoveGroundChanged");

	Params::BP_Vehicle_Base_C_BPCall_VehicleMoveGroundChanged Parms{};

	Parms.GroundTypeName = GroundTypeName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.ExecuteUbergraph_BP_Vehicle_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Vehicle_Base_C::ExecuteUbergraph_BP_Vehicle_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "ExecuteUbergraph_BP_Vehicle_Base");

	Params::BP_Vehicle_Base_C_ExecuteUbergraph_BP_Vehicle_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.GetRainDropsActor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::GetRainDropsActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "GetRainDropsActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.HandleHandbrakeStart
// (BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::HandleHandbrakeStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "HandleHandbrakeStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.HandleHandbrakeStop
// (BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::HandleHandbrakeStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "HandleHandbrakeStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.HandleOnBrakeStart
// (BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::HandleOnBrakeStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "HandleOnBrakeStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.HandleOnBrakeStop
// (BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::HandleOnBrakeStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "HandleOnBrakeStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.HandleOnReverseStart
// (BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::HandleOnReverseStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "HandleOnReverseStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.HandleOnReverseStop
// (BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::HandleOnReverseStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "HandleOnReverseStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.HandleTurnLeftStart
// (BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::HandleTurnLeftStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "HandleTurnLeftStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.HandleTurnLeftStop
// (BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::HandleTurnLeftStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "HandleTurnLeftStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.HandleTurnRightStart
// (BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::HandleTurnRightStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "HandleTurnRightStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.HandleTurnRightStop
// (BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::HandleTurnRightStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "HandleTurnRightStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.InitVehicleLights
// (BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::InitVehicleLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "InitVehicleLights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Vehicle_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Vehicle_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "ReceiveTick");

	Params::BP_Vehicle_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.SequeceCarLightFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::SequeceCarLightFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "SequeceCarLightFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.UpdateRainDropsEffect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::UpdateRainDropsEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "UpdateRainDropsEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.UpdateRainMask
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::UpdateRainMask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "UpdateRainMask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Vehicle_Base.BP_Vehicle_Base_C.WheelRippleEffectBeginPlay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Vehicle_Base_C::WheelRippleEffectBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Vehicle_Base_C", "WheelRippleEffectBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

