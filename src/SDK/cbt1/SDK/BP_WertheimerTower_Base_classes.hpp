#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WertheimerTower_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HTGame_structs.hpp"
#include "HTGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WertheimerTower_Base.BP_WertheimerTower_Base_C
// 0x00B0 (0x0BD8 - 0x0B28)
class ABP_WertheimerTower_Base_C : public AHTHeterotopiaActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_XL_WitenheimerTower_02;                         // 0x0B38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_XL_WitenheimerTower_01;                         // 0x0B40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInteractEntry>                 InteractEntries;                                   // 0x0B48(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          NeedQuestCondition;                                // 0x0B58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5875[0x7];                                     // 0x0B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               M_Common_01_window_Inst1;                          // 0x0B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   In_Sequence_ID;                                    // 0x0B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHTPlayerController*                    SequencePlayerController;                          // 0x0B70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        WertheimerValueDangerLevel0;                       // 0x0B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WertheimerValueDangerLevel1;                       // 0x0B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, double>                           DangerLevelToColor;                                // 0x0B88(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BPActived(class AHTPlayerController* ByPC);
	void BPGetInteractEntries(class AHTPlayerController* ByPC, TArray<struct FInteractEntry>* OutInteractEntries);
	void BPInteractFinished(class AHTPlayerController* ByPC, int32 InteractIndex);
	void BPOnMainRoleLoadFinished(class AHTPlayerState* PlayerState);
	void Change_Wertheimer_Color(const int32& DangerLevel);
	void Change_Wertheimer_Value(class AHTPlayerState* PlayerState, double WertheimerValue);
	void ExecuteUbergraph_BP_WertheimerTower_Base(int32 EntryPoint);
	void OnSequenceStopped_Event(class ULevelSequence* LevelSequence, const class FName& InMediaID);
	void OnWertheimerValueChangedDelegate_Event(class AHTPlayerState* PlayerState, const class FString& InExploreID, float CurrentValue, float RemainValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WertheimerTower_Base_C">();
	}
	static class ABP_WertheimerTower_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WertheimerTower_Base_C>();
	}
};

}

