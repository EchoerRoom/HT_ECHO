#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GlideBlueprintBase_BP

#include "Basic.hpp"

#include "GlideBlueprintBase_BP_classes.hpp"
#include "GlideBlueprintBase_BP_parameters.hpp"


namespace SDK
{

// Function GlideBlueprintBase_BP.GlideBlueprintBase_BP_C.ExecuteUbergraph_GlideBlueprintBase_BP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGlideBlueprintBase_BP_C::ExecuteUbergraph_GlideBlueprintBase_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlideBlueprintBase_BP_C", "ExecuteUbergraph_GlideBlueprintBase_BP");

	Params::GlideBlueprintBase_BP_C_ExecuteUbergraph_GlideBlueprintBase_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlideBlueprintBase_BP.GlideBlueprintBase_BP_C.OnBrokeGliding
// (BlueprintCallable, BlueprintEvent)

void AGlideBlueprintBase_BP_C::OnBrokeGliding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlideBlueprintBase_BP_C", "OnBrokeGliding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlideBlueprintBase_BP.GlideBlueprintBase_BP_C.OnEnterGliding
// (BlueprintCallable, BlueprintEvent)

void AGlideBlueprintBase_BP_C::OnEnterGliding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlideBlueprintBase_BP_C", "OnEnterGliding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlideBlueprintBase_BP.GlideBlueprintBase_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AGlideBlueprintBase_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlideBlueprintBase_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlideBlueprintBase_BP.GlideBlueprintBase_BP_C.SetNiagaraActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGlideBlueprintBase_BP_C::SetNiagaraActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlideBlueprintBase_BP_C", "SetNiagaraActive");

	Params::GlideBlueprintBase_BP_C_SetNiagaraActive Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlideBlueprintBase_BP.GlideBlueprintBase_BP_C.Update Owner Pawn
// (Public, BlueprintCallable, BlueprintEvent)

void AGlideBlueprintBase_BP_C::Update_Owner_Pawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlideBlueprintBase_BP_C", "Update Owner Pawn");

	UObject::ProcessEvent(Func, nullptr);
}

}

