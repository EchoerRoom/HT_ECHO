#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HTGame

#include "Basic.hpp"

#include "MassEntity_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "StructUtils_structs.hpp"
#include "SlateCore_structs.hpp"
#include "HottaFramework_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayCameras_structs.hpp"
#include "MassAIBehavior_structs.hpp"
#include "InputCore_structs.hpp"
#include "AIModule_structs.hpp"
#include "MassRepresentation_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "AnimationWarpingRuntime_structs.hpp"
#include "MassReplication_structs.hpp"
#include "DataRegistry_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "MassMovement_structs.hpp"
#include "MassCommon_structs.hpp"
#include "ZoneGraph_structs.hpp"
#include "StateTreeModule_structs.hpp"
#include "MassSpawner_structs.hpp"
#include "Slate_structs.hpp"
#include "CommonDefine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "MassTraffic_structs.hpp"
#include "MovieScene_structs.hpp"
#include "DlgSystem_structs.hpp"
#include "SmartObjectsModule_structs.hpp"


namespace SDK
{

// Enum HTGame.EHTCustomHideType
// NumValues: 0x0018
enum class EHTCustomHideType : uint8
{
	Other                                    = 0,
	DefaultHide                              = 1,
	Camera                                   = 2,
	Silence                                  = 3,
	Owner                                    = 4,
	WeaponRessolve                           = 5,
	PlayMontage                              = 6,
	ChangeCharacter                          = 7,
	Cinematic                                = 8,
	DeactivateAI                             = 9,
	PassiveAggro                             = 10,
	InDialog                                 = 11,
	InSkill                                  = 12,
	Selfie                                   = 13,
	Cooking                                  = 14,
	SetViewTarget                            = 15,
	WaitMainRoleFinish                       = 16,
	ActiveShow                               = 17,
	VisualHide                               = 18,
	GM                                       = 19,
	Sneak                                    = 20,
	HideVolime                               = 21,
	BlueprintCall                            = 22,
	EHTCustomHideType_MAX                    = 23,
};

// Enum HTGame.ECustomTimeDilationType
// NumValues: 0x0009
enum class ECustomTimeDilationType : uint8
{
	HitPause                                 = 0,
	TimeDilationVolume                       = 1,
	TimeDilationExtremeTime                  = 2,
	TimeDilationBuffEffect                   = 3,
	TimeDilationPhantomEffect                = 4,
	TimeDilationOwner                        = 5,
	TimeDilationGamePaused                   = 6,
	TimeDilationMax                          = 7,
	ECustomTimeDilationType_MAX              = 8,
};

// Enum HTGame.EInteractWidgetStyle
// NumValues: 0x0003
enum class EInteractWidgetStyle : uint8
{
	Dialogue                                 = 0,
	MainDialogue                             = 1,
	MAX                                      = 2,
};

// Enum HTGame.ENPCMessageShowType
// NumValues: 0x0003
enum class ENPCMessageShowType : uint8
{
	Bubble                                   = 0,
	UI                                       = 1,
	ENPCMessageShowType_MAX                  = 2,
};

// Enum HTGame.ESpawnResultsOperation
// NumValues: 0x0003
enum class ESpawnResultsOperation : uint8
{
	AND                                      = 0,
	OR                                       = 1,
	ESpawnResultsOperation_MAX               = 2,
};

// Enum HTGame.EHTTriggerFuncType
// NumValues: 0x0005
enum class EHTTriggerFuncType : uint8
{
	FuncNull                                 = 0,
	TeachGuide                               = 1,
	Illustrated                              = 2,
	TriggerFunc_Max                          = 3,
	EHTTriggerFuncType_MAX                   = 4,
};

// Enum HTGame.EHTSpawnPlatform
// NumValues: 0x0004
enum class EHTSpawnPlatform : uint8
{
	All                                      = 0,
	Desktop                                  = 1,
	Mobile                                   = 2,
	EHTSpawnPlatform_MAX                     = 3,
};

// Enum HTGame.EHTSpawnMode
// NumValues: 0x0004
enum class EHTSpawnMode : uint8
{
	None                                     = 0,
	Server                                   = 1,
	Client                                   = 2,
	EHTSpawnMode_MAX                         = 3,
};

// Enum HTGame.EVisualActorSpecialState
// NumValues: 0x0004
enum class EVisualActorSpecialState : uint8
{
	None                                     = 0,
	VisualHide                               = 1,
	UnVisualHide                             = 2,
	EVisualActorSpecialState_MAX             = 3,
};

// Enum HTGame.ECampDefinition
// NumValues: 0x0007
enum class ECampDefinition : uint8
{
	CampA                                    = 0,
	CampB                                    = 1,
	CampC                                    = 2,
	CampD                                    = 3,
	CampE                                    = 4,
	CampMax                                  = 5,
	ECampDefinition_MAX                      = 6,
};

// Enum HTGame.EAbyssCloneItemState
// NumValues: 0x0004
enum class EAbyssCloneItemState : uint8
{
	ItemState_Unbind                         = 0,
	ItemState_Binding                        = 1,
	ItemState_Binded                         = 2,
	ItemState_MAX                            = 3,
};

// Enum HTGame.EAbyssResponseType
// NumValues: 0x0006
enum class EAbyssResponseType : uint8
{
	AbyssResponse_GetLevelAward              = 0,
	AbyssResponse_GetStarAward               = 1,
	AbyssResponse_RemoveLevelData            = 2,
	AbyssResponse_AssistItem                 = 3,
	AbyssResponse_ItemBind                   = 4,
	AbyssResponse_MAX                        = 5,
};

// Enum HTGame.EQuestStatus
// NumValues: 0x0008
enum class EQuestStatus : uint8
{
	EQS_CAN_ACCEPT                           = 0,
	EQS_IN_PROGRESS                          = 1,
	EQS_CAN_SUBMIT                           = 2,
	EQS_SUBMITTED                            = 3,
	EQS_FAILED                               = 4,
	EQS_NOT_SATISFY                          = 5,
	EQS_INVALID                              = 6,
	EQS_MAX                                  = 7,
};

// Enum HTGame.EStaticToolType
// NumValues: 0x000B
enum class EStaticToolType : uint8
{
	STATIC_TOOL_TYPE_NONE                    = 0,
	STATIC_TOOL_TYPE_ROLE_EXP                = 1,
	STATIC_TOOL_TYPE_ROLE_ADDHP              = 2,
	STATIC_TOOL_TYPE_ROLE_ADDBUFF            = 3,
	STATIC_TOOL_TYPE_ROLE_REVIVE             = 4,
	STATIC_TOOL_TYPE_OPEN_UI                 = 5,
	STATIC_TOOL_TYPE_SHOW_DESCRIPTION        = 6,
	STATIC_TOOL_TYPE_TREASURE_BOX            = 7,
	STATIC_TOOL_TYPE_ADD_MAX_STRENGTH        = 8,
	STATIC_TOOL_TYPE_STORE_MANAGEMENT        = 9,
	STATIC_TOOL_TYPE_MAX                     = 10,
};

// Enum HTGame.EItemQuality
// NumValues: 0x0008
enum class EItemQuality : uint8
{
	ITEM_QUALITY_WHITE                       = 0,
	ITEM_QUALITY_GREEN                       = 1,
	ITEM_QUALITY_BLUE                        = 2,
	ITEM_QUALITY_PURPLE                      = 3,
	ITEM_QUALITY_ORANGE                      = 4,
	ITEM_QUALITY_RED                         = 5,
	ITEM_QUALITY_NONE                        = 6,
	ITEM_QUALITY_MAX                         = 7,
};

// Enum HTGame.EDynamicChangeEntryType
// NumValues: 0x0006
enum class EDynamicChangeEntryType : uint8
{
	None                                     = 0,
	RandomChange                             = 1,
	ChangeByRowID                            = 2,
	InterfaceChange                          = 3,
	ChangeAllByRowID                         = 4,
	EDynamicChangeEntryType_MAX              = 5,
};

// Enum HTGame.EAILeaveBattleType
// NumValues: 0x0004
enum class EAILeaveBattleType : uint8
{
	AILBNormal                               = 0,
	AILBFadeSpawn                            = 1,
	AILBMax                                  = 2,
	EAILeaveBattleType_MAX                   = 3,
};

// Enum HTGame.EAISpawnLevelType
// NumValues: 0x0004
enum class EAISpawnLevelType : uint8
{
	SameWithAttacker                         = 0,
	PermanentLevel                           = 1,
	SameWithServerLevel                      = 2,
	EAISpawnLevelType_MAX                    = 3,
};

// Enum HTGame.HTConstGait
// NumValues: 0x0006
enum class EHTConstGait : uint8
{
	GaitNone                                 = 0,
	GaitWalking                              = 1,
	GaitRunning                              = 2,
	GaitSpriting                             = 3,
	MoveAnim_MAX                             = 4,
	HTConstGait_MAX                          = 5,
};

// Enum HTGame.ERealEstatePurchaseResult
// NumValues: 0x0004
enum class ERealEstatePurchaseResult : uint8
{
	None                                     = 0,
	Failed                                   = 1,
	Success                                  = 2,
	MAX                                      = 3,
};

// Enum HTGame.ERealEstatePurchaseState
// NumValues: 0x0003
enum class ERealEstatePurchaseState : uint8
{
	NotPurchase                              = 0,
	Purchased                                = 1,
	MAX                                      = 2,
};

// Enum HTGame.ERealEstateSellState
// NumValues: 0x0006
enum class ERealEstateSellState : uint8
{
	None                                     = 0,
	OnSale                                   = 1,
	Purchased                                = 2,
	ForSale                                  = 3,
	SellOut                                  = 4,
	MAX                                      = 5,
};

// Enum HTGame.EStoreBrandMusicType
// NumValues: 0x0004
enum class EStoreBrandMusicType : uint8
{
	StoreBrandMusic_None                     = 0,
	StoreBrandMusic_Open                     = 1,
	StoreBrandMusic_Stop                     = 2,
	StoreBrandMusic_MAX                      = 3,
};

// Enum HTGame.EHTCustomChangeCharacterType
// NumValues: 0x0008
enum class EHTCustomChangeCharacterType : uint8
{
	ChangCoolDown                            = 0,
	PlayMontage                              = 1,
	UIFade                                   = 2,
	SetViewTarget                            = 3,
	Buff                                     = 4,
	IsSwitching                              = 5,
	Other                                    = 6,
	EHTCustomChangeCharacterType_MAX         = 7,
};

// Enum HTGame.EMiniMapIconState
// NumValues: 0x0008
enum class EMiniMapIconState : uint8
{
	None                                     = 0,
	Default                                  = 1,
	Inactive                                 = 2,
	Actived                                  = 3,
	Disable                                  = 4,
	ForSale                                  = 5,
	SellOut                                  = 6,
	MAX                                      = 7,
};

// Enum HTGame.EMiniMapShowMode
// NumValues: 0x0003
enum class EMiniMapShowMode : uint8
{
	Normal                                   = 0,
	Explored                                 = 1,
	EMiniMapShowMode_MAX                     = 2,
};

// Enum HTGame.EMiniMapType
// NumValues: 0x0006
enum class EMiniMapType : uint8
{
	MiniMap                                  = 0,
	BigMap                                   = 1,
	RealEstateMap                            = 2,
	LikeabilityMap                           = 3,
	StoreSiteMap                             = 4,
	MAX                                      = 5,
};

// Enum HTGame.EHTStateExecutionPolicy
// NumValues: 0x0004
enum class EHTStateExecutionPolicy : uint8
{
	Local                                    = 0,
	Server                                   = 1,
	Client                                   = 2,
	EHTStateExecutionPolicy_MAX              = 3,
};

// Enum HTGame.EHTCharacterStateType
// NumValues: 0x002E
enum class EHTCharacterStateType : uint8
{
	Invalid                                  = 0,
	Falling                                  = 1,
	Swimming                                 = 2,
	Flying                                   = 3,
	Exhausting                               = 4,
	HitStun                                  = 5,
	Surmount                                 = 6,
	Sprinting                                = 7,
	Dead                                     = 8,
	Jumping                                  = 9,
	Climbing                                 = 10,
	BowAimming                               = 11,
	UseAbilities                             = 12,
	PlayerFightState                         = 13,
	CaseInteract                             = 14,
	InteractiveAction                        = 15,
	TakingElevator                           = 16,
	Dialogue                                 = 17,
	Sequence                                 = 18,
	SwitchCharacter                          = 19,
	GetOnVehicle                             = 20,
	Driving                                  = 21,
	GetOffVehicle                            = 22,
	Patrol                                   = 23,
	LevelTransfer                            = 24,
	NPCShop                                  = 25,
	POCKMON                                  = 26,
	InRoom                                   = 27,
	CloneNpcInteract                         = 28,
	InteractSmartObject                      = 29,
	InteractInfoMenu                         = 30,
	Common_Open_UI                           = 31,
	Gliding                                  = 32,
	Leisure                                  = 33,
	HandmadeShelf                            = 34,
	FPItemInteract                           = 35,
	ChangeCamera                             = 36,
	Diving                                   = 37,
	Sneak                                    = 38,
	BoardBus                                 = 39,
	BoardTrain                               = 40,
	DrumPlay                                 = 41,
	AttachedVehicleSeat                      = 42,
	Sleep                                    = 43,
	VisionSoulCollect                        = 44,
	Max                                      = 45,
};

// Enum HTGame.EItemType
// NumValues: 0x0020
enum class EItemType : uint8
{
	ITEM_TYPE_NONE                           = 0,
	ITEM_TYPE_EQUIPMENT                      = 1,
	ITEM_TYPE_CONSUMABLE                     = 2,
	ITEM_TYPE_CHARACTER                      = 3,
	ITEM_TYPE_CAPITAL                        = 4,
	ITEM_TYPE_FORK                           = 5,
	ITEM_TYPE_QUEST                          = 6,
	ITEM_TYPE_IMPORTANT                      = 7,
	ITEM_TYPE_FORK_MATERIAL                  = 8,
	ITEM_TYPE_COOK_BOOK                      = 9,
	ITEM_TYPE_COOK_MATERIAL                  = 10,
	ITEM_TYPE_COOK_FOOD                      = 11,
	ITEM_TYPE_CHARACTER_FRAGMENT             = 12,
	ITEM_TYPE_EQUIPMENT_CORE                 = 13,
	ITEM_TYPE_AUTO_USE                       = 14,
	ITEM_TYPE_SHOWCASE                       = 15,
	ITEM_TYPE_STOREM                         = 16,
	ITEM_TYPE_FURNITURE                      = 17,
	ITEM_TYPE_LIKEABILITY_GIFT               = 18,
	ITEM_TYPE_EQUIPMENT_MATERIAL             = 19,
	ITEM_TYPE_MUSIC                          = 20,
	ITEM_TYPE_Lottery                        = 21,
	ITEM_TYPE_VEHICLE_KEY                    = 22,
	ITEM_TYPE_LANDSPACE                      = 23,
	ITEM_TYPE_FLOWERPOT                      = 24,
	ITEM_TYPE_RENTAL_VEHICLE                 = 25,
	ITEM_TYPE_FIGURES                        = 26,
	ITEM_TYPE_FLOWER                         = 27,
	ITEM_TYPE_BIG_FLOWER                     = 28,
	ITEM_TYPE_LANDSPACE_CIRCLE               = 29,
	ITEM_TYPE_GACHA_BOX                      = 30,
	ITEM_TYPE_MAX                            = 31,
};

// Enum HTGame.ENotifyItemType
// NumValues: 0x0028
enum class ENotifyItemType : uint8
{
	NOTIFY_ITEM_NONE                         = 0,
	NOTIFY_ITEM_ADD                          = 1,
	NOTIFY_ITEM_REMOVE                       = 2,
	NOTIFY_INIT_ITEMS                        = 3,
	NOTIFY_INIT_CHARACTER                    = 4,
	NOTIFY_EQUIP_CHARACTER                   = 5,
	NOTIFY_UNEQUIP_CHARACTER                 = 6,
	NOTIFY_SYNC_CHARACTER                    = 7,
	NOTIFY_ITEM_SETAMOUNT                    = 8,
	NOTIFY_CHARACTER_EXP                     = 9,
	NOTIFY_CHARACTER_LEVEL                   = 10,
	NOTIFY_CHARACTER_BREAKTHROUGH_LEVEL      = 11,
	NOTIFY_CHARACTER_FORK                    = 12,
	NOTIFY_CHARACTER_FORK_ID                 = 13,
	NOTIFY_CHARACTER_FORK_LOCK               = 14,
	NOTIFY_ITEM_SHORTCUT_TIMER               = 15,
	NOTIFY_FORK_STRENGTHENLEVEL              = 16,
	NOTIFY_FORK_EXP                          = 17,
	NOTIFY_FORK_BREAKTHROUGH                 = 18,
	NOTIFY_FORK_UPGRADESTAR                  = 19,
	NOTIFY_CHARACTER_HP                      = 20,
	NOTIFY_CHARACTER_DEAD                    = 21,
	NOTIFY_CHARACTER_AEAKEN_LEVEL            = 22,
	NOTIFY_CHARACTER_ABILITY_LEVE_CHANGED    = 23,
	NOTIFY_CHARACTER_FILE_READ               = 24,
	NOTIFY_CHARACTER_EQUIPMENTSLOT_CHANGE    = 25,
	NOTIFY_EQUIPMENT_CHARACTER_ID            = 26,
	NOTIFY_EQUIPMENT_STRENGTHEN_LEVEL        = 27,
	NOTIFY_EQUIPMENT_EXP                     = 28,
	NOTIFY_CHARACTER_EQUIP_CORE              = 29,
	NOTIFY_EQUIPMENT_LOCK                    = 30,
	NOTIFY_CHARACTER_AWAKEN_EFFECT_CHANGE    = 31,
	NOTIFY_CHARACTER_SATIETY                 = 32,
	NOTIFY_CHARACTER_SATIETYTIME             = 33,
	NOTIFY_ITEM_ADD_NOTIFY                   = 34,
	NOTIFY_CHARACTER_ATTRIBUTE_ACTIVED       = 35,
	NOTIFY_CHARACTER_PASSIVESKILL_ACTIVED    = 36,
	NOTIFY_CHARACTER_ATTRIBUTE_DATA          = 37,
	NOTIFY_CHARACTER_PASSIVESKILL_DATA       = 38,
	NOTIFY_MAX                               = 39,
};

// Enum HTGame.EItemUpdateType
// NumValues: 0x0003
enum class EItemUpdateType : uint8
{
	AmountChange                             = 0,
	ShortcutUseTimer                         = 1,
	MAX                                      = 2,
};

// Enum HTGame.EAbyssOperaType
// NumValues: 0x000B
enum class EAbyssOperaType : uint8
{
	OperaType_None                           = 0,
	OperaType_SellItem                       = 1,
	OperaType_BuyItem                        = 2,
	OperaType_BindItem                       = 3,
	OperaType_RecoveryItem                   = 4,
	OperaType_GetLevelAward                  = 5,
	OperaType_GetStarAward                   = 6,
	OperaType_EntryClone                     = 7,
	OperaType_EquipCharacter                 = 8,
	OperaType_AssistItem                     = 9,
	OperaType_MAX                            = 10,
};

// Enum HTGame.ECharacterFileType
// NumValues: 0x0005
enum class ECharacterFileType : uint8
{
	CharacterFileType_None                   = 0,
	CharacterFileType_Detail                 = 1,
	CharacterFileType_Audio_Daily            = 2,
	CharacterFileType_Audio_Battle           = 3,
	CharacterFileType_MAX                    = 4,
};

// Enum HTGame.EQuestRpcRequireType
// NumValues: 0x0004
enum class EQuestRpcRequireType : uint8
{
	QRT_COMPLETE                             = 0,
	QRT_UPDATE                               = 1,
	QRT_ACCEPT                               = 2,
	QRT_MAX                                  = 3,
};

// Enum HTGame.EEquipmentGeometryType
// NumValues: 0x0013
enum class EEquipmentGeometryType : uint8
{
	EquipmentGeometry_None                   = 0,
	EquipmentGeometry_One                    = 1,
	EquipmentGeometry_Hen2                   = 2,
	EquipmentGeometry_Shu2                   = 3,
	EquipmentGeometry_Hen3                   = 4,
	EquipmentGeometry_Shu3                   = 5,
	EquipmentGeometry_Hen4                   = 6,
	EquipmentGeometry_Shu4                   = 7,
	EquipmentGeometry_ZhiJiao1               = 8,
	EquipmentGeometry_ZhiJiao2               = 9,
	EquipmentGeometry_ZhiJiao3               = 10,
	EquipmentGeometry_ZhiJiao4               = 11,
	EquipmentGeometry_Z1                     = 12,
	EquipmentGeometry_Z2                     = 13,
	EquipmentGeometry_Z3                     = 14,
	EquipmentGeometry_Z4                     = 15,
	EquipmentGeometry_CoreL                  = 100,
	EquipmentGeometry_CoreR                  = 101,
	EquipmentGeometry_MAX                    = 102,
};

// Enum HTGame.EDelegateMissionQuestState
// NumValues: 0x0005
enum class EDelegateMissionQuestState : uint8
{
	CanAccept                                = 0,
	InProgress                               = 1,
	CanSubmit                                = 2,
	AlreadyGet                               = 3,
	EDelegateMissionQuestState_MAX           = 4,
};

// Enum HTGame.ETrialType
// NumValues: 0x0004
enum class ETrialType : uint8
{
	Gold                                     = 0,
	Exp                                      = 1,
	Fork                                     = 2,
	Max                                      = 3,
};

// Enum HTGame.ETrialState
// NumValues: 0x0004
enum class ETrialState : uint8
{
	Active                                   = 0,
	Award                                    = 1,
	Finish                                   = 2,
	ETrialState_MAX                          = 3,
};

// Enum HTGame.EDivinationType
// NumValues: 0x0006
enum class EDivinationType : uint8
{
	None                                     = 0,
	Ability                                  = 1,
	Treasure                                 = 2,
	Fetter                                   = 3,
	DivinationMax                            = 4,
	EDivinationType_MAX                      = 5,
};

// Enum HTGame.ECardPoolType
// NumValues: 0x0006
enum class ECardPoolType : uint8
{
	CardPool_NULL                            = 0,
	CardPool_NewRole                         = 1,
	CardPool_Character                       = 2,
	CardPool_Weapon                          = 3,
	CardPool_Permanent_Character             = 4,
	CardPool_MAX                             = 5,
};

// Enum HTGame.ERoleSex
// NumValues: 0x0003
enum class ERoleSex : uint8
{
	Female                                   = 0,
	Male                                     = 1,
	MAX                                      = 2,
};

// Enum HTGame.EReactionResultType
// NumValues: 0x0008
enum class EReactionResultType : uint8
{
	REACTION_RESULT_TYPE_0                   = 0,
	REACTION_RESULT_TYPE_1                   = 1,
	REACTION_RESULT_TYPE_2                   = 2,
	REACTION_RESULT_TYPE_3                   = 3,
	REACTION_RESULT_TYPE_4                   = 4,
	REACTION_RESULT_TYPE_5                   = 5,
	REACTION_RESULT_TYPE_6                   = 6,
	REACTION_RESULT_TYPE_MAX                 = 7,
};

// Enum HTGame.ELikeabilityChatPushType
// NumValues: 0x0005
enum class ELikeabilityChatPushType : uint8
{
	Immediately                              = 0,
	SwitchScene                              = 1,
	NextDay                                  = 2,
	GameTime                                 = 3,
	ELikeabilityChatPushType_MAX             = 4,
};

// Enum HTGame.ELikeabilityChatState
// NumValues: 0x0005
enum class ELikeabilityChatState : uint8
{
	UnKown                                   = 0,
	Unread                                   = 1,
	Readed                                   = 2,
	Jumped                                   = 3,
	ELikeabilityChatState_MAX                = 4,
};

// Enum HTGame.EPokemonGameRoundActionType
// NumValues: 0x0006
enum class EPokemonGameRoundActionType : uint8
{
	None                                     = 0,
	Talking                                  = 1,
	Weight                                   = 2,
	RunOff                                   = 3,
	EnemyRound                               = 33,
	EPokemonGameRoundActionType_MAX          = 34,
};

// Enum HTGame.EPokemonGameCharacterTeamPlace
// NumValues: 0x0004
enum class EPokemonGameCharacterTeamPlace : uint8
{
	None                                     = 0,
	Own                                      = 1,
	Enemy                                    = 2,
	EPokemonGameCharacterTeamPlace_MAX       = 3,
};

// Enum HTGame.EPokemonGameRoundStage
// NumValues: 0x0005
enum class EPokemonGameRoundStage : uint8
{
	None                                     = 0,
	Initial                                  = 1,
	Looping                                  = 2,
	Final                                    = 3,
	EPokemonGameRoundStage_MAX               = 4,
};

// Enum HTGame.EPokemonGameRoundEnterRequire
// NumValues: 0x0006
enum class EPokemonGameRoundEnterRequire : uint8
{
	None                                     = 0,
	Any                                      = 1,
	RoundCountPassed                         = 2,
	HealthLessThanValue_OwnCharacter         = 3,
	HealthLessThanValue_EnemyCharacter       = 4,
	EPokemonGameRoundEnterRequire_MAX        = 5,
};

// Enum HTGame.EPokemonGameRoundStageState
// NumValues: 0x0005
enum class EPokemonGameRoundStageState : uint8
{
	None                                     = 0,
	Start                                    = 1,
	Processing                               = 2,
	End                                      = 3,
	EPokemonGameRoundStageState_MAX          = 4,
};

// Enum HTGame.ECustomChangeViewState
// NumValues: 0x0007
enum class ECustomChangeViewState : uint8
{
	ECVS_NoState                             = 0,
	ECVS_BeginCameraFadeIn                   = 1,
	ECVS_SetViewTargetBlendIn                = 2,
	ECVS_KeepViewTarget                      = 3,
	ECVS_SetViewTargetBlendOut               = 4,
	ECVS_EndCameraFadeOut                    = 5,
	ECVS_MAX                                 = 6,
};

// Enum HTGame.ESkillInputIDType
// NumValues: 0x0017
enum class ESkillInputIDType : uint8
{
	InputID_None                             = 18446744073709551615,
	InputID_Melee                            = 0,
	InputID_Evade                            = 1,
	InputID_Skill                            = 2,
	InputID_UltSkill                         = 3,
	InputID_ChangeCharacter                  = 4,
	InputID_Food                             = 5,
	InputID_Jump                             = 6,
	InputID_LeaveVines                       = 7,
	InputID_Interact                         = 8,
	InputID_TrackQuest                       = 9,
	InputID_GetOff                           = 10,
	InputID_SwitchCamera                     = 11,
	InputID_Brake                            = 12,
	InputID_HandBrake                        = 13,
	InputID_Gliding                          = 14,
	InputID_ChangeAvatar                     = 15,
	InputID_Aiming                           = 16,
	InputID_LockTarget                       = 17,
	InputID_AdditionalSkill                  = 18,
	InputID_SwitchLockTarget                 = 19,
	InputID_Num                              = 20,
	InputID_Max                              = 255,
};

// Enum HTGame.EAnimInstanceNotifyState
// NumValues: 0x0004
enum class EAnimInstanceNotifyState : uint8
{
	AnimState_Init                           = 0,
	AnimState_Leisure                        = 1,
	AnimState_Reserve                        = 2,
	AnimState_MAX                            = 3,
};

// Enum HTGame.ESkillEffectType
// NumValues: 0x000E
enum class ESkillEffectType : uint8
{
	Effectbegin                              = 0,
	Hit                                      = 1,
	Floating                                 = 2,
	HitBack                                  = 3,
	Hitdown                                  = 4,
	Hitout                                   = 5,
	belinked                                 = 6,
	Halfhit                                  = 7,
	Hitrotate                                = 8,
	Traction                                 = 9,
	Suppress                                 = 10,
	ArmorBroken                              = 11,
	Effectmaxnum                             = 12,
	ESkillEffectType_MAX                     = 13,
};

// Enum HTGame.ECharacterInfoPage
// NumValues: 0x0007
enum class ECharacterInfoPage : uint8
{
	Page_Info                                = 0,
	Page_Fork                                = 1,
	Page_Equip                               = 2,
	Page_Awaken                              = 3,
	Page_Magic                               = 4,
	Page_File                                = 5,
	Page_MAX                                 = 6,
};

// Enum HTGame.ECharacterUIViewType
// NumValues: 0x0009
enum class ECharacterUIViewType : uint8
{
	CHARACTER_VIEWTYPE_NONE                  = 0,
	CHARACTER_VIEWTYPE_FORMATION             = 1,
	CHARACTER_VIEWTYPE_FORMATION_MEMBER      = 2,
	CHARACTER_VIEWTYPE_FORMATION_ALL         = 3,
	CHARACTER_VIEWTYPE_INFO                  = 4,
	CHARACTER_VIEWTYPE_INFO_CHANGE           = 5,
	CHARACTER_VIEWTYPE_FIFTER                = 6,
	CHARACTER_VIEWTYPE_FORKLIST              = 7,
	CHARACTER_VIEWTYPE_MAX                   = 8,
};

// Enum HTGame.EDrumSlotType
// NumValues: 0x0005
enum class EDrumSlotType : uint8
{
	First                                    = 0,
	Second                                   = 1,
	Third                                    = 2,
	Fourth                                   = 3,
	Max                                      = 4,
};

// Enum HTGame.ETrackIconType
// NumValues: 0x000B
enum class ETrackIconType : uint8
{
	EQT_MAIN                                 = 0,
	EQT_SIDE                                 = 1,
	EQT_LIKING                               = 2,
	EOT_MULT_SHOP                            = 3,
	EQT_LEGEND                               = 4,
	EQT_EVERYDAY                             = 5,
	EQT_EVERYDAY_LIKEABILITY                 = 6,
	COMMON                                   = 7,
	TreasureBox                              = 8,
	VisionSoul                               = 9,
	MAX                                      = 10,
};

// Enum HTGame.EAzimuthTreasureBoxType
// NumValues: 0x0005
enum class EAzimuthTreasureBoxType : uint8
{
	TreasureBoxType_None                     = 0,
	TreasureBoxType_Com                      = 1,
	TreasureBoxType_Oracle                   = 2,
	TreasureBoxType_MonsterDrop              = 3,
	TreasureBoxType_Max                      = 4,
};

// Enum HTGame.EAzimuthIndicatorType
// NumValues: 0x0007
enum class EAzimuthIndicatorType : uint8
{
	AT_COM                                   = 0,
	AT_QUEST                                 = 1,
	AT_HARVEST                               = 2,
	AT_TreasureBox                           = 3,
	AT_SummonVehicle                         = 4,
	AT_VisonSoul                             = 5,
	AT_MAX                                   = 6,
};

// Enum HTGame.EObjectiveType
// NumValues: 0x0022
enum class EObjectiveType : uint8
{
	EOT_TALK                                 = 0,
	EOT_KILL                                 = 1,
	EOT_ITEM_BAG                             = 2,
	EOT_CONVOY                               = 3,
	EOT_CONVOY_RANGE                         = 4,
	EOT_ARRIVE                               = 5,
	EOT_SEQUENCE                             = 6,
	EOT_SHOP_BUY                             = 7,
	EOT_SEQUENCE_AFTER_DIALOGUE              = 8,
	EOT_ARRIVE_AREA                          = 9,
	EOT_OPEN_UI                              = 10,
	EOT_CHAT_END                             = 11,
	EOT_INTERACT                             = 12,
	EOT_CHASE_TARGET                         = 13,
	EOT_CHANGE_TIME                          = 14,
	EOT_SLEEP                                = 15,
	EOT_SUB_QUEST                            = 16,
	EOT_ROLE_LEVEL                           = 17,
	EOT_DAILY_SIGN                           = 18,
	EOT_DELEGATE_MISSION                     = 19,
	EOT_STAMINA_USED                         = 20,
	EOT_ABILIRY_USED                         = 21,
	EOT_SEND_GIFT                            = 22,
	EOT_TRIGGER_REACTION                     = 23,
	EOT_ITEM_LEVEL                           = 24,
	EOT_ACTIVE_TELEPORT                      = 25,
	EOT_OPEN_BOX                             = 26,
	EOT_VISION_COMPLETED                     = 27,
	EOT_LIKEABILITY_LEVEL                    = 28,
	EOT_CLONE_COMPLETED                      = 29,
	EOT_STORE_OPEN                           = 30,
	EOT_DIVINATION_LEVEL                     = 31,
	EOT_COOK_BOOK                            = 32,
	EOT_MAX                                  = 33,
};

// Enum HTGame.EHTHoldKeyStatus
// NumValues: 0x0007
enum class EHTHoldKeyStatus : uint8
{
	None                                     = 0,
	Start                                    = 1,
	Break                                    = 2,
	Completed                                = 3,
	Released                                 = 4,
	ShortCompleted                           = 5,
	EHTHoldKeyStatus_MAX                     = 6,
};

// Enum HTGame.EVisionRadarState
// NumValues: 0x0004
enum class EVisionRadarState : uint8
{
	None                                     = 0,
	Tracing                                  = 1,
	InArea                                   = 2,
	EVisionRadarState_MAX                    = 3,
};

// Enum HTGame.EVoiceMsgType
// NumValues: 0x0004
enum class EVoiceMsgType : uint8
{
	Sequence                                 = 0,
	Introduce                                = 1,
	IntroduceSlot                            = 2,
	EVoiceMsgType_MAX                        = 3,
};

// Enum HTGame.ECharacterElementType
// NumValues: 0x0008
enum class ECharacterElementType : uint8
{
	CHARACTER_ELEMENT_TYPE_NORMAL            = 0,
	CHARACTER_ELEMENT_TYPE_COSMOS            = 1,
	CHARACTER_ELEMENT_TYPE_NATURE            = 2,
	CHARACTER_ELEMENT_TYPE_INCANTATION       = 3,
	CHARACTER_ELEMENT_TYPE_CHAOS             = 4,
	CHARACTER_ELEMENT_TYPE_PSYCHE            = 5,
	CHARACTER_ELEMENT_TYPE_LAKSHANA          = 6,
	CHARACTER_ELEMENT_TYPE_MAX               = 7,
};

// Enum HTGame.EShortcutSupplyTouchPlace
// NumValues: 0x0005
enum class EShortcutSupplyTouchPlace : uint8
{
	None                                     = 0,
	StartPoint                               = 1,
	MovePoint                                = 2,
	EndPoint                                 = 3,
	EShortcutSupplyTouchPlace_MAX            = 4,
};

// Enum HTGame.FWorldLevelNotifyState
// NumValues: 0x0005
enum class EFWorldLevelNotifyState : uint8
{
	WorldLevelUp                             = 0,
	WorldLevelDown                           = 1,
	MaxWorldLevelUP                          = 2,
	UnlockBrokenQuest                        = 3,
	FWorldLevelNotifyState_MAX               = 4,
};

// Enum HTGame.EUnbalBarType
// NumValues: 0x0008
enum class EUnbalBarType : uint8
{
	UNBAL_BAR_NORMAL                         = 0,
	UNBAL_BAR_COSMOS                         = 1,
	UNBAL_BAR_NATURE                         = 2,
	UNBAL_BAR_INCANTATION                    = 3,
	UNBAL_BAR_CHAOS                          = 4,
	UNBAL_BAR_PSYCHE                         = 5,
	UNBAL_BAR_LAKSHANA                       = 6,
	UNBAL_BAR_MAX                            = 7,
};

// Enum HTGame.EVehicleModiftResult
// NumValues: 0x0006
enum class EVehicleModiftResult : uint8
{
	EVMR_None                                = 0,
	EVMR_Fail                                = 1,
	EVMR_Success                             = 2,
	EVMR_Current_Lack                        = 3,
	EVMR_Maintain_Success                    = 4,
	EVMR_MAX                                 = 3,
};

// Enum HTGame.EUIPropMessageType
// NumValues: 0x0006
enum class EUIPropMessageType : uint8
{
	None                                     = 0,
	ItemType                                 = 1,
	Quest                                    = 2,
	Common                                   = 3,
	VisionAward                              = 4,
	Max                                      = 5,
};

// Enum HTGame.ESimpleNPCSpecialState
// NumValues: 0x0007
enum class ESimpleNPCSpecialState : uint8
{
	None                                     = 0,
	Hit                                      = 1,
	Frighten                                 = 2,
	Threaten                                 = 3,
	VisualHide                               = 4,
	UnVisualHide                             = 5,
	ESimpleNPCSpecialState_MAX               = 6,
};

// Enum HTGame.EVehicleModuleType
// NumValues: 0x000E
enum class EVehicleModuleType : uint8
{
	EVMT_None                                = 0,
	EVMT_Engine                              = 1,
	EVMT_Gearbox                             = 2,
	EVMT_Brake                               = 3,
	EVMT_Suspension                          = 4,
	EVMT_Color                               = 5,
	EVMT_FrontBodyKit                        = 6,
	EVMT_SideBodyKit                         = 7,
	EVMT_BackBodyKit                         = 8,
	EVMT_Spoiler                             = 9,
	EVMT_Decal                               = 10,
	EVMT_Wheel                               = 11,
	EVMT_EngineHood                          = 12,
	EVMT_Max                                 = 13,
};

// Enum HTGame.EHTStateOperationResultType
// NumValues: 0x000A
enum class EHTStateOperationResultType : uint8
{
	Success                                  = 0,
	Failure                                  = 1,
	InvalidState                             = 2,
	AlreadyInState                           = 3,
	NotFoundState                            = 4,
	NotInState                               = 5,
	ExistBlockedState                        = 6,
	ExistNewEnteredState                     = 7,
	ExistCannotBreakState                    = 8,
	EHTStateOperationResultType_MAX          = 9,
};

// Enum HTGame.EHTStateRelationType
// NumValues: 0x0004
enum class EHTStateRelationType : uint8
{
	Independent                              = 0,
	Blocked                                  = 1,
	Interrupted                              = 2,
	EHTStateRelationType_MAX                 = 3,
};

// Enum HTGame.EGamepadTabMethod
// NumValues: 0x0008
enum class EGamepadTabMethod : uint8
{
	None                                     = 0,
	Shoulder                                 = 1,
	DpadUpDown                               = 2,
	LStick                                   = 3,
	DpadUpDownOrLStick                       = 4,
	DpadLeftRight                            = 5,
	Trigger                                  = 6,
	EGamepadTabMethod_MAX                    = 7,
};

// Enum HTGame.EHTProgressTransitionMode
// NumValues: 0x0004
enum class EHTProgressTransitionMode : uint8
{
	Default                                  = 0,
	Enable                                   = 1,
	Disable                                  = 2,
	EHTProgressTransitionMode_MAX            = 3,
};

// Enum HTGame.EHTWidgetInputMode
// NumValues: 0x0005
enum class EHTWidgetInputMode : uint8
{
	Default                                  = 0,
	GameAndMenu                              = 1,
	Game                                     = 2,
	Menu                                     = 3,
	EHTWidgetInputMode_MAX                   = 4,
};

// Enum HTGame.ECustomHideButtonType
// NumValues: 0x0005
enum class ECustomHideButtonType : uint8
{
	None                                     = 0,
	Blueprint                                = 1,
	Systematic                               = 2,
	InputTypes                               = 4,
	ECustomHideButtonType_MAX                = 5,
};

// Enum HTGame.ESwitchType
// NumValues: 0x001D
enum class ESwitchType : uint8
{
	None                                     = 0,
	AdventureManual                          = 1,
	AdventureManualWizard                    = 2,
	AdventureManualWizardDaily               = 3,
	DelegateMission                          = 4,
	Mail                                     = 5,
	Divination                               = 6,
	Likeability                              = 7,
	Gashapon                                 = 8,
	RealEstate                               = 9,
	Fork                                     = 10,
	Equipment                                = 11,
	FurnitureCollect                         = 12,
	CharacterUpgrade                         = 13,
	Awaken                                   = 14,
	CharacterAbility                         = 15,
	AdjustTime                               = 16,
	Vision                                   = 17,
	VehicleModify                            = 18,
	VehicleRent                              = 19,
	VehicleMaintain                          = 20,
	Room                                     = 21,
	WorldLevel                               = 22,
	Shop                                     = 23,
	VehicleShop                              = 24,
	Clone                                    = 25,
	MonsterDropAward                         = 26,
	VisionSoul                               = 27,
	Max                                      = 28,
};

// Enum HTGame.EFunctionUnlockShowType
// NumValues: 0x0005
enum class EFunctionUnlockShowType : uint8
{
	Visible                                  = 0,
	Collapsed                                = 1,
	CollapsedParent                          = 2,
	Disable                                  = 3,
	EFunctionUnlockShowType_MAX              = 4,
};

// Enum HTGame.ECharacterEquipFilterType
// NumValues: 0x0007
enum class ECharacterEquipFilterType : uint8
{
	Filter_Suit                              = 0,
	Filter_Quality                           = 1,
	Filter_Main_Attr                         = 2,
	Filter_Second_Attr                       = 3,
	Filter_Shape                             = 4,
	Filter_Shape_Core                        = 5,
	Filter_MAX                               = 6,
};

// Enum HTGame.EHTComboBoxListPosition
// NumValues: 0x0004
enum class EHTComboBoxListPosition : uint8
{
	Down                                     = 0,
	Up                                       = 1,
	Auto                                     = 2,
	EHTComboBoxListPosition_MAX              = 3,
};

// Enum HTGame.EQuickMenuSettingsButtonPlace
// NumValues: 0x0005
enum class EQuickMenuSettingsButtonPlace : uint8
{
	None                                     = 0,
	Dpad                                     = 1,
	Stick                                    = 2,
	FaceButton                               = 3,
	EQuickMenuSettingsButtonPlace_MAX        = 4,
};

// Enum HTGame.EQuestType
// NumValues: 0x000C
enum class EQuestType : uint8
{
	EQT_MAIN                                 = 0,
	EQT_SIDE                                 = 1,
	EQT_LIKING                               = 2,
	EOT_MULT_SHOP                            = 3,
	EQT_LEGEND                               = 4,
	EQT_EVERYDAY                             = 5,
	EQT_EVERYDAY_LIKEABILITY                 = 6,
	EQT_ADVENTURE_CHAPTER                    = 7,
	EQT_ADVENTURE_CHAPTER_REWARD             = 8,
	EQT_EVERYDAY_RANDOM                      = 9,
	EQT_MAX                                  = 10,
	EQuestType_MAX                           = 11,
};

// Enum HTGame.EAbyssCloneSystemRPCType
// NumValues: 0x0008
enum class EAbyssCloneSystemRPCType : uint8
{
	Cs_To_Server_Star_Game                   = 0,
	Cs_To_Server_ReOpen_Game                 = 1,
	Cs_To_Server_Exit_Game                   = 2,
	Sc_To_Client_Enter_Abyss_Scene           = 3,
	Sc_To_Client_Start_Spawn_Monster         = 4,
	Sc_To_Client_Pass_Layer_Result           = 5,
	Sc_To_Client_Exit_Clone                  = 6,
	EAbyssCloneSystemRPCType_MAX             = 7,
};

// Enum HTGame.EAbyssClonePassType
// NumValues: 0x0002
enum class EAbyssClonePassType : uint8
{
	KillAll                                  = 0,
	EAbyssClonePassType_MAX                  = 1,
};

// Enum HTGame.EHTAchievementCollectionType
// NumValues: 0x0004
enum class EHTAchievementCollectionType : uint8
{
	None                                     = 0,
	Item                                     = 1,
	GashaItem                                = 2,
	EHTAchievementCollectionType_MAX         = 3,
};

// Enum HTGame.EHTAchievementConsumeType
// NumValues: 0x0006
enum class EHTAchievementConsumeType : uint8
{
	None                                     = 0,
	Vitality                                 = 1,
	Item                                     = 2,
	ButItemCount                             = 3,
	ButRealEstate                            = 4,
	EHTAchievementConsumeType_MAX            = 5,
};

// Enum HTGame.EHTAchievementReceiveRewardFailedReason
// NumValues: 0x0006
enum class EHTAchievementReceiveRewardFailedReason : uint8
{
	None                                     = 0,
	Received                                 = 1,
	Failed                                   = 2,
	Success                                  = 3,
	Unknown                                  = 4,
	EHTAchievementReceiveRewardFailedReason_MAX = 5,
};

// Enum HTGame.EHTAchievementRarity
// NumValues: 0x0007
enum class EHTAchievementRarity : uint8
{
	None                                     = 0,
	N                                        = 1,
	R                                        = 2,
	SR                                       = 3,
	SSR                                      = 4,
	UR                                       = 5,
	EHTAchievementRarity_MAX                 = 6,
};

// Enum HTGame.EHTAchievementState
// NumValues: 0x0006
enum class EHTAchievementState : uint8
{
	Locked                                   = 0,
	Completed                                = 1,
	Progressing                              = 2,
	RewardReceived                           = 3,
	Invalid                                  = 4,
	EHTAchievementState_MAX                  = 5,
};

// Enum HTGame.EHTAchievementEssentialType
// NumValues: 0x0009
enum class EHTAchievementEssentialType : uint8
{
	None                                     = 0,
	Level                                    = 1,
	Kill                                     = 2,
	Consume                                  = 3,
	Collection                               = 4,
	Unlock                                   = 5,
	Gameplay                                 = 6,
	Quest                                    = 7,
	EHTAchievementEssentialType_MAX          = 8,
};

// Enum HTGame.EHTAchievementGameplayType
// NumValues: 0x0010
enum class EHTAchievementGameplayType : uint8
{
	None                                     = 0,
	DungeonCleared                           = 1,
	GamePlayed                               = 2,
	OpenTreasureBox                          = 3,
	Reaction                                 = 4,
	ActivateAbility                          = 5,
	CharacterAttack                          = 6,
	CharacterTreatment                       = 7,
	Unbalanced                               = 8,
	PlayerDead                               = 9,
	OnDivination                             = 10,
	CharacterGift                            = 11,
	ReplyCharacterMessage                    = 12,
	AbyssDungeonCleared                      = 13,
	AbyssDungeonClearedAndMaxStar            = 14,
	EHTAchievementGameplayType_MAX           = 15,
};

// Enum HTGame.EHTAchievementKillType
// NumValues: 0x0003
enum class EHTAchievementKillType : uint8
{
	None                                     = 0,
	Monster                                  = 1,
	EHTAchievementKillType_MAX               = 2,
};

// Enum HTGame.EHTAchievementLevelType
// NumValues: 0x0009
enum class EHTAchievementLevelType : uint8
{
	None                                     = 0,
	AdventureTeamLevel                       = 1,
	TeleportPointLevel                       = 2,
	FavorabilityLevel                        = 3,
	CityShopLevel                            = 4,
	CharacterLevel                           = 5,
	ForkLevel                                = 6,
	ItemLevel                                = 7,
	EHTAchievementLevelType_MAX              = 8,
};

// Enum HTGame.EHTAchievementQuestType
// NumValues: 0x0005
enum class EHTAchievementQuestType : uint8
{
	None                                     = 0,
	Accept                                   = 1,
	Completed                                = 2,
	CompletedCharacterQuest                  = 3,
	EHTAchievementQuestType_MAX              = 4,
};

// Enum HTGame.EHTAchievementUnlockType
// NumValues: 0x0005
enum class EHTAchievementUnlockType : uint8
{
	None                                     = 0,
	Function                                 = 1,
	TeleportPoint                            = 2,
	AreaVision                               = 3,
	EHTAchievementUnlockType_MAX             = 4,
};

// Enum HTGame.EAdlerProjectileStage
// NumValues: 0x0008
enum class EAdlerProjectileStage : uint8
{
	None                                     = 0,
	InitRandomTrack                          = 1,
	TrackTargets                             = 2,
	TrackBarrier                             = 3,
	TrackTargets2                            = 4,
	Finish                                   = 5,
	Pause                                    = 6,
	EAdlerProjectileStage_MAX                = 7,
};

// Enum HTGame.EAnomaliesSequenceClueState
// NumValues: 0x0005
enum class EAnomaliesSequenceClueState : uint8
{
	None                                     = 0,
	Lock                                     = 1,
	Deactivated                              = 2,
	Activated                                = 3,
	EAnomaliesSequenceClueState_MAX          = 4,
};

// Enum HTGame.EAutoNavType
// NumValues: 0x0004
enum class EAutoNavType : uint8
{
	None                                     = 0,
	Quest                                    = 1,
	Activity                                 = 2,
	EAutoNavType_MAX                         = 3,
};

// Enum HTGame.EForkListType
// NumValues: 0x0005
enum class EForkListType : uint8
{
	ForkListType_None                        = 0,
	ForkListType_Change                      = 1,
	ForkListType_Strengthen                  = 2,
	ForkListType_Upgrade                     = 3,
	ForkListType_MAX                         = 4,
};

// Enum HTGame.EEquipmentListType
// NumValues: 0x0003
enum class EEquipmentListType : uint8
{
	EquipmentListType_None                   = 0,
	EquipmentListType_Strengthen             = 1,
	EquipmentListType_MAX                    = 2,
};

// Enum HTGame.EChatHyperlinkType
// NumValues: 0x0003
enum class EChatHyperlinkType : uint8
{
	HYPERLINK_TYPE_NONE                      = 0,
	HYPERLINK_TYPE_LAUNCH_URL                = 100,
	HYPERLINK_TYPE_MAX                       = 101,
};

// Enum HTGame.ECommonRPCMsgCToS
// NumValues: 0x0039
enum class ECommonRPCMsgCToS : uint8
{
	Lottery_Extract_Request                  = 0,
	Lottery_Record_Request                   = 1,
	Em_To_Server_Delete_Mail_Request         = 2,
	Em_To_Server_Mail_Add_Star_Request       = 3,
	Em_To_Server_Mail_Remove_Star_Request    = 4,
	Em_To_Server_Mail_Read_Request           = 5,
	Em_To_Server_Mail_Receive_Request        = 6,
	Em_To_Server_Mail_One_Key_Receive_Request = 7,
	Em_To_Server_Mail_Delete_Read_And_Receive_Request = 8,
	Divination_Extract_Request               = 9,
	City_Shop_Random_Quest_Request           = 10,
	City_Shop_Accept_Quest_Request           = 11,
	City_Shop_Receive_Vip_Award_Request      = 12,
	Store_Management_Start_Request           = 13,
	Store_Management_Invest_Or_Fitment_Request = 14,
	Store_Management_Working_Item_Request    = 15,
	Store_Management_Dismissal_Item_Request  = 16,
	Store_Management_Item_Upgrade_Request    = 17,
	Store_Management_Business_Request        = 18,
	Store_Management_Stop_Request            = 19,
	Store_Management_Storage_Request         = 20,
	Store_Management_Fetch_Request           = 21,
	Store_Management_One_Key_Receive_Request = 22,
	Store_Management_Receive_Request         = 23,
	Store_Management_Item_Sales_Volume_Request = 24,
	Store_Management_Working_Request         = 25,
	Store_Management_Working_Employee_Request = 26,
	Store_Management_Dismissal_Employee_Request = 27,
	Store_Management_Log_Request             = 28,
	Store_Management_Load_NPC_Request        = 29,
	Store_Management_Interact_NPC_Request    = 30,
	Store_Management_Auto_Handle_Event_Request = 31,
	Store_Management_Enter_Request           = 32,
	Store_Management_Leave_Request           = 33,
	Store_Management_Event_Data_Request      = 34,
	Store_Management_Open_UI_Level_Request   = 35,
	Store_Management_Repertory_Hour_Request  = 36,
	Store_Management_End_Request             = 37,
	Trial_ResetSpawner                       = 38,
	Friend_GetList_Request                   = 39,
	Friend_Invite_Request                    = 40,
	Friend_Reply_Request                     = 41,
	Friend_Remove_Request                    = 42,
	Friend_Report_Request                    = 43,
	Friend_NickName_Request                  = 44,
	UserCache_Read_Request                   = 45,
	Monster_Drop_Box_Receive_Request         = 46,
	Clone_Enter_Scene_Request                = 47,
	Clone_Active_Actor                       = 48,
	Clone_First_Interaction_Enter_Request    = 49,
	Clone_First_Interaction_Receive_Award_Request = 50,
	Clone_ReAward_Clone_Request              = 51,
	Clone_On_Reset_Request                   = 52,
	Clone_End_Request                        = 53,
	ItemCompose_Request                      = 54,
	ItemDeCompose_Request                    = 55,
	ECommonRPCMsgCToS_MAX                    = 56,
};

// Enum HTGame.ECommonRPCMsgSToC
// NumValues: 0x003E
enum class ECommonRPCMsgSToC : uint8
{
	Lottery_Extract_Result_Responed          = 0,
	Lottery_Record_Responed                  = 1,
	Divination_Extract_Responed              = 2,
	City_Shop_Random_Quest_Responed          = 3,
	City_Shop_Receive_Vip_Award_Responed     = 4,
	City_Shop_Vip_UnLock_Responed            = 5,
	Store_Management_Invest_Or_Fitment_Responed = 6,
	Store_Management_Business_Responed       = 7,
	Store_Management_Stop_Responed           = 8,
	Store_Management_Item_Sales_Volume_Responed = 9,
	Store_Management_One_Key_Receive_Responed = 10,
	Store_Management_Log_Responed            = 11,
	Store_Management_Add_Event_Responed      = 12,
	Store_Management_Remove_Event_Responed   = 13,
	Store_Management_Spawn_NPC_Responed      = 14,
	Store_Management_Delete_NPC_Responed     = 15,
	Store_Management_WeathervaneID_Changed_Responed = 16,
	Store_Management_Sell_Info_Responed      = 17,
	Store_Management_Event_Data_Responed     = 18,
	Store_Management_Open_UI_Level_Responed  = 19,
	Store_Management_Receive_Responed        = 20,
	Store_Management_Item_Upgrade_Responed   = 21,
	Store_Management_End_Responed            = 22,
	Trial_State_Changed                      = 23,
	Trial_Finish                             = 24,
	Trial_Start                              = 25,
	Trial_Notify_Actived                     = 26,
	Trial_Notify_Finished                    = 27,
	Trial_Init                               = 28,
	Trial_Award_Short_Stamina                = 29,
	Trial_Reset_Finished                     = 30,
	AddActiveDataLayer                       = 31,
	RemoveActiveDataLayer                    = 32,
	AddLoadedDataLayer                       = 33,
	RemoveLoadedDataLayer                    = 34,
	SetActiveDataLayers                      = 35,
	Friend_GetList_Responed                  = 36,
	Friend_Invite_Responed                   = 37,
	Friend_Reply_Responed                    = 38,
	Friend_Remove_Responed                   = 39,
	Friend_NickName_Responed                 = 40,
	Friend_Remove_Notice                     = 41,
	Friend_RedPoint_Notice                   = 42,
	UserCache_Read_Responed                  = 43,
	Monster_Drop_Box_Receive_Responed        = 44,
	Oracle_Stone_Open_Responed               = 45,
	Clone_Enter_Room_not_enough_Responed     = 46,
	Clone_Enter_State_Responed               = 47,
	Clone_Enter_Scene_Responed               = 48,
	Clone_Spawn_Monster_Responed             = 49,
	Clone_Challenge_Result_Responed          = 50,
	Clone_Exit_Scene_Responed                = 51,
	Clone_ReAward_Clone_Responed             = 52,
	Clone_On_Reset_Responed                  = 53,
	Clone_Enter_Weekly_Unlock_Responed       = 54,
	Clone_End_Responed                       = 55,
	Drum_SearchList_Responed                 = 56,
	Drum_RankList_Responed                   = 57,
	Drum_CollectFavorit_Responed             = 58,
	Drum_Rank_Responed                       = 59,
	ItemCompose_Responed                     = 60,
	ECommonRPCMsgSToC_MAX                    = 61,
};

// Enum HTGame.CNCompState
// NumValues: 0x0006
enum class ECNCompState : uint8
{
	ReadyToSpawnEffect                       = 0,
	ReadyToFire                              = 1,
	InPlayingTrajectory                      = 2,
	CoolingDown                              = 3,
	WaitingDestroy                           = 4,
	CNCompState_MAX                          = 5,
};

// Enum HTGame.ECitySampleLocomotionState
// NumValues: 0x0005
enum class ECitySampleLocomotionState : uint8
{
	Idle                                     = 0,
	Walk                                     = 1,
	Run                                      = 2,
	Animating                                = 3,
	ECitySampleLocomotionState_MAX           = 4,
};

// Enum HTGame.ECrowdMeshSlots
// NumValues: 0x0005
enum class ECrowdMeshSlots : uint8
{
	Base                                     = 0,
	Head                                     = 1,
	TopBody                                  = 2,
	BottomBody                               = 3,
	MAX                                      = 4,
};

// Enum HTGame.EAnimToTextureDataAssetSlots
// NumValues: 0x0005
enum class EAnimToTextureDataAssetSlots : uint8
{
	ATTDAS_Base                              = 0,
	ATTDAS_Head                              = 1,
	ATTDAS_TopBody                           = 2,
	ATTDAS_BottomBody                        = 3,
	ATTDAS_MAX                               = 4,
};

// Enum HTGame.EHTDataAssetSetLoadPolicy
// NumValues: 0x0003
enum class EHTDataAssetSetLoadPolicy : uint8
{
	Never                                    = 0,
	Cache                                    = 1,
	EHTDataAssetSetLoadPolicy_MAX            = 2,
};

// Enum HTGame.EDelegateMissionRPCMessageType
// NumValues: 0x0009
enum class EDelegateMissionRPCMessageType : uint8
{
	ServerNotifyDelegateMission_UpdCityQuestInfo = 0,
	ServerNotifyDelegateMission_UpdRoleMissionInfo = 1,
	ServerNotifyDelegateMission_TryAcceptQuest = 2,
	ServerNotifyDelegateMission_TrySubmitQuest = 3,
	ServerNotifyDelegateMission_TrySubmitQuest_Single = 4,
	ClientNotifyDelegateMission_UpdCityQuestInfo = 5,
	ClientNotifyDelegateMission_UpdRoleMissionInfo = 6,
	ClientNotifyDelegateMission_QuestReport  = 7,
	EDelegateMissionRPCMessageType_MAX       = 8,
};

// Enum HTGame.EDelegateMissionRoleTendencyLevel
// NumValues: 0x0003
enum class EDelegateMissionRoleTendencyLevel : uint8
{
	Normal                                   = 0,
	Tendency                                 = 1,
	EDelegateMissionRoleTendencyLevel_MAX    = 2,
};

// Enum HTGame.EVehicleType
// NumValues: 0x0005
enum class EVehicleType : uint8
{
	InvalidVehicle                           = 0,
	CommonVehicle                            = 1,
	Bus                                      = 2,
	Train                                    = 3,
	EVehicleType_MAX                         = 4,
};

// Enum HTGame.EDrumPointType
// NumValues: 0x0005
enum class EDrumPointType : uint8
{
	Hihat                                    = 0,
	Snare                                    = 1,
	Tom                                      = 2,
	Crash                                    = 3,
	Max                                      = 4,
};

// Enum HTGame.EDrumEventType
// NumValues: 0x0005
enum class EDrumEventType : uint8
{
	Click                                    = 0,
	Begin                                    = 1,
	Press                                    = 2,
	End                                      = 3,
	Max                                      = 4,
};

// Enum HTGame.EDrumBeatType
// NumValues: 0x0005
enum class EDrumBeatType : uint8
{
	None                                     = 0,
	Four                                     = 1,
	Eight                                    = 2,
	Sixteen                                  = 3,
	EDrumBeatType_MAX                        = 4,
};

// Enum HTGame.EDrumEditorEventType
// NumValues: 0x0004
enum class EDrumEditorEventType : uint8
{
	Click                                    = 0,
	Press                                    = 1,
	Delete                                   = 2,
	Max                                      = 3,
};

// Enum HTGame.EDrumPlayResultType
// NumValues: 0x0006
enum class EDrumPlayResultType : uint8
{
	EDPST_None                               = 0,
	EDPST_Failed                             = 1,
	EDPST_Pass                               = 2,
	EDPST_Excellent                          = 3,
	EDPST_Perfect                            = 4,
	EDPST_MAX                                = 5,
};

// Enum HTGame.EDrumMenuType
// NumValues: 0x0006
enum class EDrumMenuType : uint8
{
	Clear                                    = 0,
	Share                                    = 1,
	SaveAs                                   = 2,
	Import                                   = 3,
	Publish                                  = 4,
	Max                                      = 5,
};

// Enum HTGame.EDrumSongLevelType
// NumValues: 0x0006
enum class EDrumSongLevelType : uint8
{
	EDSLT_None                               = 0,
	EDSLT_Easy                               = 1,
	EDSLT_Normal                             = 2,
	EDSLT_Hard                               = 3,
	EDSLT_Hardest                            = 4,
	EDSLT_MAX                                = 5,
};

// Enum HTGame.EDrumListItemObjectType
// NumValues: 0x0005
enum class EDrumListItemObjectType : uint8
{
	EDLIOT_ModuleItem                        = 0,
	EDLIOT_ModuleTab                         = 1,
	EDLIOT_SongLevel                         = 2,
	EDLIOT_MenuItem                          = 3,
	EDLIOT_Max                               = 4,
};

// Enum HTGame.EDrumSongActiveType
// NumValues: 0x0005
enum class EDrumSongActiveType : uint8
{
	EDSAT_None                               = 0,
	EDSAT_SpecifiedQuest                     = 1,
	EDSAT_PlayerLevel                        = 2,
	EDSAT_WorldLevel                         = 3,
	EDSAT_MAX                                = 4,
};

// Enum HTGame.EHTFriendType
// NumValues: 0x000A
enum class EHTFriendType : uint8
{
	Stranger                                 = 0,
	Apply                                    = 1,
	BeApply                                  = 2,
	Reject                                   = 3,
	Friend                                   = 4,
	Delete                                   = 5,
	Blacklist                                = 6,
	InBlacklist                              = 7,
	RecentContacts                           = 8,
	Max                                      = 9,
};

// Enum HTGame.EFunctionUnlockConditionType
// NumValues: 0x0003
enum class EFunctionUnlockConditionType : uint8
{
	And                                      = 0,
	Or                                       = 1,
	EFunctionUnlockConditionType_MAX         = 2,
};

// Enum HTGame.EFunctionUnlockActiveType
// NumValues: 0x0007
enum class EFunctionUnlockActiveType : uint8
{
	None                                     = 0,
	SpecifiedQuest                           = 1,
	PlayerLevel                              = 2,
	WorldLevel                               = 3,
	IOS                                      = 4,
	End                                      = 5,
	EFunctionUnlockActiveType_MAX            = 6,
};

// Enum HTGame.EQuickMenuSettingsMenuType
// NumValues: 0x0004
enum class EQuickMenuSettingsMenuType : uint8
{
	None                                     = 0,
	Gamepad                                  = 1,
	Keyboard                                 = 2,
	EQuickMenuSettingsMenuType_MAX           = 3,
};

// Enum HTGame.EExposedNetMode
// NumValues: 0x0005
enum class EExposedNetMode : uint8
{
	Standalone                               = 0,
	DedicatedServer                          = 1,
	ListenServer                             = 2,
	Client                                   = 3,
	EExposedNetMode_MAX                      = 4,
};

// Enum HTGame.EExposedPlatform
// NumValues: 0x000D
enum class EExposedPlatform : uint8
{
	Unknow                                   = 0,
	HoloLens                                 = 1,
	Android                                  = 2,
	IOS                                      = 3,
	Linux                                    = 4,
	LinuxArm64                               = 5,
	Mac                                      = 6,
	Windows                                  = 7,
	TVOS                                     = 8,
	PS4                                      = 9,
	PS5                                      = 10,
	Switch                                   = 11,
	EExposedPlatform_MAX                     = 12,
};

// Enum HTGame.EGuideNPCMsgID
// NumValues: 0x0005
enum class EGuideNPCMsgID : uint8
{
	Invalid                                  = 0,
	SelectGuideNPC                           = 1,
	SpawnNPC                                 = 2,
	DestroyNPC                               = 3,
	EGuideNPCMsgID_MAX                       = 4,
};

// Enum HTGame.EGuideNPCType
// NumValues: 0x0004
enum class EGuideNPCType : uint8
{
	Invalid                                  = 0,
	Mia                                      = 1,
	FightPet                                 = 2,
	EGuideNPCType_MAX                        = 3,
};

// Enum HTGame.EHeadUpSettingOption
// NumValues: 0x0007
enum class EHeadUpSettingOption : uint8
{
	HEADUP_SETTING_OPTION_NAME               = 0,
	HEADUP_SETTING_OPTION_TITLE              = 1,
	HEADUP_SETTING_OPTION_GUILD              = 2,
	HEADUP_SETTING_OPTION_PET                = 3,
	HEADUP_SETTING_OPTION_MONSTER_NAME       = 4,
	HEADUP_SETTING_OPTION_MONSTER_TITLE      = 5,
	HEADUP_SETTING_OPTION_MAX                = 6,
};

// Enum HTGame.EHeadUpMarkType
// NumValues: 0x0025
enum class EHeadUpMarkType : uint8
{
	HEAD_UP_MARK_BATTLE_BEGIN                = 0,
	HEAD_UP_MARK_GUARD                       = 1,
	HEAD_UP_MARK_HEARING                     = 2,
	HEAD_UP_MARK_ENTER_BATTLE                = 3,
	HEAD_UP_MARK_LEVEL_DIFF_LOW              = 4,
	HEAD_UP_MARK_LEVEL_DIFF_HIGH             = 5,
	HEAD_UP_MARK_BATTLE_INVALID              = 6,
	HEAD_UP_MARK_BATTLE_ENDED                = 7,
	HEAD_UP_MARK_QUEST_BEGIN                 = 8,
	HEAD_UP_MARK_MAIN_SUBMIT                 = 9,
	HEAD_UP_MARK_SIDE_SUBMIT                 = 10,
	HEAD_UP_MARK_LEGEND_SUBMIT               = 11,
	HEAD_UP_MARK_LIKING_SUBMIT               = 12,
	HEAD_UP_MARK_MAIN_TALK                   = 13,
	HEAD_UP_MARK_SIDE_TALK                   = 14,
	HEAD_UP_MARK_LEGEND_TALK                 = 15,
	HEAD_UP_MARK_LIKING_TALK                 = 16,
	HEAD_UP_MARK_MAIN_CANT_SUBMIT            = 17,
	HEAD_UP_MARK_SIDE_CANT_SUBMIT            = 18,
	HEAD_UP_MARK_LEGEND_CANT_SUBMIT          = 19,
	HEAD_UP_MARK_MAIN_ACCEPT                 = 20,
	HEAD_UP_MARK_SIDE_ACCEPT                 = 21,
	HEAD_UP_MARK_LEGEND_ACCEPT               = 22,
	HEAD_UP_MARK_LIKING_ACCEPT               = 23,
	HEAD_UP_MARK_MAIN_CANT_ACCEPT            = 24,
	HEAD_UP_MARK_SIDE_CANT_ACCEPT            = 25,
	HEAD_UP_MARK_QUEST_INVALID               = 26,
	HEAD_UP_MARK_QUEST_ENDED                 = 27,
	HEAD_UP_MARK_SPECIAL_BEGIN               = 28,
	HEAD_UP_MARK_MAP_REGION                  = 29,
	HEAD_UP_MARK_SPECAIL_INVALID             = 30,
	HEAD_UP_MARK_SPECIAL_ENDED               = 31,
	HEAD_UP_MARK_TRACKING                    = 32,
	HEAD_UP_MARK_CANCELL_TRACK               = 33,
	HEAD_UP_MARK_RELATE                      = 34,
	HEAD_UP_MARK_CANCELL_RELATE              = 35,
	HEAD_UP_MARK_MAX                         = 36,
};

// Enum HTGame.EHeadUpInfoRelation
// NumValues: 0x000D
enum class EHeadUpInfoRelation : uint8
{
	HEAD_UP_INFO_RELATION_SELF               = 0,
	HEAD_UP_INFO_RELATION_TEAM               = 1,
	HEAD_UP_INFO_RELATION_FRIEND             = 2,
	HEAD_UP_INFO_RELATION_GUILD              = 3,
	HEAD_UP_INFO_RELATION_HOSTILE            = 4,
	HEAD_UP_INFO_RELATION_STRANGE            = 5,
	HEAD_UP_INFO_RELATION_NPC_FRIEND         = 6,
	HEAD_UP_INFO_RELATION_NPC_NEUTRAL        = 7,
	HEAD_UP_INFO_RELATION_NPC_ENEMY          = 8,
	HEAD_UP_INFO_RELATION_MONSTER            = 9,
	HEAD_UP_INFO_RELATION_PET                = 10,
	HEAD_UP_INFO_INVALID                     = 11,
	HEAD_UP_INFO_MAX                         = 12,
};

// Enum HTGame.EMonsterLevelTextColor
// NumValues: 0x0004
enum class EMonsterLevelTextColor : uint8
{
	Gray                                     = 0,
	White                                    = 1,
	Red                                      = 2,
	MAX                                      = 3,
};

// Enum HTGame.ECharacterLimitProptiesType
// NumValues: 0x0028
enum class ECharacterLimitProptiesType : uint8
{
	Invalid                                  = 0,
	Min                                      = 0,
	CantUseSkill                             = 1,
	CantUseUltSkill                          = 2,
	CantUseMelee                             = 3,
	CantMove                                 = 4,
	OnlyRotate                               = 5,
	CantReduceHP                             = 6,
	CantInput                                = 7,
	CantBeDamage                             = 8,
	IgnoreCantBeDamage                       = 9,
	CantBeSelected                           = 10,
	CantUseEvadeSkill                        = 11,
	CantChangePlayer                         = 12,
	CantJump                                 = 13,
	CantSecondJump                           = 14,
	CantVines                                = 15,
	CantGliding                              = 16,
	CantSurmount                             = 17,
	CantDynamicGravity                       = 18,
	OpenHalfHit                              = 19,
	CantPassiveEffect                        = 20,
	IgnoreCantPassiveEffect                  = 21,
	CantPlayHitParticleEffect                = 22,
	LimitMoveAndRotation                     = 23,
	CantMoveInTraction                       = 24,
	CantCalcFallDamage                       = 25,
	CantRun                                  = 26,
	CantSprint                               = 27,
	IgnoreSuperArmor                         = 28,
	CantHideUISkill                          = 29,
	CantForbidUISkill                        = 30,
	CantForbidSkillSpecialUI                 = 31,
	CantHideUIUltraSkill                     = 32,
	CantForbidUIUltraSkill                   = 33,
	CantForbidUltraSkillSpecialUI            = 34,
	DisableInteract                          = 35,
	Buff_Stun_State                          = 201,
	Buff_Thunder_State                       = 202,
	ECharacterLimitProptiesType_MAX          = 203,
};

// Enum HTGame.EJSRequirementOperator
// NumValues: 0x0004
enum class EJSRequirementOperator : uint8
{
	And                                      = 0,
	Or                                       = 1,
	Copy                                     = 2,
	EJSRequirementOperator_MAX               = 3,
};

// Enum HTGame.EActivitySignInRPCMessageType
// NumValues: 0x0003
enum class EActivitySignInRPCMessageType : uint8
{
	ServerActSignInNotify_ActInfoRequest     = 0,
	ClientActSignInNotify_ActInfoResponse    = 1,
	EActivitySignInRPCMessageType_MAX        = 2,
};

// Enum HTGame.EActSignInState
// NumValues: 0x0004
enum class EActSignInState : uint8
{
	ActSignInState_Lock                      = 0,
	ActSignInState_UnLock                    = 1,
	ActSignInState_AlreadyGet                = 2,
	ActSignInState_MAX                       = 3,
};

// Enum HTGame.EActivityState
// NumValues: 0x0007
enum class EActivityState : uint8
{
	ActivityState_Null                       = 0,
	ActivityState_Close                      = 1,
	ActivityState_PreView                    = 2,
	ActivityState_Start                      = 3,
	ActivityState_Settle                     = 4,
	ActivityState_Termination                = 5,
	ActivityState_MAX                        = 6,
};

// Enum HTGame.EActivityType
// NumValues: 0x0002
enum class EActivityType : uint8
{
	ActivityType_SignIn                      = 0,
	ActivityType_MAX                         = 1,
};

// Enum HTGame.EActivityRPCMessageType
// NumValues: 0x0004
enum class EActivityRPCMessageType : uint8
{
	ServerNotifyActivity_ActInfoRequest      = 0,
	ServerNotifyActivity_GetAward            = 1,
	ClientNotifyActivity_ActInfoResponse     = 2,
	EActivityRPCMessageType_MAX              = 3,
};

// Enum HTGame.EAdventureManualBossActivateType
// NumValues: 0x0005
enum class EAdventureManualBossActivateType : uint8
{
	None                                     = 0,
	CompletedQuest                           = 1,
	PlayerLevel                              = 2,
	Vision                                   = 3,
	EAdventureManualBossActivateType_MAX     = 4,
};

// Enum HTGame.EDailyQuestLabel
// NumValues: 0x000A
enum class EDailyQuestLabel : uint8
{
	None                                     = 0,
	LoginGame                                = 1,
	ActivateUltraSkill                       = 2,
	KillEnemy                                = 3,
	BuyItemInCityStore                       = 4,
	ReceiveBonusInShop                       = 5,
	GiveGifts                                = 6,
	SubmitCommissions                        = 7,
	CostVitality                             = 8,
	EDailyQuestLabel_MAX                     = 9,
};

// Enum HTGame.EAdventureManualRewardType
// NumValues: 0x0004
enum class EAdventureManualRewardType : uint8
{
	None                                     = 0,
	Quest                                    = 1,
	Overview                                 = 2,
	EAdventureManualRewardType_MAX           = 3,
};

// Enum HTGame.EAdventureManualQuestType
// NumValues: 0x0007
enum class EAdventureManualQuestType : uint8
{
	None                                     = 0,
	Wizard                                   = 1,
	Daily                                    = 2,
	Dungeon                                  = 3,
	Boss_Ow                                  = 4,
	DailyRandom                              = 5,
	EAdventureManualQuestType_MAX            = 6,
};

// Enum HTGame.EHTAdventureManualState
// NumValues: 0x0005
enum class EHTAdventureManualState : uint8
{
	None                                     = 0,
	Progressing                              = 1,
	Completed                                = 2,
	RewardReceived                           = 3,
	EHTAdventureManualState_MAX              = 4,
};

// Enum HTGame.EAdventureManualWizardMainType
// NumValues: 0x0016
enum class EAdventureManualWizardMainType : uint8
{
	None                                     = 0,
	CharacterLevel                           = 1,
	CharacterToPoLevel                       = 2,
	ForkLevel                                = 3,
	ForkTuPoLevel                            = 4,
	DungeonCleared_Standalone                = 5,
	DungeonCleared_Multi                     = 6,
	DungeonCleared                           = 7,
	UnlockWerther                            = 8,
	ActivateTeleportPoint                    = 9,
	PlayerLevel                              = 10,
	DivinationHouseLevel                     = 11,
	CompleteQuest                            = 12,
	KongMuLevel                              = 13,
	CharacterItemCount                       = 14,
	CostItem                                 = 15,
	ObtainItem                               = 16,
	CompleteCityQuest                        = 17,
	FavorabilityLevel                        = 18,
	Vision                                   = 19,
	TreasureBox                              = 20,
	EAdventureManualWizardMainType_MAX       = 21,
};

// Enum HTGame.EAdventureManualButtonState
// NumValues: 0x0004
enum class EAdventureManualButtonState : uint8
{
	Button_NotCompleted                      = 0,
	Button_Completed                         = 1,
	Button_AlreadyReceived                   = 2,
	Button_MAX                               = 3,
};

// Enum HTGame.EBossStage
// NumValues: 0x0004
enum class EBossStage : uint8
{
	None                                     = 0,
	ChargeStage1                             = 1,
	ChargeStage2                             = 2,
	Max                                      = 3,
};

// Enum HTGame.EBossStageCond
// NumValues: 0x0005
enum class EBossStageCond : uint8
{
	None                                     = 0,
	ChargeThreshold                          = 1,
	HPThreshold                              = 2,
	BattleTime                               = 3,
	Max                                      = 4,
};

// Enum HTGame.EThreatFeedbackLevel
// NumValues: 0x0005
enum class EThreatFeedbackLevel : uint8
{
	None                                     = 0,
	ThreatLevel0                             = 1,
	ThreatLevel1                             = 2,
	ThreatLevel2                             = 3,
	EThreatFeedbackLevel_MAX                 = 4,
};

// Enum HTGame.EAIBattleIdleBehaviorConditionType
// NumValues: 0x0003
enum class EAIBattleIdleBehaviorConditionType : uint8
{
	GreaterThanAttackKeepingDistance         = 0,
	LessThanAttackKeepingDistance            = 1,
	EAIBattleIdleBehaviorConditionType_MAX   = 2,
};

// Enum HTGame.ESkillErrorCode
// NumValues: 0x002A
enum class ESkillErrorCode : uint8
{
	Success                                  = 0,
	Unkown                                   = 1,
	TooFar                                   = 2,
	TooNear                                  = 3,
	HugeHeightOffset                         = 4,
	HugeAngleOffset                          = 5,
	CoolingDown                              = 6,
	InAttackInterval                         = 7,
	UsingSkill                               = 8,
	PartnerUsingSkill                        = 9,
	SelfDead                                 = 10,
	NoTarget                                 = 11,
	NoAvailableSkill                         = 12,
	NoWeapon                                 = 13,
	InSkillPassiveEffect                     = 14,
	PlayingMontage                           = 15,
	TurningInPlace                           = 16,
	LimitUseSkill                            = 17,
	HeightOffsetTooSmall                     = 18,
	BelowTheTarget                           = 19,
	TargetInDeepWater                        = 20,
	LeavingBattle                            = 21,
	BPCantUse                                = 22,
	AngleOffsetTooSmall                      = 23,
	PartnerForceChasing                      = 24,
	InputLimited                             = 25,
	ProjectileBlock                          = 26,
	BossStageUnavailable                     = 27,
	ArmorShieldOpend                         = 28,
	ChannelingBarNotFinsish                  = 29,
	SkillDirectionLeftOnly                   = 30,
	SkillDirectionRightOnly                  = 31,
	SpinAround                               = 32,
	PartnerHigherPriority                    = 33,
	BossStageElapseTime                      = 34,
	ObstaclesDetected                        = 35,
	SkillDisabled                            = 36,
	TargetNotInCustomAngleRange              = 37,
	AboveTheTarget                           = 38,
	RageNotFull                              = 39,
	CoolingDownShare                         = 40,
	Max                                      = 41,
};

// Enum HTGame.EAISkillDirectionLimit
// NumValues: 0x0004
enum class EAISkillDirectionLimit : uint8
{
	AnySide                                  = 0,
	LeftSideOnly                             = 1,
	RightSideOnly                            = 2,
	EAISkillDirectionLimit_MAX               = 3,
};

// Enum HTGame.EAIGameplayTagRequire
// NumValues: 0x0004
enum class EAIGameplayTagRequire : uint8
{
	Any                                      = 0,
	All                                      = 1,
	NoAny                                    = 2,
	EAIGameplayTagRequire_MAX                = 3,
};

// Enum HTGame.EMonsterJobType
// NumValues: 0x0006
enum class EMonsterJobType : uint8
{
	Ordinary                                 = 0,
	Elite                                    = 1,
	Captain                                  = 2,
	Chieftain                                = 3,
	Boss                                     = 4,
	Max                                      = 5,
};

// Enum HTGame.ESpeciesType
// NumValues: 0x0009
enum class ESpeciesType : uint8
{
	BioType                                  = 0,
	MechanicalType                           = 1,
	IceElement                               = 2,
	FireElement                              = 3,
	ThunderElement                           = 4,
	SuperpowerElement                        = 5,
	WaterElement                             = 6,
	BotanyType                               = 7,
	Max                                      = 8,
};

// Enum HTGame.EAIRaceType
// NumValues: 0x0013
enum class EAIRaceType : uint8
{
	Human                                    = 0,
	Elf                                      = 1,
	Turtleman                                = 2,
	Goblin                                   = 3,
	Werewolf                                 = 4,
	Birdman                                  = 5,
	Fishman                                  = 6,
	Giant                                    = 7,
	MagicDoll                                = 8,
	Plantman                                 = 9,
	MagicCreature                            = 10,
	WaterElement                             = 11,
	FireElement                              = 12,
	ThunderElement                           = 13,
	Bird                                     = 14,
	WildBeast                                = 15,
	Insect                                   = 16,
	Fish                                     = 17,
	Max                                      = 18,
};

// Enum HTGame.ESpecialInjuryType
// NumValues: 0x0005
enum class ESpecialInjuryType : uint8
{
	None                                     = 0,
	Erosive                                  = 1,
	SuddenDeath                              = 2,
	Curse                                    = 3,
	Max                                      = 4,
};

// Enum HTGame.ESummonedAIAttackMode
// NumValues: 0x0003
enum class ESummonedAIAttackMode : uint8
{
	Aggressive                               = 0,
	Defensive                                = 1,
	ESummonedAIAttackMode_MAX                = 2,
};

// Enum HTGame.EAITurnMode
// NumValues: 0x0004
enum class EAITurnMode : uint8
{
	TurnInPlace                              = 0,
	TurnInArc                                = 1,
	MoveBackward                             = 2,
	EAITurnMode_MAX                          = 3,
};

// Enum HTGame.EDebugAIType
// NumValues: 0x0003
enum class EDebugAIType : uint8
{
	Debug_None                               = 0,
	Debug_Skill                              = 1,
	Debug_MAX                                = 2,
};

// Enum HTGame.EBotRandomActionType
// NumValues: 0x0004
enum class EBotRandomActionType : uint8
{
	None                                     = 0,
	Move                                     = 1,
	Montage                                  = 2,
	Max                                      = 3,
};

// Enum HTGame.EAttackReactionDirection
// NumValues: 0x0006
enum class EAttackReactionDirection : uint8
{
	None                                     = 0,
	LeftFront                                = 1,
	RightFront                               = 2,
	LeftBack                                 = 3,
	RightBack                                = 4,
	EAttackReactionDirection_MAX             = 5,
};

// Enum HTGame.EMontageRotateLimit
// NumValues: 0x0004
enum class EMontageRotateLimit : uint8
{
	RotateAnySide                            = 0,
	RotateLeftOnly                           = 1,
	RotateRightOnly                          = 2,
	EMontageRotateLimit_MAX                  = 3,
};

// Enum HTGame.EAIIdleStateConditionType
// NumValues: 0x0004
enum class EAIIdleStateConditionType : uint8
{
	Time                                     = 0,
	Quest                                    = 1,
	DistanceToPlayer                         = 2,
	Max                                      = 3,
};

// Enum HTGame.EConditionResultsOperation
// NumValues: 0x0003
enum class EConditionResultsOperation : uint8
{
	AND                                      = 0,
	OR                                       = 1,
	EConditionResultsOperation_MAX           = 2,
};

// Enum HTGame.EAIRefreshNPCDisCheck
// NumValues: 0x0004
enum class EAIRefreshNPCDisCheck : uint8
{
	Spawn                                    = 0,
	Destroy                                  = 1,
	DisNoSatify                              = 2,
	EAIRefreshNPCDisCheck_MAX                = 3,
};

// Enum HTGame.EAISpawnerRefreshType
// NumValues: 0x0004
enum class EAISpawnerRefreshType : uint8
{
	Immediately                              = 0,
	EnterRange                               = 1,
	Blueprint                                = 2,
	EAISpawnerRefreshType_MAX                = 3,
};

// Enum HTGame.EAISpawnerAIDestroyType
// NumValues: 0x0003
enum class EAISpawnerAIDestroyType : uint8
{
	Immediately                              = 0,
	MoveToDestroyPoint                       = 1,
	EAISpawnerAIDestroyType_MAX              = 2,
};

// Enum HTGame.EAISpawnerResetCheckType
// NumValues: 0x0004
enum class EAISpawnerResetCheckType : uint8
{
	None                                     = 0,
	ResetOnlyAlive                           = 1,
	ResetAll                                 = 2,
	EAISpawnerResetCheckType_MAX             = 3,
};

// Enum HTGame.EAITeamPatrolState
// NumValues: 0x0003
enum class EAITeamPatrolState : uint8
{
	Stopped                                  = 0,
	InProgress                               = 1,
	EAITeamPatrolState_MAX                   = 2,
};

// Enum HTGame.EHTAnimEnum_CardinalDirection
// NumValues: 0x0005
enum class EHTAnimEnum_CardinalDirection : uint8
{
	Forward                                  = 0,
	Backward                                 = 1,
	Left                                     = 2,
	Right                                    = 3,
	EHTAnimEnum_MAX                          = 4,
};

// Enum HTGame.EAnimationSharingState
// NumValues: 0x000B
enum class EAnimationSharingState : uint8
{
	Idle                                     = 0,
	Walk                                     = 1,
	Run                                      = 2,
	Rain_Idle                                = 3,
	Rain_Walk                                = 4,
	Rain_Run                                 = 5,
	Umbrella_Idle                            = 6,
	Umbrella_Walk                            = 7,
	Umbrella_Run                             = 8,
	MAX_STATE                                = 9,
	EAnimationSharingState_MAX               = 10,
};

// Enum HTGame.CameraSwitchState
// NumValues: 0x0023
enum class ECameraSwitchState : uint8
{
	CSS_NORMAL                               = 0,
	CSS_AIMING                               = 1,
	CSS_WEAPON                               = 2,
	CSS_AIM_ARTIFACT                         = 3,
	CSS_SWIM                                 = 4,
	CSS_CLIMB                                = 5,
	CSS_CLIMB_OVER                           = 6,
	CSS_FIGHT                                = 7,
	CSS_ANIM                                 = 8,
	CSS_DIALOGUE                             = 9,
	CSS_SELFIE                               = 10,
	CSS_PATH_FOLLOW                          = 11,
	CSS_BOSS                                 = 12,
	CSS_NEW_ANIM                             = 13,
	CSS_RUNNING                              = 14,
	CSS_InLift                               = 15,
	CSS_LockTarget                           = 16,
	CSS_JUMPING                              = 17,
	CSS_SPECIALBOX                           = 18,
	CSS_TIMECLOCK                            = 19,
	CSS_UI                                   = 20,
	CSS_TENACITYBREAK                        = 21,
	CSS_INDOOR                               = 22,
	CSS_SHOP                                 = 23,
	CSS_INTERP_TO_ACTOR                      = 24,
	CSS_SelfSetting                          = 25,
	CSS_CAR                                  = 26,
	CSS_REACTION                             = 27,
	CSS_LOADING                              = 28,
	CSS_GLIDING                              = 29,
	CSS_LININGTARGET                         = 30,
	CSS_BOARD_TRAIN                          = 31,
	CSS_SIT                                  = 32,
	CSS_LockNPC                              = 33,
	CSS_MAX                                  = 34,
};

// Enum HTGame.EFightCameraModeType
// NumValues: 0x0003
enum class EFightCameraModeType : uint8
{
	FightCameraMode_Classic                  = 0,
	FightCameraMode_Fight                    = 1,
	FightCameraMode_MAX                      = 2,
};

// Enum HTGame.EInDoorCameraType
// NumValues: 0x0007
enum class EInDoorCameraType : uint8
{
	InDoorType_Normal                        = 0,
	InDoorType_Spacious                      = 1,
	InDoorType_Narrow                        = 2,
	InDoorType_MaxEibon                      = 3,
	InDoorType_FilmOrbitCamera               = 4,
	InDoorType_None                          = 5,
	InDoorType_MAX                           = 6,
};

// Enum HTGame.EHTCameraPropertyType
// NumValues: 0x001A
enum class EHTCameraPropertyType : uint8
{
	None                                     = 0,
	FieldOfView                              = 1,
	Roll                                     = 2,
	Pitch                                    = 3,
	Yaw                                      = 4,
	ViewRollMin                              = 5,
	ViewRollMax                              = 6,
	ViewPitchMin                             = 7,
	ViewPitchMax                             = 8,
	ViewYawMin                               = 9,
	ViewYawMax                               = 10,
	TargetArmLength                          = 11,
	SocketOffsetY                            = 12,
	SocketOffsetZ                            = 13,
	TargetOffsetX                            = 14,
	TargetOffsetY                            = 15,
	TargetOffsetZ                            = 16,
	EnableCameraLag                          = 17,
	IgnoreCameraLagZ                         = 18,
	CameraLagSpeed                           = 19,
	CameraLagMaxDistance                     = 20,
	EnableCameraRotationLag                  = 21,
	CameraRotationLagSpeed                   = 22,
	PlayerFadeDistance                       = 23,
	PlayerHideDistance                       = 24,
	Max                                      = 25,
};

// Enum HTGame.EHTGlidingStateOperator
// NumValues: 0x0004
enum class EHTGlidingStateOperator : uint8
{
	Aiming                                   = 0,
	Launching                                = 1,
	Gliding                                  = 2,
	EHTGlidingStateOperator_MAX              = 3,
};

// Enum HTGame.EReplicatedReduceHpDeadState
// NumValues: 0x0004
enum class EReplicatedReduceHpDeadState : uint8
{
	DS_Alive                                 = 0,
	DS_UnRealDead                            = 1,
	DS_Dead                                  = 2,
	DS_MAX                                   = 3,
};

// Enum HTGame.ECloneResult
// NumValues: 0x0007
enum class ECloneResult : uint8
{
	ECloneResult_Success                     = 0,
	ECloneResult_Failed                      = 1,
	ECloneResult_FailedExit                  = 2,
	ECloneResult_FailedDead                  = 3,
	ECloneResult_FailedTimeOut               = 4,
	ECloneResult_FailedOffline               = 5,
	ECloneResult_MAX                         = 6,
};

// Enum HTGame.EHTCommonAcceptState11
// NumValues: 0x0005
enum class EHTCommonAcceptState11 : uint8
{
	None                                     = 0,
	Normal                                   = 1,
	Acceptable                               = 2,
	Accepted                                 = 3,
	EHTCommonAcceptState11_MAX               = 4,
};

// Enum HTGame.EDlgSlotType
// NumValues: 0x0003
enum class EDlgSlotType : uint8
{
	PreDlg                                   = 0,
	ComDlg                                   = 1,
	MAX                                      = 2,
};

// Enum HTGame.ETalentDataType
// NumValues: 0x0004
enum class ETalentDataType : uint8
{
	None                                     = 0,
	Property                                 = 1,
	Buff                                     = 2,
	ETalentDataType_MAX                      = 3,
};

// Enum HTGame.EDrumMainTabType
// NumValues: 0x0007
enum class EDrumMainTabType : uint8
{
	EDMTT_None                               = 0,
	EDMTT_Playlist                           = 1,
	EDMTT_Archives                           = 2,
	EDMTT_Search                             = 3,
	EDMTT_Favorites                          = 4,
	EDMTT_EditDetail                         = 5,
	EDMTT_MAX                                = 6,
};

// Enum HTGame.EDrumPlaySendMsgSToC
// NumValues: 0x000B
enum class EDrumPlaySendMsgSToC : uint8
{
	EDPSMSC_UpdateScore                      = 0,
	EDPSMSC_EndPlaying                       = 1,
	EDPSMSC_BeginPlaying                     = 2,
	EDPSMSC_SaveSong                         = 3,
	EDPSMSC_NortitySavedSong                 = 4,
	EDPSMSC_NortityLevelChange               = 5,
	EDPSMSC_Collect_Song                     = 6,
	EDPSMSC_Favorit_Song                     = 7,
	EDPSMSC_ReceiveSongData_Res              = 8,
	EDPSMSC_ShareSongData_Res                = 9,
	EDPSMSC_MAX                              = 10,
};

// Enum HTGame.EDrumPlaySendMsgCToS
// NumValues: 0x000F
enum class EDrumPlaySendMsgCToS : uint8
{
	EDPSMCS_None                             = 0,
	EDPSMCS_BeginPlaying                     = 1,
	EDPSMCS_PausePlay                        = 2,
	EDPSMCS_PointAction                      = 3,
	EDPSMCS_ShareSong                        = 4,
	EDPSMCS_SaveSong                         = 5,
	EDPSMCS_SearchList                       = 6,
	EDPSMCS_RankList                         = 7,
	EDPSMCS_Query_CollectFavorit             = 8,
	EDPSMCS_QuerySavedSong                   = 9,
	EDPSMCS_Collect_Song                     = 10,
	EDPSMCS_Favorit_Song                     = 11,
	EDPSMCS_ShareSongData_Req                = 12,
	EDPSMCS_GetSongData_Req                  = 13,
	EDPSMCS_MAX                              = 14,
};

// Enum HTGame.EDrumPlayPointType
// NumValues: 0x0004
enum class EDrumPlayPointType : uint8
{
	EDPPT_None                               = 0,
	EDPPT_OneGrid                            = 1,
	EDPPT_MultiGrid                          = 2,
	EDPPT_MAX                                = 3,
};

// Enum HTGame.EDrumPlayFailedReason
// NumValues: 0x0006
enum class EDrumPlayFailedReason : uint8
{
	EDPFR_None                               = 0,
	EDPFR_NoEditSong                         = 1,
	EDPFR_NoSongConfig                       = 2,
	EDPFR_NoSongLevelConfig                  = 3,
	EDPFR_NoSongLevel_UniqueId               = 4,
	EDPFR_Max                                = 5,
};

// Enum HTGame.EDrumPointState
// NumValues: 0x0005
enum class EDrumPointState : uint8
{
	EDPSTS_None                              = 0,
	EDPST_Gain_Score                         = 1,
	EDPST_Play_Failed                        = 2,
	EDPST_MAX                                = 3,
	EDrumPointState_MAX                      = 4,
};

// Enum HTGame.EDrumBeatNoteCountType
// NumValues: 0x0005
enum class EDrumBeatNoteCountType : uint8
{
	EDPBNCT_None                             = 0,
	EDPBNCT_Four                             = 1,
	EDPBNCT_Eight                            = 2,
	EDPBNCT_Sixteen                          = 3,
	EDPBNCT_Max                              = 4,
};

// Enum HTGame.EDrumPlaySpeedType
// NumValues: 0x0007
enum class EDrumPlaySpeedType : uint8
{
	EDPBST_None                              = 0,
	EDPBST_50                                = 1,
	EDPBST_100                               = 2,
	EDPBST_125                               = 3,
	EDPBST_150                               = 4,
	EDPBST_200                               = 5,
	EDPBST_Max                               = 6,
};

// Enum HTGame.EElevatorDoorState
// NumValues: 0x0005
enum class EElevatorDoorState : uint8
{
	EDS_Closed                               = 0,
	EDS_Opened                               = 1,
	EDS_Closing                              = 2,
	EDS_Opening                              = 3,
	EDS_MAX                                  = 4,
};

// Enum HTGame.EElevatorDoorType
// NumValues: 0x0003
enum class EElevatorDoorType : uint8
{
	EDT_Single                               = 0,
	EDT_Double                               = 1,
	EDT_MAX                                  = 2,
};

// Enum HTGame.ELogicEventType
// NumValues: 0x000D
enum class ELogicEventType : uint8
{
	AISpawned                                = 0,
	AIDestroyed                              = 1,
	MainRoleLoadFinished                     = 2,
	ClientReady                              = 3,
	BossBattleBegin                          = 4,
	BossBattleEnd                            = 5,
	AISpawnManagerCreate                     = 6,
	AISpawnManagerDestroyed                  = 7,
	GamePaused                               = 8,
	Selfie                                   = 9,
	SceneNPCCustomEvent                      = 10,
	RequestSetEvadeJoyStickVisible           = 11,
	Max                                      = 12,
};

// Enum HTGame.EExtensionDir
// NumValues: 0x0005
enum class EExtensionDir : uint8
{
	Right                                    = 0,
	Left                                     = 1,
	Up                                       = 2,
	Down                                     = 3,
	EExtensionDir_MAX                        = 4,
};

// Enum HTGame.EHTDLSSMode
// NumValues: 0x0009
enum class EHTDLSSMode : uint8
{
	EHT_Off                                  = 0,
	EHT_Auto                                 = 1,
	EHT_DLAA                                 = 2,
	EHT_UltraQuality                         = 3,
	EHT_Quality                              = 4,
	EHT_Balanced                             = 5,
	EHT_Performance                          = 6,
	EHT_UltraPerformance                     = 7,
	EHT_MAX                                  = 8,
};

// Enum HTGame.HTSelectTargetType
// NumValues: 0x0004
enum class EHTSelectTargetType : uint8
{
	SelectTargetType_None                    = 0,
	SelectTargetType_LockTarget              = 1,
	SelectTargetType_FindTarget              = 2,
	SelectTargetType_MAX                     = 3,
};

// Enum HTGame.EHottaScanEffectType
// NumValues: 0x0003
enum class EHottaScanEffectType : uint8
{
	ScanEffect                               = 0,
	GrayEffectWithStencil                    = 1,
	EHottaScanEffectType_MAX                 = 2,
};

// Enum HTGame.HandmadeShelfState
// NumValues: 0x0007
enum class EHandmadeShelfState : uint8
{
	HandmadeShelfStateBegin                  = 0,
	HandmadeStateFloor1                      = 1,
	HandmadeStateFloor2                      = 2,
	HandmadeStateFloor3                      = 3,
	HandmadeStateFloor4                      = 4,
	TransferStateFinish                      = 5,
	HandmadeShelfState_MAX                   = 6,
};

// Enum HTGame.ELaserStartTransformType
// NumValues: 0x0005
enum class ELaserStartTransformType : uint8
{
	UseOwnerOffset                           = 0,
	UseTargetLocationOffset                  = 1,
	UseSelfLocationOffset                    = 2,
	UseAimingTargetLocation                  = 3,
	ELaserStartTransformType_MAX             = 4,
};

// Enum HTGame.EAdditionalAwardNumType
// NumValues: 0x0005
enum class EAdditionalAwardNumType : uint8
{
	EAANT_Fixed                              = 0,
	EAANT_Range                              = 1,
	EAANT_Greater                            = 2,
	EAANT_Ignore                             = 3,
	EAANT_MAX                                = 4,
};

// Enum HTGame.EHTCrowdThreatenType
// NumValues: 0x0004
enum class EHTCrowdThreatenType : uint8
{
	None                                     = 0,
	VehicleThreaten                          = 1,
	ThreatenWatch                            = 2,
	EHTCrowdThreatenType_MAX                 = 3,
};

// Enum HTGame.EVehicleThreatenStateType
// NumValues: 0x0005
enum class EVehicleThreatenStateType : uint8
{
	None                                     = 0,
	Observe                                  = 1,
	Run                                      = 2,
	Dodge                                    = 3,
	EVehicleThreatenStateType_MAX            = 4,
};

// Enum HTGame.EMassCrowdSpawnHashGrid2DType
// NumValues: 0x0006
enum class EMassCrowdSpawnHashGrid2DType : uint8
{
	Default_Grid2D                           = 0,
	Rain_Grid2D                              = 1,
	Night_Grid2D                             = 2,
	RainNight_Grid2D                         = 3,
	Max_Grid2D                               = 4,
	EMassCrowdSpawnHashGrid2DType_MAX        = 5,
};

// Enum HTGame.EPlayerStatus
// NumValues: 0x0006
enum class EPlayerStatus : uint8
{
	Ready                                    = 0,
	Playing                                  = 1,
	Closed                                   = 2,
	UnKnown                                  = 3,
	InValid                                  = 4,
	EPlayerStatus_MAX                        = 5,
};

// Enum HTGame.EMiniMapIconObjectState
// NumValues: 0x0006
enum class EMiniMapIconObjectState : uint8
{
	None                                     = 0,
	Display                                  = 1,
	Stay                                     = 2,
	Disappear                                = 3,
	DisappearEnd                             = 4,
	MAX                                      = 5,
};

// Enum HTGame.EHtMovementAttributeValuePolicy
// NumValues: 0x0004
enum class EHtMovementAttributeValuePolicy : uint8
{
	UseDefaultValue                          = 0,
	IgnoreValue                              = 1,
	OverrideValue                            = 2,
	EHtMovementAttributeValuePolicy_MAX      = 3,
};

// Enum HTGame.EGuideNPCMiaPlayMode
// NumValues: 0x0003
enum class EGuideNPCMiaPlayMode : uint8
{
	MIAPLAYMODE_NONE                         = 0,
	MIAPLAYMODE_DARKAREA_LIGHT               = 1,
	MIAPLAYMODE_MAX                          = 2,
};

// Enum HTGame.EDarkAreaLightState
// NumValues: 0x0005
enum class EDarkAreaLightState : uint8
{
	LIGHTSTATE_CHARGE                        = 0,
	LIGHTSTATE_NORMAL                        = 1,
	LIGHTSTATE_DAMPING                       = 2,
	LIGHTSTATE_CLOSE                         = 3,
	LIGHTSTATE_MAX                           = 4,
};

// Enum HTGame.EPassPermitRPCMessageType
// NumValues: 0x0004
enum class EPassPermitRPCMessageType : uint8
{
	ServerNotifyPassPermit_PassPermitInfoRequest = 0,
	ServerNotifyPassPermit_GetAwardRequest   = 1,
	ClientNotifyPassPermit_PassPermitInfoResponse = 2,
	EPassPermitRPCMessageType_MAX            = 3,
};

// Enum HTGame.EShouldMoveType
// NumValues: 0x0005
enum class EShouldMoveType : uint8
{
	NotChange                                = 0,
	NoToYes                                  = 1,
	YesToNo                                  = 2,
	MoveAnim_MAX                             = 3,
	EShouldMoveType_MAX                      = 4,
};

// Enum HTGame.EHTSitCameraMode
// NumValues: 0x0004
enum class EHTSitCameraMode : uint8
{
	ThirdPerson                              = 0,
	FirstPerson                              = 1,
	Seat                                     = 2,
	Max                                      = 3,
};

// Enum HTGame.ESnakeTrackMode
// NumValues: 0x000A
enum class ESnakeTrackMode : uint8
{
	SnakeTrackMode_None                      = 0,
	SnakeTrackMode_Ready                     = 1,
	SnakeTrackMode_Random                    = 2,
	SnakeTrackMode_S                         = 3,
	SnakeTrackMode_CircularMotion            = 4,
	SnakeTrackMode_LinearMotion_FromBack     = 5,
	SnakeTrackMode_Bounce                    = 6,
	SnakeTrackMode_V                         = 7,
	SnakeTrackMode_Finish                    = 8,
	SnakeTrackMode_MAX                       = 9,
};

// Enum HTGame.EQRSLQuestEndType
// NumValues: 0x0005
enum class EQRSLQuestEndType : uint8
{
	EQET_COMPLETE                            = 0,
	EQET_FAILED                              = 1,
	EQET_DELETE                              = 2,
	EQET_ROLLBACK                            = 3,
	EQET_MAX                                 = 4,
};

// Enum HTGame.EQuestConditionType
// NumValues: 0x0003
enum class EQuestConditionType : uint8
{
	And                                      = 0,
	Or                                       = 1,
	EQuestConditionType_MAX                  = 2,
};

// Enum HTGame.EQuestUIType
// NumValues: 0x000A
enum class EQuestUIType : uint8
{
	QUT_None                                 = 0,
	QUT_CommonUI                             = 1,
	QUT_CommonMapPoint                       = 2,
	QUT_CharacterLevel                       = 3,
	QUT_ForkLevel                            = 4,
	QUT_CloneEnter                           = 5,
	QUT_AdventureManual                      = 6,
	QUT_Vision                               = 7,
	QUT_Equipment                            = 8,
	QUT_MAX                                  = 9,
};

// Enum HTGame.ERedPointTriggerType
// NumValues: 0x0010
enum class ERedPointTriggerType : uint8
{
	TT_Item_Update                           = 0,
	TT_Item_Add                              = 1,
	TT_Item_Remove                           = 2,
	TT_Character_Fork                        = 3,
	TT_Character_Change                      = 4,
	TT_Character_Level_Change                = 5,
	TT_Max_World_Level_Change                = 6,
	TT_Has_Likeability_Chat                  = 7,
	TT_Has_Likeability_Award                 = 8,
	TT_DelegateMission_Award                 = 9,
	TT_Notice_Change                         = 10,
	TT_Function_UnLock                       = 11,
	TT_Adventure_Quest_Change                = 12,
	TT_Adventure_Activation                  = 13,
	TT_Equipment_Inlay                       = 14,
	TT_MAX                                   = 15,
};

// Enum HTGame.ERedPointTargetType
// NumValues: 0x0003
enum class ERedPointTargetType : uint8
{
	MT_Player                                = 0,
	MT_Character                             = 1,
	MT_MAX                                   = 2,
};

// Enum HTGame.ERedPointSaveType
// NumValues: 0x0004
enum class ERedPointSaveType : uint8
{
	ST_Local                                 = 0,
	ST_Server                                = 1,
	ST_NoSave                                = 2,
	ST_MAX                                   = 3,
};

// Enum HTGame.ERedPointMsgType
// NumValues: 0x0003
enum class ERedPointMsgType : uint8
{
	RPMT_SaveData                            = 0,
	RPMT_FuncUnlock                          = 1,
	RPMT_MAX                                 = 2,
};

// Enum HTGame.EClassRepNodeMapping
// NumValues: 0x0007
enum class EClassRepNodeMapping : uint32
{
	NotRouted                                = 0,
	RelevantAllConnections                   = 1,
	RelevantOwnerConnection                  = 2,
	Spatialize_Static                        = 3,
	Spatialize_Dynamic                       = 4,
	Spatialize_Dormancy                      = 5,
	EClassRepNodeMapping_MAX                 = 6,
};

// Enum HTGame.HTRotate
// NumValues: 0x0004
enum class EHTRotate : uint8
{
	Speed                                    = 0,
	Time                                     = 1,
	Infinite                                 = 2,
	HTRotate_MAX                             = 3,
};

// Enum HTGame.EGameplaySignificanceLevel
// NumValues: 0x0008
enum class EGameplaySignificanceLevel : uint8
{
	Off                                      = 0,
	Low                                      = 1,
	Medium                                   = 2,
	High                                     = 3,
	Epic                                     = 4,
	Auto                                     = 5,
	Num                                      = 6,
	EGameplaySignificanceLevel_MAX           = 7,
};

// Enum HTGame.EAbilityTagType
// NumValues: 0x0008
enum class EAbilityTagType : uint8
{
	Melee                                    = 0,
	Skill                                    = 1,
	Evade                                    = 2,
	Buff                                     = 3,
	ChangeSkill                              = 4,
	Artifact                                 = 5,
	TriggerSkill                             = 6,
	Max                                      = 7,
};

// Enum HTGame.EExecutionDamageTypeEX
// NumValues: 0x000A
enum class EExecutionDamageTypeEX : uint8
{
	DAMAGE_TYPE_NORMAL                       = 0,
	DAMAGE_TYPE_COSMOS                       = 1,
	DAMAGE_TYPE_NATURE                       = 2,
	DAMAGE_TYPE_INCANTATION                  = 3,
	DAMAGE_TYPE_CHAOS                        = 4,
	DAMAGE_TYPE_PSYCHE                       = 5,
	DAMAGE_TYPE_LAKSHANA                     = 6,
	DAMAGE_TYPE_PSYCHICALLY                  = 7,
	DAMAGE_TYPE_TRUE                         = 8,
	DAMAGE_TYPE_MAX                          = 9,
};

// Enum HTGame.EExecutionDamageSourceCategory
// NumValues: 0x000A
enum class EExecutionDamageSourceCategory : uint8
{
	DAMAGE_SOURCE_CATEGORY_NULL              = 0,
	DAMAGE_SOURCE_CATEGORY_A                 = 1,
	DAMAGE_SOURCE_CATEGORY_Z                 = 2,
	DAMAGE_SOURCE_CATEGORY_E                 = 3,
	DAMAGE_SOURCE_CATEGORY_Q                 = 4,
	DAMAGE_SOURCE_CATEGORY_R                 = 5,
	DAMAGE_SOURCE_CATEGORY_B                 = 6,
	DAMAGE_SOURCE_CATEGORY_P                 = 7,
	DAMAGE_SOURCE_CATEGORY_F                 = 8,
	DAMAGE_SOURCE_CATEGORY_MAX               = 9,
};

// Enum HTGame.ESkillEventType
// NumValues: 0x0012
enum class ESkillEventType : uint8
{
	SKILL_EVENT_UNKNOW                       = 0,
	SKILL_EVENT_BEGIN                        = 1,
	SKILL_EVENT_PREPARE                      = 2,
	SKILL_EVENT_AFTER_PREPARE                = 3,
	SKILL_EVENT_BEFORE_HIT                   = 4,
	SKILL_EVENT_AFTER_DAMAGE                 = 5,
	SKILL_EVENT_FINISH                       = 6,
	SKILL_EVENT_BREAK                        = 7,
	SKILL_EVENT_AFTER_HIT                    = 8,
	SKILL_EVENT_BREAK_PARRY                  = 9,
	SKILL_EVENT_HIT_MISS                     = 10,
	SKILL_EVENT_FIRST_HIT_TARGET             = 11,
	SKILL_EVENT_FIRST_HIT_COUNT              = 12,
	Skill_EVENT_BEFORE_DAMAGE                = 13,
	SKILL_EVENT_CONSUME_ENERGY               = 14,
	SKILL_EVENT_HIT_DAMAGELOCATION           = 15,
	MAX_EVENT_TYPE                           = 16,
	ESkillEventType_MAX                      = 17,
};

// Enum HTGame.EMutexEffectType
// NumValues: 0x0006
enum class EMutexEffectType : uint8
{
	Mutex_None                               = 0,
	Mutex_Oppose                             = 1,
	Mutex_Update                             = 2,
	Mutex_Interrupt                          = 3,
	Mutex_PlayAndUpdate                      = 4,
	Mutex_Max                                = 5,
};

// Enum HTGame.EAbilityActivationCondition
// NumValues: 0x0009
enum class EAbilityActivationCondition : uint8
{
	AAC_None                                 = 0,
	AAC_FightState                           = 1,
	AAC_LockedTarget                         = 2,
	AAC_PossessedAbility                     = 3,
	AAC_QTE                                  = 4,
	AAC_UnControlledCharacter                = 5,
	AAC_NotChangeAvatar                      = 6,
	ACC_Max                                  = 7,
	EAbilityActivationCondition_MAX          = 8,
};

// Enum HTGame.EInputTriggerSkillType
// NumValues: 0x0004
enum class EInputTriggerSkillType : uint8
{
	Input_Release                            = 0,
	Input_Pressed                            = 1,
	Input_P_And_R                            = 2,
	Input_MAX                                = 3,
};

// Enum HTGame.EInputTriggerSkillCoolDownType
// NumValues: 0x0005
enum class EInputTriggerSkillCoolDownType : uint8
{
	Cooldown_Input_Pressed                   = 0,
	Cooldown_Input_Release                   = 1,
	Cooldown_Input_AfterReplace              = 2,
	Cooldown_EndAbility                      = 3,
	Cooldown_MAX                             = 4,
};

// Enum HTGame.EInputComboTriggerState
// NumValues: 0x0005
enum class EInputComboTriggerState : uint8
{
	ComboTrigger_None                        = 0,
	ComboTrigger_Press                       = 1,
	ComboTrigger_Click                       = 2,
	ComboTrigger_Hold                        = 3,
	ComboTrigger_MAX                         = 4,
};

// Enum HTGame.EModuleExtraType
// NumValues: 0x0003
enum class EModuleExtraType : uint8
{
	ModuleExtraType_WeaponActive             = 0,
	ModuleExtraType_WeaponPassive            = 1,
	ModuleExtraType_Max                      = 2,
};

// Enum HTGame.ESkillSpawnActorRotatorType
// NumValues: 0x000B
enum class ESkillSpawnActorRotatorType : uint8
{
	Type_None                                = 0,
	UseSelfFace                              = 1,
	UseSelfMeshFace                          = 2,
	UseAiming                                = 3,
	UseSkillLockedLocation                   = 4,
	UseTriggerActorLocation                  = 5,
	UseSelfController                        = 6,
	UseSocketRotation                        = 7,
	UseSelfFace_Yaw                          = 8,
	UseWeaponSocketRotation                  = 9,
	ESkillSpawnActorRotatorType_MAX          = 10,
};

// Enum HTGame.ESummonAIAttachType
// NumValues: 0x0004
enum class ESummonAIAttachType : uint8
{
	AttachType_None                          = 0,
	AttachType_Mesh                          = 1,
	AttachType_WeaponArm                     = 2,
	AttachType_Max                           = 3,
};

// Enum HTGame.ESkillSpawnActorLocationType
// NumValues: 0x0003
enum class ESkillSpawnActorLocationType : uint8
{
	Type_SelfMeshSocket                      = 0,
	UseWeaponSocket                          = 1,
	ESkillSpawnActorLocationType_MAX         = 2,
};

// Enum HTGame.EHitBackDirectionType
// NumValues: 0x0005
enum class EHitBackDirectionType : uint8
{
	UseHitRotation                           = 0,
	UseInstigatorOffset                      = 1,
	UseSelfOffset                            = 2,
	UseOpenAttract                           = 3,
	EHitBackDirectionType_MAX                = 4,
};

// Enum HTGame.EBeLinkedActorType
// NumValues: 0x0006
enum class EBeLinkedActorType : uint8
{
	Linked_Unknown                           = 0,
	Linked_Weapon                            = 1,
	Linked_Character                         = 2,
	Linked_TargetToSelf                      = 3,
	Linked_DamageTriggerActor                = 4,
	Linked_MAX                               = 5,
};

// Enum HTGame.EBreakSkillCondition
// NumValues: 0x0008
enum class EBreakSkillCondition : uint8
{
	BreakSkill_None                          = 0,
	BreakSkill_Move                          = 1,
	BreakSkill_Skill                         = 2,
	BreakSkill_Jump                          = 4,
	BreakSkill_AnySkill                      = 8,
	BreakSkill_Falling                       = 16,
	BreakSkill_Gliding                       = 32,
	BreakSkill_MAX                           = 33,
};

// Enum HTGame.ELockDirectionCondition
// NumValues: 0x0005
enum class ELockDirectionCondition : uint8
{
	LockType_None                            = 0,
	LockType_Angle                           = 1,
	LockType_Distance                        = 2,
	LockType_JoystickAngle                   = 3,
	LockType_MAX                             = 4,
};

// Enum HTGame.ECameraShakeTriggerType
// NumValues: 0x0004
enum class ECameraShakeTriggerType : uint8
{
	ProjectileHit                            = 0,
	ProjectileDisappear                      = 1,
	ProjectileDamagedBounce                  = 2,
	ECameraShakeTriggerType_MAX              = 3,
};

// Enum HTGame.EFightStateCondition
// NumValues: 0x0004
enum class EFightStateCondition : uint8
{
	FightState_None                          = 0,
	FightState_Fight                         = 1,
	FightState_Peace                         = 2,
	FightState_MAX                           = 3,
};

// Enum HTGame.EBuffEventType
// NumValues: 0x0030
enum class EBuffEventType : uint8
{
	BUFF_EVENT_UNKNOW                        = 0,
	BUFF_EVENT_BEGIN                         = 1,
	BUFF_EVENT_PERIODIC                      = 2,
	BUFF_ENTER_BATTLE                        = 3,
	BUFF_LEAVE_BATTLE                        = 4,
	BUFF_EVENT_FLOATING                      = 5,
	BUFF_EVENT_HITBACK                       = 6,
	BUFF_EVENT_HITDOWN                       = 7,
	BUFF_EVENT_HITOUT                        = 8,
	BUFF_EVENT_BELINKED                      = 9,
	BUFF_EVENT_ENTER_AIM                     = 10,
	BUFF_EVENT_LEAVE_AIM                     = 11,
	BUFF_EVENT_INTERACTENTRY                 = 12,
	BUFF_EVENT_LANDED                        = 13,
	BUFF_EVENT_SKILL_HIT_BEFORE_CALC         = 14,
	BUFF_EVENT_BESKILL_HIT_BEFORE_CALC       = 15,
	BUFF_EVENT_SKILL_AFTER_HIT               = 16,
	BUFF_EVENT_BE_SKILL_AFTER_HIT            = 17,
	BUFF_EVENT_SKILL_AFTER_DAMAGE            = 18,
	BUFF_EVENT_SKILL_DAMAGE                  = 19,
	BUFF_EVENT_TREATMENT                     = 20,
	BUFF_EVENT_BEING_TREATED                 = 21,
	BUFF_EVENT_UNCRIT                        = 22,
	BUFF_EVENT_UNBECRIT                      = 23,
	BUFF_EVENT_CRIT                          = 24,
	BUFF_EVENT_BECRIT                        = 25,
	BUFF_EVENT_HITHEAD                       = 26,
	BUFF_EVENT_BEHITHEAD                     = 27,
	BUFF_EVENT_KILL                          = 28,
	BUFF_EVENT_KILL_ALL_PLAYER               = 29,
	BUFF_EVENT_BEKILL                        = 30,
	BUFF_EVENT_SHIELDHEALTHSTART             = 31,
	BUFF_EVENT_SHIELDHEALTHEND               = 32,
	BUFF_EVENT_SKILL_BEGIN                   = 33,
	BUFF_EVENT_E_SKILL_BEGIN                 = 34,
	BUFF_EVENT_Q_SKILL_BEGIN                 = 35,
	BUFF_EVENT_MELEE_BEGIN                   = 36,
	BUFF_EVENT_QTE_BEGIN                     = 37,
	BUFF_EVENT_SKILL_FINISH                  = 38,
	BUFF_EVENT_MONTAGE_SKILL_FINISH          = 39,
	BUFF_EVENT_FINISH                        = 40,
	BUFF_EVENT_SKILL_HITTARGET               = 41,
	BUFF_EVENT_APPLY_DEBUFF                  = 42,
	BUFF_EVENT_CHANGE_ROLE_OUT               = 43,
	BUFF_EVENT_CHANGE_ROLE_INT               = 44,
	BUFF_EVENT_APPLY_REACTION                = 45,
	BUFF_MAX_EVENT_TYPE                      = 46,
	BUFF_MAX                                 = 47,
};

// Enum HTGame.EBuffEffectType
// NumValues: 0x0003
enum class EBuffEffectType : uint8
{
	BUFF_ADD                                 = 0,
	BUFF_REMOVE                              = 1,
	BUFF_EFFECT_MAX                          = 2,
};

// Enum HTGame.EGameplayEffectAutoRemoveEventType
// NumValues: 0x0004
enum class EGameplayEffectAutoRemoveEventType : uint8
{
	GameplayEffectAutoRemoveEventType_None   = 0,
	GameplayEffectAutoRemoveEventType_DeadRemove = 1,
	GameplayEffectAutoRemoveEventType_LeaveBattle = 2,
	GameplayEffectAutoRemoveEventType_Max    = 3,
};

// Enum HTGame.DamageSourceType
// NumValues: 0x0004
enum class EDamageSourceType : uint8
{
	DAMAGESOURCETYPE_NONE                    = 0,
	DAMAGESOURCETYPE_WEAPON                  = 1,
	DAMAGESOURCETYPE_ARTIFACT                = 2,
	DAMAGESOURCETYPE_MAX                     = 3,
};

// Enum HTGame.ESkillOperationType
// NumValues: 0x0004
enum class ESkillOperationType : uint8
{
	SKILLOPERATIONTYPE_NONE                  = 0,
	SKILLOPERATIONTYPE_ROCKER_DIRECTION      = 1,
	SKILLOPERATIONTYPE_ROCKER_RANGE          = 2,
	SKILLOPERATIONTYPE_MAX                   = 3,
};

// Enum HTGame.BuffInfoType
// NumValues: 0x0005
enum class EBuffInfoType : uint8
{
	None                                     = 0,
	StateBuff                                = 1,
	PositiveBuff                             = 2,
	NegativeBuff                             = 3,
	BuffInfoType_MAX                         = 4,
};

// Enum HTGame.EAbilityDesType
// NumValues: 0x0003
enum class EAbilityDesType : uint8
{
	ADT_DES                                  = 0,
	ADT_AFFIX                                = 1,
	ADT_MAX                                  = 2,
};

// Enum HTGame.ERootMotionTargetLocationType
// NumValues: 0x0007
enum class ERootMotionTargetLocationType : uint8
{
	UseSelfOffset                            = 0,
	UseTargetLocationOffset                  = 1,
	UseTargetLocationOffset_KeepDis          = 2,
	UseSkillLocation                         = 3,
	UseTargetLocation3D                      = 4,
	UseSelfMoveOffset                        = 5,
	ERootMotionTargetLocationType_MAX        = 6,
};

// Enum HTGame.ERootMotionTaskType
// NumValues: 0x0005
enum class ERootMotionTaskType : uint8
{
	ConstantForce                            = 0,
	MoveToForce                              = 1,
	MoveToActorForce                         = 2,
	JumpForce                                = 3,
	ERootMotionTaskType_MAX                  = 4,
};

// Enum HTGame.EActivateSkillErrorCode
// NumValues: 0x0012
enum class EActivateSkillErrorCode : uint8
{
	Unkown                                   = 0,
	CustomCoolDown                           = 1,
	CantEnterAbilitiesState                  = 2,
	TagsCheck                                = 3,
	LimitUseNormalSkill                      = 4,
	LimitUseSkill                            = 5,
	LimitUseUltraSkill                       = 6,
	MeleeCantBreakSkill                      = 7,
	FallingCheck                             = 8,
	LimitInput                               = 9,
	CustomLimitInput                         = 10,
	CharacterDead                            = 11,
	PlayerUnControlled                       = 12,
	InDialogue                               = 13,
	CantUseEvadeSkill                        = 14,
	EvadeBeanNotEnough                       = 15,
	DynamicGravity                           = 16,
	Max                                      = 17,
};

// Enum HTGame.EAntiplugCode
// NumValues: 0x0004
enum class EAntiplugCode : uint8
{
	Unkown                                   = 0,
	MontagePlayRate                          = 1,
	TickDeltaTime                            = 2,
	Max                                      = 3,
};

// Enum HTGame.EModifyModOp
// NumValues: 0x0004
enum class EModifyModOp : uint8
{
	MODIFY_MODOP_ADDITIVE                    = 0,
	MODIFY_MODOP_DECREMENT                   = 1,
	MODIFY_MODOP_OVERRIDE                    = 2,
	MODIFY_MODOP_MAX                         = 3,
};

// Enum HTGame.EDamageDisPlayType
// NumValues: 0x001E
enum class EDamageDisPlayType : uint8
{
	DisplayType_None                         = 0,
	DisplayType_Immune                       = 1,
	DisplayType_Resist                       = 2,
	DisplayType_RigidityResist               = 3,
	DisplayType_AbnormalResist               = 4,
	DisplayType_Miss                         = 5,
	DisplayType_BigDamage                    = 6,
	DisplayType_Angry                        = 7,
	DisplayType_Weakness                     = 8,
	DisplayType_Tired                        = 9,
	DisplayType_BigFire                      = 10,
	DisplayType_BigIce                       = 11,
	DisplayType_BigThu                       = 12,
	DisplayType_Vulnerable                   = 13,
	DisplayType_Blood                        = 14,
	DisplayType_Absorb                       = 15,
	DisplayType_InstantKill                  = 16,
	DisplayType_SufferInjury                 = 17,
	DisplayType_Block                        = 18,
	DisplayType_Erosive                      = 19,
	DisplayType_SuddenDeath                  = 20,
	DisplayType_Curse                        = 21,
	DisplayType_Unbal                        = 22,
	DisplayType_GuangLingReactionFollow      = 23,
	DisplayType_LingZhouReactionFollow       = 24,
	DisplayType_ZhouAnReactionFollow         = 25,
	DisplayType_AnHunReactionFollow          = 26,
	DisplayType_HunXiangReactionFollow       = 27,
	DisplayType_XiangGuangReactionFollow     = 28,
	DisplayType_Max                          = 29,
};

// Enum HTGame.EDeadRagdollDirection
// NumValues: 0x0004
enum class EDeadRagdollDirection : uint8
{
	RagdollDirection_None                    = 0,
	RagdollDirection_Melee                   = 1,
	RagdollDirection_Shoot                   = 2,
	RagdollDirection_MAX                     = 3,
};

// Enum HTGame.EReactionDisplayType
// NumValues: 0x0004
enum class EReactionDisplayType : uint8
{
	ReactionDisplayType_None                 = 0,
	ReactionDisplayType_GuangLingXiang       = 1,
	ReactionDisplayType_AnHunZhou            = 2,
	ReactionDisplayType_Max                  = 3,
};

// Enum HTGame.EBalancedState
// NumValues: 0x0003
enum class EBalancedState : uint8
{
	NonBalancedState                         = 0,
	BalancedIngState                         = 1,
	EBalancedState_MAX                       = 2,
};

// Enum HTGame.EPassiveAbilitiesTiggerType
// NumValues: 0x0007
enum class EPassiveAbilitiesTiggerType : uint8
{
	PAT_NONE                                 = 0,
	DistanceTriggerType                      = 1,
	RotationTriggerType                      = 2,
	TargetSkillTriggerType                   = 3,
	BeHitTriggerType                         = 4,
	WallTriggerType                          = 5,
	EPassiveAbilitiesTiggerType_MAX          = 6,
};

// Enum HTGame.EDamageShape
// NumValues: 0x0005
enum class EDamageShape : uint8
{
	None                                     = 0,
	Shape_ShotHole                           = 1,
	Shape_Cut                                = 2,
	Shape_Bash                               = 3,
	MAX                                      = 4,
};

// Enum HTGame.EAirRelationType
// NumValues: 0x0005
enum class EAirRelationType : uint8
{
	AirSelf                                  = 0,
	AirTeamNoSelf                            = 1,
	AirTeamSelf                              = 2,
	AirTarget                                = 3,
	EAirRelationType_MAX                     = 4,
};

// Enum HTGame.EAbilityRPCType
// NumValues: 0x0004
enum class EAbilityRPCType : uint8
{
	SetAimingHelper                          = 0,
	ResetStolenAbility                       = 1,
	PauseGEOrNot                             = 2,
	EAbilityRPCType_MAX                      = 3,
};

// Enum HTGame.ESkillGravityDirectionRequirement
// NumValues: 0x0004
enum class ESkillGravityDirectionRequirement : uint8
{
	AnyDirection                             = 0,
	AnyIfDynamicGravityEnable                = 1,
	DefaultDirectionOnly                     = 2,
	ESkillGravityDirectionRequirement_MAX    = 3,
};

// Enum HTGame.EAttackImpulseType
// NumValues: 0x0004
enum class EAttackImpulseType : uint8
{
	AttackImpulse_Low                        = 0,
	AttackImpulse_Middle                     = 1,
	AttackImpulse_High                       = 2,
	AttackImpulse_MAX                        = 3,
};

// Enum HTGame.EDamageFloatsAnimTypes
// NumValues: 0x0016
enum class EDamageFloatsAnimTypes : uint8
{
	EAnimTypeNone                            = 0,
	EDefaultAnim                             = 1,
	EUnbalDamageAnim                         = 2,
	ECriticalDamageAnim                      = 3,
	EPlayerBeDamagedAnim                     = 4,
	EPlayerBeCriticalDamagedAnim             = 5,
	EReactionGuangLingAnim                   = 6,
	EReactionLingZhouAnim                    = 7,
	EReactionZhouAnAnim                      = 8,
	EReactionAnHunAnim                       = 9,
	EReactionHunXiangAnim                    = 10,
	EReactionXiangGuangAnim                  = 11,
	EReactionGuangLingXiangAnim              = 12,
	EReactionAnHunZhouAnim                   = 13,
	EReactionDamageGuangLingAnimFollow       = 14,
	EReactionDamageLingZhouAnimFollow        = 15,
	EReactionDamageZhouAnAnimFollow          = 16,
	EReactionDamageAnHunAnimFollow           = 17,
	EReactionDamageHunXiangAnimFollow        = 18,
	EReactionDamageXiangGuangAnimFollow      = 19,
	ETargetRecoverAnim                       = 20,
	EDamageFloatsAnimTypes_MAX               = 21,
};

// Enum HTGame.ESkillEffectDisableType
// NumValues: 0x0007
enum class ESkillEffectDisableType : uint8
{
	SkillEffectDisableType_None              = 0,
	DisableShakeBoneType                     = 1,
	DisableShakeVertexType                   = 2,
	DisableFixHitResultType                  = 3,
	DisablePlayDamageLocationMontageType     = 4,
	SkillEffectDisableType_MAX               = 5,
	ESkillEffectDisableType_MAX              = 6,
};

// Enum HTGame.EMusicPlayerType
// NumValues: 0x0003
enum class EMusicPlayerType : uint8
{
	RecordPlayer                             = 0,
	VehiclePlayer                            = 1,
	EMusicPlayerType_MAX                     = 2,
};

// Enum HTGame.EHTSpawnPriority
// NumValues: 0x0004
enum class EHTSpawnPriority : uint8
{
	High                                     = 0,
	Normal                                   = 1,
	Low                                      = 2,
	EHTSpawnPriority_MAX                     = 3,
};

// Enum HTGame.EStoreBaseProperty
// NumValues: 0x0019
enum class EStoreBaseProperty : uint8
{
	Store_None                               = 0,
	Cuisine_UnitPrice_Property               = 1,
	Cuisine_UnitPrice_Percentage_Property    = 2,
	Cuisine_UnitPrice_Extra_Property         = 3,
	PassengerFlowVolume_Property             = 4,
	PassengerFlowVolume_Percentage_Property  = 5,
	PassengerFlowVolume_Extra_Property       = 6,
	Consume_Will_Property                    = 7,
	Item_Base_Consume_Will_Property          = 8,
	Cuisine_Exp_Add_Property                 = 9,
	Materials_Consume_Reduce_Property        = 10,
	All_Cuisine_UnintUnitPrice_Add_Property  = 11,
	Good_Event_Weight_Add_Property           = 12,
	Greater_Than_Cuisine_Level_Property      = 13,
	Under_UnitPrice_Property                 = 14,
	ConsumeWill_Reduce_Property              = 15,
	ConsumeWill_Add_Percentage_Property      = 16,
	All_Cuisine_ConsumeWill_Add_Property     = 17,
	All_Cuisine_UnitPrice_Add_Property       = 18,
	PassengerFlowVolume_Less_Than_Property   = 19,
	Greater_Than_Cuisine_Level_Add_ConsumeWill_Property = 20,
	All_Cuisine_ConsumeWill_Break_Even_Property = 21,
	Increase_Extra_PassengerFlowVolume_Property = 22,
	Store_Brand_Exp_Increase_Per_Property    = 23,
	EStoreBaseProperty_MAX                   = 24,
};

// Enum HTGame.EStoreConditionType
// NumValues: 0x0006
enum class EStoreConditionType : uint8
{
	Store_Brand_None                         = 0,
	Store_Brand_Level                        = 1,
	Store_Item_Sales_Volume                  = 2,
	Store_Item_Level                         = 3,
	Store_Manager_Level                      = 4,
	Store_MAX                                = 5,
};

// Enum HTGame.EHTStoreType
// NumValues: 0x0004
enum class EHTStoreType : uint8
{
	E_Store_Small                            = 0,
	E_Store_Middle                           = 1,
	E_Store_Big                              = 2,
	E_Store_MAX                              = 3,
};

// Enum HTGame.EBirdState
// NumValues: 0x0007
enum class EBirdState : uint8
{
	BirdState_Idle                           = 0,
	BirdState_Rotating                       = 1,
	BirdState_StartFlying                    = 2,
	BirdState_Accelerate                     = 3,
	BirdState_Flying                         = 4,
	BirdState_EndFlying                      = 5,
	BirdState_MAX                            = 6,
};

// Enum HTGame.ETeachGuideType
// NumValues: 0x0005
enum class ETeachGuideType : uint8
{
	Basic                                    = 0,
	Battle                                   = 1,
	PlayMethod                               = 2,
	Other                                    = 3,
	ETeachGuideType_MAX                      = 4,
};

// Enum HTGame.EContentShowType
// NumValues: 0x0003
enum class EContentShowType : uint8
{
	ST_IMAGE                                 = 0,
	ST_MEDIA                                 = 1,
	ST_MAX                                   = 2,
};

// Enum HTGame.ESequencerToonLightType
// NumValues: 0x0003
enum class ESequencerToonLightType : uint8
{
	DirLight                                 = 0,
	CameraLight                              = 1,
	ESequencerToonLightType_MAX              = 2,
};

// Enum HTGame.ETrainState
// NumValues: 0x0007
enum class ETrainState : uint8
{
	InValid                                  = 0,
	Running                                  = 1,
	BreakApproachStation                     = 2,
	OpenDoor                                 = 3,
	Stopping                                 = 4,
	CloseDoor                                = 5,
	ETrainState_MAX                          = 6,
};

// Enum HTGame.ETrainOpenDoorSide
// NumValues: 0x0005
enum class ETrainOpenDoorSide : uint8
{
	Right                                    = 0,
	Left                                     = 1,
	Both                                     = 2,
	MaxInValid                               = 3,
	ETrainOpenDoorSide_MAX                   = 4,
};

// Enum HTGame.ETreasurBoxState
// NumValues: 0x0004
enum class ETreasurBoxState : uint8
{
	Lock                                     = 0,
	Close                                    = 1,
	Open                                     = 2,
	ETreasurBoxState_MAX                     = 3,
};

// Enum HTGame.ETreasureBoxType
// NumValues: 0x0003
enum class ETreasureBoxType : uint8
{
	Normal                                   = 0,
	Elite                                    = 1,
	ETreasureBoxType_MAX                     = 2,
};

// Enum HTGame.EHTForEachResult
// NumValues: 0x0003
enum class EHTForEachResult : uint8
{
	Break                                    = 0,
	Continue                                 = 1,
	EHTForEachResult_MAX                     = 2,
};

// Enum HTGame.EHTOrderDirection
// NumValues: 0x0003
enum class EHTOrderDirection : uint8
{
	Forward                                  = 0,
	Reverse                                  = 1,
	EHTOrderDirection_MAX                    = 2,
};

// Enum HTGame.EHTNetMode
// NumValues: 0x0005
enum class EHTNetMode : uint8
{
	Server                                   = 0,
	Client                                   = 1,
	Standalone                               = 2,
	Other                                    = 3,
	EHTNetMode_MAX                           = 4,
};

// Enum HTGame.EHTRole
// NumValues: 0x0005
enum class EHTRole : uint8
{
	ServerRole                               = 0,
	LocalClientRole                          = 1,
	OtherClientRole                          = 2,
	Unkown                                   = 3,
	EHTRole_MAX                              = 4,
};

// Enum HTGame.EHTPlatformType
// NumValues: 0x0009
enum class EHTPlatformType : uint8
{
	Invalid                                  = 0,
	Windows                                  = 1,
	IOS                                      = 2,
	Android                                  = 3,
	Mac                                      = 4,
	Linux                                    = 5,
	PS4                                      = 6,
	PS5                                      = 7,
	MAX                                      = 8,
};

// Enum HTGame.EServerStateType
// NumValues: 0x0009
enum class EServerStateType : uint8
{
	SERVER_STATE_DEFAULT                     = 0,
	SERVER_STATE_OPEN                        = 1,
	SERVER_STATE_CLOSE                       = 2,
	SERVER_STATE_WAIT                        = 3,
	SERVER_STATE_IDLE                        = 4,
	SERVER_STATE_BUSY                        = 5,
	SERVER_STATE_FULL                        = 6,
	SERVER_STATE_INVALID                     = 7,
	SERVER_STATE_MAX                         = 8,
};

// Enum HTGame.ELoginType
// NumValues: 0x0006
enum class ELoginType : uint8
{
	Login_Type_AccountLogin                  = 0,
	Login_Type_AccountIdLogin                = 1,
	Login_Type_PwrdOneSDKLogin               = 2,
	Login_Type_GMClientLogin                 = 3,
	Login_Type_MIN                           = 0,
	Login_Type_MAX                           = 3,
};

// Enum HTGame.EUIMessageEffectType
// NumValues: 0x0003
enum class EUIMessageEffectType : uint8
{
	None                                     = 0,
	SendGift                                 = 1,
	Max                                      = 2,
};

// Enum HTGame.EMovementCustomSubMode
// NumValues: 0x001A
enum class EMovementCustomSubMode : uint8
{
	MOVE_Custom_Sub_None                     = 0,
	MOVE_Custom_Sub_Self                     = 1,
	MOVE_Custom_Sub_Ladder                   = 2,
	MOVE_Custom_Sub_Vines                    = 3,
	MOVE_Custom_Sub_SprintVines              = 4,
	MOVE_Custom_Sub_SlideVines               = 5,
	MOVE_Custom_Sub_Vault                    = 6,
	MOVE_Custom_Sub_Catch                    = 7,
	MOVE_Custom_Sub_VinesOver                = 8,
	Move_Custom_Sub_DriftSandFalling         = 9,
	MOVE_Custom_Sub_LadderOver               = 10,
	MOVE_Custom_Sub_RunOnWalls               = 11,
	MOVE_Custom_Sub_RunOnWallsSprint         = 12,
	MOVE_Custom_Sub_RunOnWallsOver           = 13,
	MOVE_Custom_Sub_RunOnWallsBackJump       = 14,
	MOVE_Custom_Sub_RunOnWallsLandToWall     = 15,
	Move_Custom_Sub_Gliding                  = 16,
	MOVE_Custom_Sub_Vehicle                  = 17,
	MOVE_Custom_Sub_SprintToVinesIn          = 18,
	MOVE_Custom_Sub_SlidingDown              = 19,
	MOVE_Custom_Sub_Fly                      = 20,
	MOVE_Custom_Sub_ParallelFly              = 21,
	MOVE_Custom_Sub_Diving                   = 22,
	MOVE_Custom_Sub_Sneak                    = 23,
	MOVE_Custom_Sub_MAX                      = 24,
	EMovementCustomSubMode_MAX               = 25,
};

// Enum HTGame.EHTRotationMode
// NumValues: 0x0005
enum class EHTRotationMode : uint8
{
	None                                     = 0,
	VelocityDirection                        = 1,
	LookingDirection                         = 2,
	Aiming                                   = 3,
	Max                                      = 4,
};

// Enum HTGame.EHTViewMode
// NumValues: 0x0003
enum class EHTViewMode : uint8
{
	FirstPerson                              = 0,
	ThirdPerson                              = 1,
	Max                                      = 2,
};

// Enum HTGame.EMoveAnimState
// NumValues: 0x0010
enum class EMoveAnimState : uint8
{
	MoveAnim_None                            = 0,
	MoveAnim_Grounded                        = 1,
	MoveAnim_InAir                           = 2,
	MoveAnim_Vines                           = 3,
	MoveAnim_Ragdoll                         = 4,
	MoveAnim_Swim                            = 5,
	MoveAnim_Ladder                          = 6,
	MoveAnim_Flight                          = 7,
	MoveAnim_Vault                           = 8,
	MoveAnim_Gliding                         = 9,
	MoveAnim_Fly                             = 10,
	MoveAnim_ParallelFly                     = 11,
	MoveAnim_Diving                          = 12,
	MoveAnim_Vehicle                         = 13,
	MoveAnim_SlidingDown                     = 14,
	MoveAnim_MAX                             = 15,
};

// Enum HTGame.EVinesSubState
// NumValues: 0x000B
enum class EVinesSubState : uint8
{
	VinesSub_None                            = 0,
	VinesSub_Vines                           = 1,
	VinesSub_SprintVines                     = 2,
	VinesSub_VinesOver                       = 3,
	VinesSub_RunOnWalls                      = 4,
	VinesSub_RunOnWallsSprint                = 5,
	VinesSub_RunOnWallsOver                  = 6,
	VinesSub_RunOnWallsBackJump              = 7,
	VinesSub_RunOnWallsLandToWall            = 8,
	VinesSub_SprintToVinesIn                 = 9,
	VinesSub_MAX                             = 10,
};

// Enum HTGame.EEavesVinesSubState
// NumValues: 0x0004
enum class EEavesVinesSubState : uint8
{
	EavesVines_None                          = 0,
	EavesVines_ToOver                        = 1,
	EavesVines_ToClimb                       = 2,
	EavesVines_MAX                           = 3,
};

// Enum HTGame.EToVinesFrom
// NumValues: 0x0008
enum class EToVinesFrom : uint8
{
	From_None                                = 0,
	From_Walking                             = 1,
	From_Sprint                              = 2,
	From_Falling                             = 3,
	From_Swim                                = 4,
	From_Other                               = 5,
	VinesSub_MAX                             = 6,
	EToVinesFrom_MAX                         = 7,
};

// Enum HTGame.EVinesIdle
// NumValues: 0x0004
enum class EVinesIdle : uint8
{
	VinesIdle_None                           = 0,
	VinesIdle_FootL                          = 1,
	VinesIdle_FootR                          = 2,
	VinesIdle_MAX                            = 3,
};

// Enum HTGame.EFootLock
// NumValues: 0x0004
enum class EFootLock : uint8
{
	FootLock_None                            = 0,
	FootLock_CrisscrossL                     = 1,
	FootLock_CrisscrossR                     = 2,
	FootLock_MAX                             = 3,
};

// Enum HTGame.EVinesDirection
// NumValues: 0x0009
enum class EVinesDirection : uint8
{
	Direction_Up                             = 0,
	Direction_UL                             = 1,
	Direction_Left                           = 2,
	Direction_DL                             = 3,
	Direction_Down                           = 4,
	Direction_DR                             = 5,
	Direction_Right                          = 6,
	Direction_UR                             = 7,
	Direction_MAX                            = 8,
};

// Enum HTGame.EWallRunEndReason
// NumValues: 0x0008
enum class EWallRunEndReason : uint8
{
	ReachTop                                 = 0,
	ReachLand                                = 1,
	Interrupted                              = 2,
	StateEnd                                 = 3,
	LoseWall                                 = 4,
	ReclineTooMuch                           = 5,
	Exhaust                                  = 6,
	Max                                      = 7,
};

// Enum HTGame.EDisableAssetUserData
// NumValues: 0x000B
enum class EDisableAssetUserData : uint8
{
	None                                     = 0,
	NoVault                                  = 1,
	NoVines                                  = 2,
	NoStanding                               = 3,
	NoStepUp                                 = 4,
	NoDynamicGravity                         = 5,
	CanVines                                 = 6,
	EnableFootIK                             = 7,
	NoWalk                                   = 8,
	NoSlidingDown                            = 9,
	EDisableAssetUserData_MAX                = 10,
};

// Enum HTGame.EMarkersAssetUserData
// NumValues: 0x0004
enum class EMarkersAssetUserData : uint8
{
	None                                     = 0,
	Stone                                    = 50,
	Stairs                                   = 51,
	EMarkersAssetUserData_MAX                = 52,
};

// Enum HTGame.EVaultSubState
// NumValues: 0x000C
enum class EVaultSubState : uint8
{
	VaultSub_None                            = 0,
	VaultSub_SlowLowStepUp                   = 1,
	VaultSub_SlowMiddleStepUp                = 2,
	VaultSub_SlowHighStepUp                  = 3,
	VaultSub_FastLowStepUp                   = 4,
	VaultSub_FastHighStepUp                  = 5,
	VaultSub_FastLowVault_L                  = 6,
	VaultSub_FastLowVault_R                  = 7,
	VaultSub_FastMiddleVault                 = 8,
	VaultSub_FastHighVault                   = 9,
	VaultSub_FallingStepUp                   = 10,
	VaultSub_MAX                             = 11,
};

// Enum HTGame.ESetSkillControllerImageType
// NumValues: 0x0004
enum class ESetSkillControllerImageType : uint8
{
	None                                     = 0,
	CanGliding                               = 1,
	Gliding                                  = 2,
	ESetSkillControllerImageType_MAX         = 3,
};

// Enum HTGame.EPausedGameType
// NumValues: 0x0004
enum class EPausedGameType : uint8
{
	None                                     = 0,
	PG_OpenUI                                = 1,
	PG_UltraSkillVideo                       = 2,
	EPausedGameType_MAX                      = 3,
};

// Enum HTGame.ETransferLoadingUIType
// NumValues: 0x0006
enum class ETransferLoadingUIType : uint8
{
	AutoWaitLoading                          = 0,
	AutoWaitLoading_FadeOut                  = 1,
	ForceTransfer_FadeOut                    = 2,
	ForceTransfer                            = 3,
	ForceTransfer_NoLimitMoving              = 4,
	ETransferLoadingUIType_MAX               = 5,
};

// Enum HTGame.ELimitGamePlayFunType
// NumValues: 0x000F
enum class ELimitGamePlayFunType : uint8
{
	LimitGamePlayFun_None                    = 0,
	LimitGamePlayFun_Vault                   = 1,
	LimitGamePlayFun_Vines                   = 2,
	LimitGamePlayFun_Melee                   = 3,
	LimitGamePlayFun_Ability                 = 4,
	LimitGamePlayFun_Evade                   = 5,
	LimitGamePlayFun_Jump                    = 6,
	LimitGamePlayFun_SecondJump              = 7,
	LimitGamePlayFun_UltSkill                = 8,
	LimitGamePlayFun_Run                     = 9,
	LimitGamePlayFun_Sprint                  = 10,
	LimitGamePlayFun_Gliding                 = 11,
	LimitGamePlayFun_DynamicGravity          = 12,
	LimitGamePlayFun_CantChangePlayer        = 13,
	LimitGamePlayFun_Max                     = 14,
};

// Enum HTGame.ECharacterSlotType
// NumValues: 0x0005
enum class ECharacterSlotType : uint8
{
	CHARACTER_SLOT_FIRST                     = 0,
	CHARACTER_SLOT_SECOND                    = 1,
	CHARACTER_SLOT_THIRD                     = 2,
	CHARACTER_SLOT_FOURTH                    = 3,
	CHARACTER_SLOT_MAX                       = 4,
};

// Enum HTGame.ECharacterShowSlotType
// NumValues: 0x0009
enum class ECharacterShowSlotType : uint8
{
	CHARACTERSHOW_SLOT_FIRST                 = 0,
	CHARACTERSHOW_SLOT_SECOND                = 1,
	CHARACTERSHOW_SLOT_THIRD                 = 2,
	CHARACTERSHOW_SLOT_FOURTH                = 3,
	CHARACTERSHOW_SLOT_FIVE                  = 4,
	CHARACTERSHOW_SLOT_SIX                   = 5,
	CHARACTERSHOW_SLOT_SEVEN                 = 6,
	CHARACTERSHOW_SLOT_EIGHT                 = 7,
	CHARACTERSHOW_SLOT_MAX                   = 8,
};

// Enum HTGame.ETypeInfo
// NumValues: 0x0003
enum class ETypeInfo : uint8
{
	TYPE_PLAYER                              = 0,
	TYPE_NPC                                 = 1,
	TYPE_MAX                                 = 2,
};

// Enum HTGame.EBodyType
// NumValues: 0x0009
enum class EBodyType : uint8
{
	FemaleBodyType_LevelOne                  = 0,
	FemaleBodyType_LevelTwo                  = 1,
	FemaleBodyType_LevelThree                = 2,
	FemaleBodyType_LevelFour                 = 3,
	MaleBodyType_LevelOne                    = 4,
	MaleBodyType_LevelTwo                    = 5,
	MaleBodyType_LevelThree                  = 6,
	MaleBodyType_LevelFour                   = 7,
	EBodyType_MAX                            = 8,
};

// Enum HTGame.EOccupationVisibileTag
// NumValues: 0x0002
enum class EOccupationVisibileTag : uint8
{
	Widget                                   = 0,
	EOccupationVisibileTag_MAX               = 1,
};

// Enum HTGame.EEquipmentSuitType
// NumValues: 0x0014
enum class EEquipmentSuitType : uint8
{
	EquipmentSuitType_None                   = 0,
	EquipmentSuitType_TaoZhuang1             = 1,
	EquipmentSuitType_TaoZhuang2             = 2,
	EquipmentSuitType_TaoZhuang3             = 3,
	EquipmentSuitType_TaoZhuang4             = 4,
	EquipmentSuitType_TaoZhuang5             = 5,
	EquipmentSuitType_TaoZhuang6             = 6,
	EquipmentSuitType_TaoZhuang7             = 7,
	EquipmentSuitType_TaoZhuang8             = 8,
	EquipmentSuitType_TaoZhuang9             = 9,
	EquipmentSuitType_TaoZhuang10            = 10,
	EquipmentSuitType_TaoZhuang11            = 11,
	EquipmentSuitType_TaoZhuang12            = 12,
	EquipmentSuitType_TaoZhuang13            = 13,
	EquipmentSuitType_TaoZhuang14            = 14,
	EquipmentSuitType_TaoZhuang15            = 15,
	EquipmentSuitType_TaoZhuang16            = 16,
	EquipmentSuitType_TaoZhuang17            = 17,
	EquipmentSuitType_TaoZhuang18            = 18,
	EquipmentSuitType_MAX                    = 19,
};

// Enum HTGame.ECharacterListType
// NumValues: 0x0006
enum class ECharacterListType : uint8
{
	CHARACTER_LIST_INFO                      = 0,
	CHARACTER_LIST_FORMATION_MEMBER          = 1,
	CHARACTER_LIST_FORMATION_ALL             = 2,
	CHARACTER_LIST_CHARACTER_SHOW_SELECT     = 3,
	CHARACTER_LIST_CHARACTER_ABYSS_CLONE     = 4,
	CHARACTER_LIST_MAX                       = 5,
};

// Enum HTGame.EItemSortType
// NumValues: 0x0004
enum class EItemSortType : uint8
{
	None                                     = 0,
	Quality                                  = 1,
	Level                                    = 2,
	MAX                                      = 3,
};

// Enum HTGame.EWeaponHoldStateType
// NumValues: 0x0004
enum class EWeaponHoldStateType : uint8
{
	HoldWeapon_Hide                          = 0,
	HoldWeapon_HideByMontage                 = 1,
	HoldWeapon_Hand                          = 2,
	HoldWeapon_Max                           = 3,
};

// Enum HTGame.EWeaponAnimState
// NumValues: 0x0003
enum class EWeaponAnimState : uint8
{
	Normal                                   = 0,
	Activated                                = 1,
	EWeaponAnimState_MAX                     = 2,
};

// Enum HTGame.EHTCustomIgnoreMoveInputType
// NumValues: 0x0019
enum class EHTCustomIgnoreMoveInputType : uint8
{
	MontageNotify                            = 0,
	GamePaused                               = 1,
	LimitProp                                = 2,
	SkillEffect                              = 3,
	StartSkillSection                        = 4,
	Dialogue                                 = 5,
	Blueprint                                = 6,
	BackTurn                                 = 7,
	LockTargetCamera                         = 8,
	Vines                                    = 9,
	Aimming                                  = 10,
	CommonInteract                           = 11,
	Vault                                    = 12,
	CameraFade                               = 13,
	SetViewTarget                            = 14,
	Patrol                                   = 15,
	Gliding                                  = 16,
	NoStanding                               = 17,
	TransferState                            = 18,
	Driving                                  = 19,
	SequenceBlend                            = 20,
	AIBehavior                               = 21,
	EntryGameplay                            = 22,
	IgnoreInputTypeCount                     = 23,
	EHTCustomIgnoreMoveInputType_MAX         = 24,
};

// Enum HTGame.EHTCustomIgnoreStrengtnConsumeType
// NumValues: 0x0002
enum class EHTCustomIgnoreStrengtnConsumeType : uint8
{
	SpecificWaterSwmming                     = 0,
	EHTCustomIgnoreStrengtnConsumeType_MAX   = 1,
};

// Enum HTGame.EPreviewWidgetType
// NumValues: 0x0007
enum class EPreviewWidgetType : uint8
{
	PW_TYPE_NONE                             = 0,
	PW_TYPE_CHARACTER_INFO                   = 1,
	PW_TYPE_CHARACTER_FORMATION              = 2,
	PW_TYPE_CHARACTER_BAG_FORK               = 3,
	PW_TYPE_CHARACTER_FORK_UPGRADE           = 4,
	PW_TYPE_CHARACTER_EQUIPMENT_DEVELOP      = 5,
	PW_TYPE_MAX                              = 6,
};

// Enum HTGame.EBreakableLevel
// NumValues: 0x0005
enum class EBreakableLevel : uint8
{
	BL_Low                                   = 0,
	BL_Middle                                = 1,
	BL_High                                  = 2,
	BL_Invincible                            = 3,
	BL_MAX                                   = 4,
};

// Enum HTGame.EItemEffectType
// NumValues: 0x0009
enum class EItemEffectType : uint8
{
	NoEffect                                 = 0,
	AddHPInstant                             = 1,
	AddHPConstant                            = 2,
	Revive                                   = 3,
	Attack                                   = 4,
	Defense                                  = 5,
	Explore                                  = 6,
	Special                                  = 7,
	EItemEffectType_MAX                      = 8,
};

// Enum HTGame.ECharacterGroupType
// NumValues: 0x0007
enum class ECharacterGroupType : uint8
{
	CHARACTER_GROUP_TYPE_ZERO                = 0,
	CHARACTER_GROUP_TYPE_ONE                 = 1,
	CHARACTER_GROUP_TYPE_TWO                 = 2,
	CHARACTER_GROUP_TYPE_THREE               = 3,
	CHARACTER_GROUP_TYPE_FOUR                = 4,
	CHARACTER_GROUP_TYPE_FIVE                = 5,
	CHARACTER_GROUP_TYPE_MAX                 = 6,
};

// Enum HTGame.EEquipmentCiTiaoType
// NumValues: 0x0005
enum class EEquipmentCiTiaoType : uint8
{
	ET_None                                  = 0,
	ET_Condition                             = 1,
	ET_Count                                 = 2,
	ECT_MAX                                  = 3,
	EEquipmentCiTiaoType_MAX                 = 4,
};

// Enum HTGame.EFurnitureShowType
// NumValues: 0x000B
enum class EFurnitureShowType : uint8
{
	EAll                                     = 0,
	EFurniture                               = 1,
	EGreenPlants                             = 2,
	EWallDecor                               = 3,
	ERecordPlayer                            = 4,
	EFishTank                                = 5,
	EDisplayItem                             = 6,
	EBigPoster                               = 7,
	ESmallPoster                             = 8,
	EPosterBoard                             = 9,
	EFurnitureShowType_MAX                   = 10,
};

// Enum HTGame.EAttributeShowType
// NumValues: 0x0009
enum class EAttributeShowType : uint8
{
	EAll                                     = 0,
	ERecordPlayer                            = 1,
	EFishTank                                = 2,
	EWallDecor                               = 3,
	EDisplayItem                             = 4,
	EFurniture                               = 5,
	EGreenPlants                             = 6,
	EMax                                     = 7,
	EAttributeShowType_MAX                   = 8,
};

// Enum HTGame.EFurnitureType
// NumValues: 0x0016
enum class EFurnitureType : uint8
{
	EHandmadeShelf                           = 0,
	ERecordPlayer                            = 1,
	EPhotoWall                               = 2,
	EFishTank1                               = 3,
	EFishTank2                               = 4,
	EFlowerPot                               = 5,
	EFlowerBasin                             = 6,
	EFlowerShelf                             = 7,
	EBook                                    = 8,
	EDeskLamp                                = 9,
	EOrnament                                = 10,
	EBigHandmade                             = 11,
	EChair                                   = 12,
	ETeaTable                                = 13,
	EPotting                                 = 14,
	EBigPoster                               = 15,
	ESmallPoster                             = 16,
	EPicture                                 = 17,
	EBed                                     = 18,
	EPiano                                   = 19,
	EPosterBoard                             = 20,
	Max                                      = 21,
};

// Enum HTGame.EItemOutputSource
// NumValues: 0x0007
enum class EItemOutputSource : uint8
{
	OS_SHOP                                  = 0,
	OS_ACTIVITY                              = 1,
	OS_PATH_FIND                             = 2,
	OS_UI_PATH                               = 3,
	OS_UI_ICON                               = 4,
	OS_TEXT                                  = 5,
	OS_MAX                                   = 6,
};

// Enum HTGame.EAwakenModifyType
// NumValues: 0x0004
enum class EAwakenModifyType : uint8
{
	EAWAKEN_MODIFY_NONE                      = 0,
	EAWAKEN_MODIFY_SKILL_LEVEL               = 1,
	EAWAKEN_MODIFY_BUFF                      = 2,
	EAWAKEN_MODIFY_MAX                       = 3,
};

// Enum HTGame.EAwakenEffect
// NumValues: 0x0004
enum class EAwakenEffect : uint8
{
	Awaken_Effect                            = 0,
	Awaken_Resonance                         = 1,
	MoveAnim_MAX                             = 2,
	EAwakenEffect_MAX                        = 3,
};

// Enum HTGame.EGroundAnimState
// NumValues: 0x000D
enum class EGroundAnimState : uint8
{
	MoveAnim_None                            = 0,
	MoveAnim_Idle                            = 1,
	MoveAnim_Walk                            = 2,
	MoveAnim_Run                             = 3,
	MoveAnim_Sprint                          = 4,
	MoveAnim_Crouch                          = 5,
	MoveAnim_Exhaust                         = 6,
	MoveAnim_Roll                            = 7,
	MoveAnim_Vault                           = 8,
	MoveAnim_Getup                           = 9,
	MoveAnim_VinesOver                       = 10,
	MoveAnim_RunOnWallOver                   = 11,
	MoveAnim_MAX                             = 12,
};

// Enum HTGame.EWaterAnimState
// NumValues: 0x0006
enum class EWaterAnimState : uint8
{
	WaterAnim_Down                           = 0,
	WaterAnim_Up                             = 1,
	WaterAnim_Idle                           = 2,
	WaterAnim_Slow                           = 3,
	WaterAnim_Fast                           = 4,
	WaterAnim_MAX                            = 5,
};

// Enum HTGame.EHTMustWalkType
// NumValues: 0x0009
enum class EHTMustWalkType : uint8
{
	NormalWalk                               = 0,
	ForceWalk                                = 1,
	LiftWalk                                 = 2,
	PatrolWalk                               = 3,
	BackupWalk                               = 4,
	InteractWalk                             = 5,
	Dialogue                                 = 6,
	MustWalkType_Max                         = 7,
	EHTMustWalkType_MAX                      = 8,
};

// Enum HTGame.EHTCustomCantLeaveStateType
// NumValues: 0x0004
enum class EHTCustomCantLeaveStateType : uint8
{
	Vines                                    = 0,
	Vault                                    = 1,
	CantLeaveState_Max                       = 2,
	EHTCustomCantLeaveStateType_MAX          = 3,
};

// Enum HTGame.EJumpLanded
// NumValues: 0x0003
enum class EJumpLanded : uint8
{
	MoveAnim_Low                             = 0,
	MoveAnim_High                            = 1,
	MoveAnim_MAX                             = 2,
};

// Enum HTGame.HTMoveAttributeSet
// NumValues: 0x0004
enum class EHTMoveAttributeSet : uint8
{
	MAS_Default                              = 0,
	MAS_1stJump                              = 1,
	MAS_2ndJump                              = 2,
	MAS_MAX                                  = 3,
};

// Enum HTGame.HTStepInterpType
// NumValues: 0x0004
enum class EHTStepInterpType : uint8
{
	None                                     = 0,
	StepUpInterp                             = 1,
	StepDownInterp                           = 2,
	HTStepInterpType_MAX                     = 3,
};

// Enum HTGame.EVaultType
// NumValues: 0x0008
enum class EVaultType : uint8
{
	Low                                      = 0,
	Middle                                   = 1,
	High                                     = 2,
	Falling                                  = 3,
	Backup                                   = 4,
	Span                                     = 5,
	CampMax                                  = 6,
	EVaultType_MAX                           = 7,
};

// Enum HTGame.EVinesIKType
// NumValues: 0x0008
enum class EVinesIKType : uint8
{
	LeftHand                                 = 0,
	RightHand                                = 1,
	LeftFoot                                 = 2,
	RightFoot                                = 3,
	LeftCalf                                 = 4,
	RightCalf                                = 5,
	VinesIK_MAX                              = 6,
	EVinesIKType_MAX                         = 7,
};

// Enum HTGame.EMultiTransform
// NumValues: 0x0004
enum class EMultiTransform : uint8
{
	Vault                                    = 0,
	VinesOver                                = 1,
	RunOnWallsOver                           = 2,
	EMultiTransform_MAX                      = 3,
};

// Enum HTGame.ERotateType
// NumValues: 0x0004
enum class ERotateType : uint8
{
	Rotate_None                              = 0,
	Rotate_Left                              = 1,
	Rotate_Right                             = 2,
	Rotate_MAX                               = 3,
};

// Enum HTGame.EQuestProcessType
// NumValues: 0x0004
enum class EQuestProcessType : uint8
{
	EQPT_COM                                 = 0,
	EQPT_SEQUENCE                            = 1,
	EQPT_CHOICE                              = 2,
	EQPT_MAX                                 = 3,
};

// Enum HTGame.EDamageReason
// NumValues: 0x0006
enum class EDamageReason : uint8
{
	Normal                                   = 0,
	Drowning                                 = 1,
	Falling                                  = 2,
	Eroding                                  = 3,
	FallingBox                               = 4,
	Max                                      = 5,
};

// Enum HTGame.EDeadReason
// NumValues: 0x0006
enum class EDeadReason : uint8
{
	Normal                                   = 0,
	Drowned                                  = 1,
	Fall                                     = 2,
	SandStorm                                = 3,
	FallingBox                               = 4,
	Max                                      = 5,
};

// Enum HTGame.EImpactPart
// NumValues: 0x000F
enum class EImpactPart : uint8
{
	EP_Front                                 = 0,
	EP_FrontRight                            = 1,
	EP_FrontLeft                             = 2,
	EP_RightFront                            = 3,
	EP_LeftFront                             = 4,
	EP_RightBack                             = 5,
	EP_LeftBack                              = 6,
	EP_BackRight                             = 7,
	EP_BackLeft                              = 8,
	EP_Back                                  = 9,
	EP_FrontGlass                            = 10,
	EP_RightGlass                            = 11,
	EP_BackGlass                             = 12,
	EP_LeftGlass                             = 13,
	EP_Max                                   = 14,
};

// Enum HTGame.EInteractIndex
// NumValues: 0x0005
enum class EInteractIndex : uint8
{
	Default                                  = 0,
	OpenShop                                 = 27,
	Dialogue                                 = 66,
	TelephoneBox                             = 67,
	MAX                                      = 68,
};

// Enum HTGame.EDialogInteractType
// NumValues: 0x0006
enum class EDialogInteractType : uint8
{
	DIT_COM                                  = 0,
	DIT_SIDE_QUEST                           = 1,
	DIT_MAIN_QUEST                           = 2,
	DIT_LEGEND                               = 3,
	DIT_LIKING                               = 4,
	DIT_MAX                                  = 5,
};

// Enum HTGame.ELocalSaveGameArchiveType
// NumValues: 0x0002
enum class ELocalSaveGameArchiveType : uint8
{
	RedPoint                                 = 0,
	ELocalSaveGameArchiveType_MAX            = 1,
};

// Enum HTGame.EAIPatrolType
// NumValues: 0x0005
enum class EAIPatrolType : uint8
{
	Random                                   = 0,
	InSitu                                   = 1,
	Route                                    = 2,
	Territory                                = 3,
	Max                                      = 4,
};

// Enum HTGame.EAttributeType
// NumValues: 0x0003
enum class EAttributeType : uint8
{
	AT_BASE                                  = 0,
	AT_UPGRADE                               = 1,
	AT_MAX                                   = 2,
};

// Enum HTGame.EAttributeFilterType
// NumValues: 0x0006
enum class EAttributeFilterType : uint8
{
	Filter_None                              = 0,
	Filter_Shape_Main                        = 1,
	Filter_Shape_Second                      = 2,
	Filter_Core_Main                         = 3,
	Filter_Core_Second                       = 4,
	Filter_MAX                               = 5,
};

// Enum HTGame.ELevelSceneType
// NumValues: 0x0008
enum class ELevelSceneType : uint8
{
	LEVEL_TYPE_OUTDOOR                       = 0,
	LEVEL_TYPE_CREATE_ROLE                   = 1,
	LEVEL_TYPE_SINGLE_LEVEL                  = 2,
	LEVEL_TYPE_CLONE_LEVEL                   = 3,
	LEVEL_TYPE_UPDATER                       = 4,
	LEVEL_TYPE_ABYSS_CLONE                   = 5,
	LEVEL_TYPE_UNKNOWN                       = 6,
	LEVEL_TYPE_MAX                           = 7,
};

// Enum HTGame.EDropGroupLevelType
// NumValues: 0x0005
enum class EDropGroupLevelType : uint8
{
	DROPGROUPLEVELTYPE_CHARACTERLEVEL        = 0,
	DROPGROUPLEVELTYPE_WORLDLEVEL            = 1,
	DROPGROUPLEVELTYPE_TARGETLEVEL           = 2,
	DROPGROUPLEVELTYPE_BIGWORLDLEVEL         = 3,
	DROPGROUPLEVELTYPE_MAX                   = 4,
};

// Enum HTGame.EDropSequenceNumType
// NumValues: 0x0004
enum class EDropSequenceNumType : uint8
{
	DROPSEQUENCENUMTYPE_FIXED                = 0,
	DROPSEQUENCENUMTYPE_PROBABILITY          = 1,
	DROPSEQUENCENUMTYPE_RANGE                = 2,
	DROPSEQUENCENUMTYPE_MAX                  = 3,
};

// Enum HTGame.EGameFunctionType
// NumValues: 0x0007
enum class EGameFunctionType : uint8
{
	None                                     = 0,
	ActivityDropGroupType1                   = 1,
	ActivityDropGroupType2                   = 2,
	ActivityDropGroupType3                   = 3,
	ActivityDropGroupType4                   = 4,
	ActivityDropGroupType5                   = 5,
	EGameFunctionType_MAX                    = 6,
};

// Enum HTGame.EPathFollowingReason
// NumValues: 0x0006
enum class EPathFollowingReason : uint8
{
	None                                     = 0,
	Skill                                    = 1,
	Common                                   = 2,
	Cinema                                   = 3,
	Interact                                 = 4,
	EPathFollowingReason_MAX                 = 5,
};

// Enum HTGame.EAvoidObstacleDestinationType
// NumValues: 0x0005
enum class EAvoidObstacleDestinationType : uint8
{
	NoneAvoid                                = 0,
	LeftAvoid                                = 1,
	RightAvoid                               = 2,
	ForwardAvoid                             = 3,
	EAvoidObstacleDestinationType_MAX        = 4,
};

// Enum HTGame.EThreatenDetectType
// NumValues: 0x0003
enum class EThreatenDetectType : uint8
{
	SphereBoxDetect                          = 0,
	TickDetect                               = 1,
	EThreatenDetectType_MAX                  = 2,
};

// Enum HTGame.EThreatenOriginType
// NumValues: 0x0007
enum class EThreatenOriginType : uint8
{
	DefaultDangerOrigin                      = 0,
	VehicleDangerOrigin                      = 1,
	DialogueDangerOrigin                     = 2,
	AbnormalDangerOrigin                     = 3,
	ZoneGraphDangerOrigin                    = 4,
	BreakableDangerOrigin                    = 5,
	EThreatenOriginType_MAX                  = 6,
};

// Enum HTGame.EAIFleeType
// NumValues: 0x0005
enum class EAIFleeType : uint8
{
	RandomFlee                               = 0,
	RefugeFlee                               = 1,
	OnlookersFlee                            = 2,
	ThreatenFlee                             = 3,
	EAIFleeType_MAX                          = 4,
};

// Enum HTGame.ESurfaceFootPrintType
// NumValues: 0x0006
enum class ESurfaceFootPrintType : uint8
{
	NoPrint                                  = 0,
	CanPrint                                 = 1,
	CanAcceptResidue                         = 2,
	CanResidue                               = 3,
	CanPrintAndResidue                       = 4,
	MAX                                      = 5,
};

// Enum HTGame.EFootPrintType
// NumValues: 0x0004
enum class EFootPrintType : uint8
{
	ColorFootPrint                           = 0,
	DepthFootPrint                           = 1,
	DepthAndColorFootPrint                   = 2,
	MAX                                      = 3,
};

// Enum HTGame.EWeaponSlotType
// NumValues: 0x0004
enum class EWeaponSlotType : uint8
{
	WEAPON_SLOT_FIRST                        = 0,
	WEAPON_SLOT_SECOND                       = 1,
	WEAPON_SLOT_THIRD                        = 2,
	WEAPON_SLOT_MAX                          = 3,
};

// Enum HTGame.EWeaponClassType
// NumValues: 0x0007
enum class EWeaponClassType : uint8
{
	None                                     = 0,
	Sharp                                    = 1,
	Puncture                                 = 2,
	Energy                                   = 3,
	Strength                                 = 4,
	Firearms                                 = 5,
	MAX                                      = 6,
};

// Enum HTGame.EWeatherIndex
// NumValues: 0x0005
enum class EWeatherIndex : uint8
{
	Weather_Defulat                          = 0,
	Weather_Sunny                            = 1,
	Weather_Rain                             = 2,
	Weather_Snow                             = 3,
	Weather_MAX                              = 4,
};

// Enum HTGame.ESelfieCheckActorState
// NumValues: 0x0005
enum class ESelfieCheckActorState : uint8
{
	Init                                     = 0,
	OutScreen                                = 1,
	InRange                                  = 2,
	InScreenNotInRange                       = 3,
	ESelfieCheckActorState_MAX               = 4,
};

// Enum HTGame.ESleepMsgCToS
// NumValues: 0x0006
enum class ESleepMsgCToS : uint8
{
	RequestSleepValue                        = 0,
	AddHP                                    = 1,
	SetAutoUseSwitch                         = 2,
	AutoUseSleepValue                        = 3,
	CompleteQuest                            = 4,
	ESleepMsgCToS_MAX                        = 5,
};

// Enum HTGame.ESleepMsgSToC
// NumValues: 0x0004
enum class ESleepMsgSToC : uint8
{
	UpdateSleepValue                         = 0,
	RecoverySleepValue                       = 1,
	UpdateSelectSleepValue                   = 2,
	ESleepMsgSToC_MAX                        = 3,
};

// Enum HTGame.EStaminaShipMsgCToS
// NumValues: 0x0005
enum class EStaminaShipMsgCToS : uint8
{
	QueryStaminaValue                        = 0,
	RequestCaptialRecovery                   = 1,
	RequestPotionRecovery                    = 2,
	RequestUseItemRecovery                   = 3,
	EStaminaShipMsgCToS_MAX                  = 4,
};

// Enum HTGame.EStaminaShipMsgSToC
// NumValues: 0x0004
enum class EStaminaShipMsgSToC : uint8
{
	SynStaminaValue                          = 0,
	SynBakStaminaValue                       = 1,
	ShowAddStaminMessage                     = 2,
	EStaminaShipMsgSToC_MAX                  = 3,
};

// Enum HTGame.EStaminaChangeType
// NumValues: 0x0008
enum class EStaminaChangeType : uint8
{
	NaturalIncrease                          = 0,
	UseCapitalIncrease                       = 1,
	UsePotionIncrease                        = 2,
	UseItemIncrease                          = 3,
	CloneConsume                             = 4,
	BossConsume                              = 5,
	TrialConsume                             = 6,
	EStaminaChangeType_MAX                   = 7,
};

// Enum HTGame.ELikeabilityAddValueType
// NumValues: 0x0005
enum class ELikeabilityAddValueType : uint8
{
	GiveGift                                 = 0,
	UseItem                                  = 1,
	Delegate                                 = 2,
	Chat                                     = 3,
	ELikeabilityAddValueType_MAX             = 4,
};

// Enum HTGame.ELikeabilityChatResetType
// NumValues: 0x0004
enum class ELikeabilityChatResetType : uint8
{
	ActiveMainPlot                           = 0,
	ActiveRandom                             = 1,
	Continue                                 = 2,
	ELikeabilityChatResetType_MAX            = 3,
};

// Enum HTGame.ELikeabilityShipMsgCToS
// NumValues: 0x0013
enum class ELikeabilityShipMsgCToS : uint8
{
	Unkown                                   = 0,
	RequestSynAllLikeabilityInfos            = 1,
	LevelUp                                  = 2,
	AddItemToFavorites                       = 3,
	SendGift                                 = 4,
	AcceptQuset                              = 5,
	AcceptEpicQuset                          = 6,
	SelectOption                             = 7,
	RequestNextChatItem                      = 8,
	BlueRequestPushMsg                       = 9,
	GetDefalutLevelReward                    = 10,
	HourClock                                = 11,
	RequestChatData                          = 12,
	NotifyReaded                             = 13,
	ServerOpenChatByLikeabilityID            = 14,
	ServerOpenChatByChatItemID               = 15,
	RecordShowLikeabilityButton              = 16,
	ClearShowLikeabilityButton               = 17,
	ELikeabilityShipMsgCToS_MAX              = 18,
};

// Enum HTGame.ELikeabilityShipMsgSToC
// NumValues: 0x0017
enum class ELikeabilityShipMsgSToC : uint8
{
	Unkown                                   = 0,
	SynLikeabilityInfos                      = 1,
	UpdateLikeabilityInfo                    = 2,
	UpdateFavorites                          = 3,
	AddLikeabilityInfo                       = 4,
	SynLikeabilityAccpetQuestNum             = 5,
	SynLikeabilityTotalSendedGiftTimes       = 6,
	ShowActiveLikeabilityMessage             = 7,
	SynLikeabilityChatGroup                  = 8,
	ClientLikeabilityOpenChat                = 9,
	AddLikeabilityChat                       = 10,
	AddLikeabilityNextChatItem               = 11,
	ClearLikeabilityChatOption               = 12,
	AddNewChatItemShowData                   = 13,
	GetDefalutLevelReward                    = 14,
	UpdateChatData                           = 15,
	NoticeMessage                            = 16,
	OpenChatMain                             = 17,
	SynChatItemsData                         = 18,
	SynChatReadResult                        = 19,
	ShowUnlockChatMessage                    = 20,
	SynJumped                                = 21,
	ELikeabilityShipMsgSToC_MAX              = 22,
};

// Enum HTGame.ELikeabilityChatUpdateType
// NumValues: 0x0004
enum class ELikeabilityChatUpdateType : uint8
{
	UnKnow                                   = 0,
	Update                                   = 1,
	Add                                      = 2,
	ELikeabilityChatUpdateType_MAX           = 3,
};

// Enum HTGame.ELikeabilityChatNodeType
// NumValues: 0x0006
enum class ELikeabilityChatNodeType : uint8
{
	Unknow                                   = 0,
	System                                   = 1,
	Option                                   = 2,
	Quest                                    = 3,
	Picture                                  = 4,
	ELikeabilityChatNodeType_MAX             = 5,
};

// Enum HTGame.ELikeabilityChatType
// NumValues: 0x0003
enum class ELikeabilityChatType : uint8
{
	MainPlot                                 = 0,
	Event                                    = 1,
	Max                                      = 2,
};

// Enum HTGame.ECommonProgressColor
// NumValues: 0x0004
enum class ECommonProgressColor : uint8
{
	Green                                    = 0,
	Yellow                                   = 1,
	Red                                      = 2,
	Max                                      = 3,
};

// Enum HTGame.EGashaponMsgCToS
// NumValues: 0x0004
enum class EGashaponMsgCToS : uint8
{
	Raffle                                   = 0,
	ReCycle                                  = 1,
	OpenMainUIOver                           = 2,
	EGashaponMsgCToS_MAX                     = 3,
};

// Enum HTGame.EGashaponMsgSToC
// NumValues: 0x0004
enum class EGashaponMsgSToC : uint8
{
	SynRaffleResult                          = 0,
	SynConfirmSwitch                         = 1,
	ActiveGashonMessage                      = 2,
	EGashaponMsgSToC_MAX                     = 3,
};

// Enum HTGame.ELikeabilityChatConditionType
// NumValues: 0x0003
enum class ELikeabilityChatConditionType : uint8
{
	LikeabilityLevel                         = 0,
	Quest                                    = 1,
	ELikeabilityChatConditionType_MAX        = 2,
};

// Enum HTGame.ELikeabilityChatItemType
// NumValues: 0x0006
enum class ELikeabilityChatItemType : uint8
{
	Normal                                   = 0,
	Emoji                                    = 1,
	Picture                                  = 2,
	Quest                                    = 3,
	Cancel                                   = 4,
	ELikeabilityChatItemType_MAX             = 5,
};

// Enum HTGame.ELikeabilityChatOptionType
// NumValues: 0x0004
enum class ELikeabilityChatOptionType : uint8
{
	Null                                     = 0,
	Text                                     = 1,
	Emoj                                     = 2,
	ELikeabilityChatOptionType_MAX           = 3,
};

// Enum HTGame.ELikeabilityChatNoticeType
// NumValues: 0x0004
enum class ELikeabilityChatNoticeType : uint8
{
	None                                     = 0,
	Notice                                   = 1,
	OpenMainFrom                             = 2,
	ELikeabilityChatNoticeType_MAX           = 3,
};

// Enum HTGame.ELikeabilityPlotQuestState
// NumValues: 0x0005
enum class ELikeabilityPlotQuestState : uint8
{
	UnLock                                   = 0,
	UnAccept                                 = 1,
	Accepted                                 = 2,
	Completed                                = 3,
	ELikeabilityPlotQuestState_MAX           = 4,
};

// Enum HTGame.ELikeabilityAppointQuestState
// NumValues: 0x0005
enum class ELikeabilityAppointQuestState : uint8
{
	UnAccept                                 = 0,
	Accepted                                 = 1,
	Completed                                = 2,
	AllCompleted                             = 3,
	ELikeabilityAppointQuestState_MAX        = 4,
};

// Enum HTGame.EHTScoreModuleType
// NumValues: 0x0009
enum class EHTScoreModuleType : uint8
{
	Invalid                                  = 0,
	Character_Strengthen                     = 1,
	Character_Breakthrough                   = 2,
	Fork_Strengthen                          = 3,
	Fork_Breakthrough                        = 4,
	Equipment_Strengthen                     = 5,
	Ability_ActivateAttribute                = 6,
	Buffer_ActivateAttribute                 = 7,
	Max                                      = 8,
};

// Enum HTGame.EHTScoreModuleExtraType
// NumValues: 0x0004
enum class EHTScoreModuleExtraType : uint8
{
	Invalid                                  = 0,
	FullStarWeapon                           = 1,
	FullStarMatrix                           = 2,
	Max                                      = 3,
};

// Enum HTGame.ETimerClockRunOnType
// NumValues: 0x0003
enum class ETimerClockRunOnType : uint8
{
	RunOnPlayer                              = 0,
	RunOnPublic                              = 1,
	ETimerClockRunOnType_MAX                 = 2,
};

// Enum HTGame.EClockNetType
// NumValues: 0x0007
enum class EClockNetType : uint8
{
	CLOCKNET_None                            = 0,
	CLOCKNET_Client                          = 1,
	CLOCKNET_OwnerClient                     = 2,
	CLOCKNET_ServerOrStandalone              = 3,
	CLOCKNET_ServerAndOwnerClient            = 4,
	CLOCKNET_ServerAndAllClients             = 5,
	CLOCKNET_MAX                             = 6,
};

// Enum HTGame.ERPCSetLocation
// NumValues: 0x0004
enum class ERPCSetLocation : uint8
{
	None                                     = 0,
	Skill                                    = 1,
	Dialogue                                 = 2,
	MAX                                      = 3,
};

// Enum HTGame.EBreakableActorType
// NumValues: 0x0004
enum class EBreakableActorType : uint8
{
	BT_StreetLamp                            = 0,
	BT_Roadblock                             = 1,
	BT_Handrail                              = 2,
	BT_Max                                   = 3,
};

// Enum HTGame.ECustomTextType
// NumValues: 0x0003
enum class ECustomTextType : uint8
{
	Common                                   = 0,
	RoleName                                 = 1,
	Max                                      = 2,
};

// Enum HTGame.EHTGameplayEndPlayReason
// NumValues: 0x0005
enum class EHTGameplayEndPlayReason : uint8
{
	None                                     = 0,
	Cancel                                   = 1,
	PlayFailed                               = 2,
	PlayCompleted                            = 3,
	EHTGameplayEndPlayReason_MAX             = 4,
};

// Enum HTGame.EDepthStencilValue
// NumValues: 0x0008
enum class EDepthStencilValue : uint8
{
	DEPTH_STENCIL_PLAYER                     = 128,
	DEPTH_STENCIL_Monster                    = 129,
	DEPTH_STENCIL_UNDERWATER_PLAYER          = 151,
	DEPTH_STENCIL_WEAPON                     = 252,
	DEPTH_STENCIL_HARVEST                    = 253,
	DEPTH_STENCIL_CASE                       = 254,
	DEPTH_STENCIL_ITEM                       = 255,
	DEPTH_STENCIL_MAX                        = 256,
};

// Enum HTGame.EWorldLevelAjustType
// NumValues: 0x0003
enum class EWorldLevelAjustType : uint8
{
	Decrease                                 = 0,
	ReStore                                  = 1,
	EWorldLevelAjustType_MAX                 = 2,
};

// Enum HTGame.EWorldLevelMsgCToS
// NumValues: 0x0007
enum class EWorldLevelMsgCToS : uint8
{
	DecreaseWorldLevel                       = 0,
	ReStoreWorldLevel                        = 1,
	GetLevelAward                            = 2,
	GetAllLevelAward                         = 3,
	QueryWorldLevelLeftAjustTime             = 4,
	TeachGuide                               = 5,
	EWorldLevelMsgCToS_MAX                   = 6,
};

// Enum HTGame.EWorldLevelMsgSToC
// NumValues: 0x000B
enum class EWorldLevelMsgSToC : uint8
{
	UpdateWorldLevel                         = 0,
	UpdateLevelGeted                         = 1,
	UpdateBrokenLevelGeted                   = 2,
	UpdateLevelAllGeted                      = 3,
	UpdateLevelQuestSubmit                   = 4,
	DecreaseWorldLevel                       = 5,
	ReStoreWorldLevel                        = 6,
	NotifyUnlockQuest                        = 7,
	WorldLevelAjust                          = 8,
	SynWorldLevelAjustLeftTime               = 9,
	EWorldLevelMsgSToC_MAX                   = 10,
};

// Enum HTGame.EWorldLevelRewardItemState
// NumValues: 0x0008
enum class EWorldLevelRewardItemState : uint8
{
	Locked                                   = 0,
	UnLocked                                 = 1,
	Geted                                    = 2,
	BrokenLocked                             = 3,
	BrokenUnlocked                           = 4,
	BrokenCompeleted                         = 5,
	BrokenGeted                              = 6,
	EWorldLevelRewardItemState_MAX           = 7,
};

// Enum HTGame.ECookMsgCToS
// NumValues: 0x0004
enum class ECookMsgCToS : uint8
{
	StartCook                                = 0,
	StudyCookBook                            = 1,
	EndCook                                  = 2,
	ECookMsgCToS_MAX                         = 3,
};

// Enum HTGame.ECookMsgSToC
// NumValues: 0x0006
enum class ECookMsgSToC : uint8
{
	ShowCookingUI                            = 0,
	SpawnActorAndShowCookingUI               = 1,
	CloseCookingSystem                       = 2,
	StartCook                                = 3,
	StudyCookBook                            = 4,
	ECookMsgSToC_MAX                         = 5,
};

// Enum HTGame.ECookItemType
// NumValues: 0x0004
enum class ECookItemType : uint8
{
	Book                                     = 0,
	Material                                 = 1,
	Food                                     = 2,
	ECookItemType_MAX                        = 3,
};

// Enum HTGame.EDisableDynamicGravityReason
// NumValues: 0x0006
enum class EDisableDynamicGravityReason : uint8
{
	NoDisable                                = 0,
	ConfigDisable                            = 1,
	SkillDisable                             = 2,
	StoryDisable                             = 4,
	SceneDisable                             = 8,
	EDisableDynamicGravityReason_MAX         = 9,
};

// Enum HTGame.EAntiSpamHttpCheckType
// NumValues: 0x0006
enum class EAntiSpamHttpCheckType : uint8
{
	Common                                   = 0,
	RoleName                                 = 1,
	FormationName                            = 2,
	VisionComment                            = 3,
	CustomMapIconMarkDesc                    = 4,
	EAntiSpamHttpCheckType_MAX               = 5,
};

// Enum HTGame.EChargeType
// NumValues: 0x0003
enum class EChargeType : uint8
{
	None                                     = 0,
	Common                                   = 1,
	EChargeType_MAX                          = 2,
};

// Enum HTGame.ETryAddItemError
// NumValues: 0x000E
enum class ETryAddItemError : uint8
{
	ITEM_WEAPON                              = 0,
	ITEM_EQUIP                               = 1,
	ITEM_CONSUMABLE                          = 2,
	ITEM_HOME                                = 3,
	ITEM_CARD                                = 4,
	ITEM_CAPITAL                             = 5,
	ITEM_FORK                                = 6,
	ITEM_IMPORTANT                           = 7,
	AUTOUSE                                  = 8,
	INVISIBLE                                = 9,
	ITEM_Limit                               = 10,
	ITEM_COMMON_TIPS                         = 11,
	ITEM_NOT_COMMON_TIPS                     = 12,
	ETryAddItemError_MAX                     = 13,
};

// Enum HTGame.EAddItemType
// NumValues: 0x0004
enum class EAddItemType : uint8
{
	AddItem_Common                           = 0,
	AddItem_Quest                            = 1,
	AddItem_Clone                            = 2,
	AddItem_MAX                              = 3,
};

// Enum HTGame.EChargeMsgCToS
// NumValues: 0x0003
enum class EChargeMsgCToS : uint8
{
	QueryFirstCharge                         = 0,
	Charge                                   = 1,
	EChargeMsgCToS_MAX                       = 2,
};

// Enum HTGame.EChargeMsgSToC
// NumValues: 0x0002
enum class EChargeMsgSToC : uint8
{
	UpdateFirstCharge                        = 0,
	EChargeMsgSToC_MAX                       = 1,
};

// Enum HTGame.EServiceDataType
// NumValues: 0x0005
enum class EServiceDataType : uint8
{
	Switch                                   = 0,
	ServerOpenTime                           = 1,
	Activity                                 = 2,
	GameBackendShop                          = 3,
	EServiceDataType_MAX                     = 4,
};

// Enum HTGame.EEditPlayerInfoCToS
// NumValues: 0x0011
enum class EEditPlayerInfoCToS : uint8
{
	QueryCurAvatarInfo                       = 0,
	SetCurAvatarInfo                         = 1,
	SetCurPlayerInfoShow                     = 2,
	EditPlayerInfoSign                       = 3,
	EditPlayerInfoBirthday                   = 4,
	UpdateAvartaFrameUnlockInfo              = 5,
	ChangeBirthDayShow                       = 6,
	ChangeRoleInfoShow                       = 7,
	SetFriendSetting                         = 8,
	SetLetterSetting                         = 9,
	SetVehicleSetting                        = 10,
	SetHouseSetting                          = 11,
	QueryCurBusinessCardInfo                 = 12,
	SetCurBusinessCardInfo                   = 13,
	QueryCurMedalInfo                        = 14,
	SetCurMedalInfo                          = 15,
	EEditPlayerInfoCToS_MAX                  = 16,
};

// Enum HTGame.EHTScrollBoxScrollDirction
// NumValues: 0x0004
enum class EHTScrollBoxScrollDirction : uint8
{
	Null                                     = 0,
	TopOrLeft                                = 1,
	BottomOrRight                            = 2,
	EHTScrollBoxScrollDirction_MAX           = 3,
};

// Enum HTGame.EEditPlayerInfoSToC
// NumValues: 0x000F
enum class EEditPlayerInfoSToC : uint8
{
	SynAllAvatarInfo                         = 0,
	UpdateCurAvatarInfo                      = 1,
	UpdatePlayerInfoShow                     = 2,
	UpdateAvartaUnlockInfo                   = 3,
	UpdateAvartaFrameUnlockInfo              = 4,
	UpdatePlayerInfoSign                     = 5,
	UpdatePlayerInfoBirthday                 = 6,
	UpdateBirthDayShow                       = 7,
	UpdateRoleInfoShow                       = 8,
	UpdatePlayerName                         = 9,
	SynAllBusinessCardInfo                   = 10,
	UpdateCurBusinessInfo                    = 11,
	SynAllMedalInfo                          = 12,
	SynDisplayRealEstate                     = 13,
	EEditPlayerInfoSToC_MAX                  = 14,
};

// Enum HTGame.ENoticeContentType
// NumValues: 0x0005
enum class ENoticeContentType : uint8
{
	Text                                     = 0,
	Image                                    = 1,
	HyperlinkButton                          = 2,
	Form                                     = 3,
	ENoticeContentType_MAX                   = 4,
};

// Enum HTGame.ENoticeType
// NumValues: 0x0003
enum class ENoticeType : uint8
{
	Activity                                 = 0,
	System                                   = 1,
	ENoticeType_MAX                          = 2,
};

// Enum HTGame.ETalentMsgCToS
// NumValues: 0x0006
enum class ETalentMsgCToS : uint8
{
	LevelUpTalent                            = 0,
	QueryAllTalentIDs                        = 1,
	ResetTalent                              = 2,
	ForgetAllTalent                          = 3,
	ChangeTalentPage                         = 4,
	ETalentMsgCToS_MAX                       = 5,
};

// Enum HTGame.ETalentMsgSToC
// NumValues: 0x0003
enum class ETalentMsgSToC : uint8
{
	SetTalentInfo                            = 0,
	QueryAllTalentIDs                        = 1,
	ETalentMsgSToC_MAX                       = 2,
};

// Enum HTGame.ERoomMsgCToS
// NumValues: 0x0009
enum class ERoomMsgCToS : uint8
{
	QUERY_LAYOUT_HANDMADE                    = 0,
	LAYOUT_HANDMADE_REQ                      = 1,
	LAYOUT_FURNITURE_REQ                     = 2,
	STORAGE_FURNITURE_REQ                    = 3,
	BUY_DECORATION_REQ                       = 4,
	MODIFY_DECORATION_REQ                    = 5,
	CHANGE_LANDSPACE_REQ                     = 6,
	OPEN_UI_OVER_REQ                         = 7,
	ERoomMsgCToS_MAX                         = 8,
};

// Enum HTGame.ERoomMsgSToC
// NumValues: 0x0009
enum class ERoomMsgSToC : uint8
{
	QUERY_LAYOUT_HANDMADE                    = 0,
	LAYOUT_HANDMADE_RSP                      = 1,
	LAYOUT_FURNITURE_RSP                     = 2,
	STORAGE_FURNITURE_RSP                    = 3,
	BUY_DECORATION_RSP                       = 4,
	MODIFY_DECORATION_RSP                    = 5,
	CHANGE_LANDSPACE_RSP                     = 6,
	ADD_GASHAPON_RSP                         = 7,
	ERoomMsgSToC_MAX                         = 8,
};

// Enum HTGame.EMusicMsgCToS
// NumValues: 0x0002
enum class EMusicMsgCToS : uint8
{
	QUERY_OWNED_MUSIC                        = 0,
	QUERY_OWNED_MAX                          = 1,
};

// Enum HTGame.EMusicMsgSToC
// NumValues: 0x0002
enum class EMusicMsgSToC : uint8
{
	QUERY_OWNED_MUSIC                        = 0,
	QUERY_OWNED_MAX                          = 1,
};

// Enum HTGame.EMusicPlayMode
// NumValues: 0x0005
enum class EMusicPlayMode : uint8
{
	Sequential                               = 0,
	Random                                   = 1,
	SingleLoop                               = 2,
	MaxPlayMode                              = 3,
	EMusicPlayMode_MAX                       = 4,
};

// Enum HTGame.EArcaneStoneMsgCToS
// NumValues: 0x0003
enum class EArcaneStoneMsgCToS : uint8
{
	LEVEL_UP                                 = 0,
	SYNC_DATA                                = 1,
	EArcaneStoneMsgCToS_MAX                  = 2,
};

// Enum HTGame.EArcaneStoneMsgSToC
// NumValues: 0x0003
enum class EArcaneStoneMsgSToC : uint8
{
	LEVEL_UP                                 = 0,
	SYNC_DATA                                = 1,
	EArcaneStoneMsgSToC_MAX                  = 2,
};

// Enum HTGame.EQuestSpawnOrDestroy
// NumValues: 0x0004
enum class EQuestSpawnOrDestroy : uint8
{
	None                                     = 0,
	Spawn                                    = 1,
	Destroy                                  = 2,
	EQuestSpawnOrDestroy_MAX                 = 3,
};

// Enum HTGame.EAIRefreshConditionType
// NumValues: 0x0009
enum class EAIRefreshConditionType : uint8
{
	None                                     = 0,
	Time                                     = 1,
	Weather                                  = 2,
	AIVision                                 = 3,
	AIYahaha                                 = 4,
	Rolelevel                                = 5,
	ServerTime                               = 6,
	AIRefreshMax                             = 7,
	EAIRefreshConditionType_MAX              = 8,
};

// Enum HTGame.ENPCSpecialState
// NumValues: 0x000C
enum class ENPCSpecialState : uint8
{
	None                                     = 0,
	StandFrighten                            = 1,
	MoveFrighten                             = 2,
	ShieldRain                               = 3,
	Dialog                                   = 4,
	Hit                                      = 5,
	VehicleThreaten                          = 6,
	Greet                                    = 7,
	Flee                                     = 8,
	VisualHide                               = 9,
	StandThreaten                            = 10,
	ENPCSpecialState_MAX                     = 11,
};

// Enum HTGame.EAITurnLimitStyle
// NumValues: 0x0007
enum class EAITurnLimitStyle : uint8
{
	Default                                  = 0,
	ShopDialogue                             = 1,
	MonsterTurn                              = 2,
	NPCTurn                                  = 4,
	HitTurn                                  = 8,
	Divination                               = 16,
	EAITurnLimitStyle_MAX                    = 17,
};

// Enum HTGame.ENpcBubbleResetType
// NumValues: 0x0003
enum class ENpcBubbleResetType : uint8
{
	ExitRoomVolume                           = 0,
	HaveCD                                   = 1,
	ENpcBubbleResetType_MAX                  = 2,
};

// Enum HTGame.EGreetType
// NumValues: 0x0004
enum class EGreetType : uint8
{
	None                                     = 0,
	NormalGreet                              = 1,
	RoomGreet                                = 2,
	EGreetType_MAX                           = 3,
};

// Enum HTGame.ERedPointComparisonOperator
// NumValues: 0x0006
enum class ERedPointComparisonOperator : uint8
{
	LessThanOrEqual                          = 0,
	LessThan                                 = 1,
	Equal                                    = 2,
	GreaterThan                              = 3,
	GreaterThanOrEqual                       = 4,
	ERedPointComparisonOperator_MAX          = 5,
};

// Enum HTGame.EInputMoveModeRemapping
// NumValues: 0x0003
enum class EInputMoveModeRemapping : uint8
{
	Default                                  = 0,
	MarioPlus                                = 1,
	EInputMoveModeRemapping_MAX              = 2,
};

// Enum HTGame.EAudioCultureType
// NumValues: 0x0006
enum class EAudioCultureType : uint8
{
	Audio_None                               = 0,
	Audio_Chinese                            = 1,
	Audio_English                            = 2,
	Audio_Japanese                           = 3,
	Audio_Korean                             = 4,
	Audio_MAX                                = 5,
};

// Enum HTGame.EAINormalArcTurnType
// NumValues: 0x0004
enum class EAINormalArcTurnType : uint8
{
	None                                     = 0,
	Patrol                                   = 1,
	Flee                                     = 2,
	EAINormalArcTurnType_MAX                 = 3,
};

// Enum HTGame.EMoveDirection
// NumValues: 0x0003
enum class EMoveDirection : uint8
{
	E_MOVE_INDEX_INC                         = 0,
	E_MOVE_INDEX_DEC                         = 1,
	E_MOVE_INDEX_MAX                         = 2,
};

// Enum HTGame.EElevatorSpaceType
// NumValues: 0x0003
enum class EElevatorSpaceType : uint8
{
	ElevatorSpaceType_Out                    = 0,
	ElevatorSpaceType_Inner                  = 1,
	ElevatorSpaceType_MAX                    = 2,
};

// Enum HTGame.EVehicleInteractType
// NumValues: 0x0008
enum class EVehicleInteractType : uint8
{
	VT_None                                  = 0,
	VT_Drive                                 = 1,
	VT_Ride                                  = 2,
	VT_Rent                                  = 3,
	VT_Buy                                   = 4,
	VT_Steal                                 = 5,
	VT_Rob                                   = 6,
	VT_Max                                   = 7,
};

// Enum HTGame.EHTCommonAcceptState
// NumValues: 0x0005
enum class EHTCommonAcceptState : uint8
{
	None                                     = 0,
	Normal                                   = 1,
	Acceptable                               = 2,
	Accepted                                 = 3,
	EHTCommonAcceptState_MAX                 = 4,
};

// Enum HTGame.EOpActivityPushCondType
// NumValues: 0x0004
enum class EOpActivityPushCondType : uint8
{
	None                                     = 0,
	Level                                    = 1,
	Quest                                    = 2,
	EOpActivityPushCondType_MAX              = 3,
};

// Enum HTGame.EOpActivityCondType
// NumValues: 0x0005
enum class EOpActivityCondType : uint8
{
	None                                     = 0,
	Level                                    = 1,
	WorldLevel                               = 2,
	SignIn                                   = 3,
	EOpActivityCondType_MAX                  = 4,
};

// Enum HTGame.EOpActivityMsgId
// NumValues: 0x0008
enum class EOpActivityMsgId : uint8
{
	Add                                      = 0,
	Remove                                   = 1,
	UpdateConfig                             = 2,
	UpdateState                              = 3,
	UpdateAwardRecord                        = 4,
	UpdateSingInCount                        = 5,
	GetAward                                 = 6,
	EOpActivityMsgId_MAX                     = 7,
};

// Enum HTGame.EGameBackendShopResetType
// NumValues: 0x0005
enum class EGameBackendShopResetType : uint8
{
	None                                     = 0,
	Daily                                    = 1,
	Weekly                                   = 2,
	Monthly                                  = 3,
	EGameBackendShopResetType_MAX            = 4,
};

// Enum HTGame.EGameBackendShopCondType
// NumValues: 0x0002
enum class EGameBackendShopCondType : uint8
{
	None                                     = 0,
	EGameBackendShopCondType_MAX             = 1,
};

// Enum HTGame.ESummonAISpecialStateType
// NumValues: 0x0004
enum class ESummonAISpecialStateType : uint8
{
	None                                     = 0,
	AttackState                              = 1,
	ConfrontState                            = 2,
	ESummonAISpecialStateType_MAX            = 3,
};

// Enum HTGame.ESToCErrorCode
// NumValues: 0x0004
enum class ESToCErrorCode : uint8
{
	None                                     = 0,
	Error                                    = 1,
	Success                                  = 2,
	ESToCErrorCode_MAX                       = 3,
};

// Enum HTGame.EAISwitchBattleIdleType
// NumValues: 0x0003
enum class EAISwitchBattleIdleType : uint8
{
	EnterFightBegin                          = 0,
	EnterFightEnd                            = 1,
	EAISwitchBattleIdleType_MAX              = 2,
};

// Enum HTGame.EHTTrackEventType
// NumValues: 0x0005
enum class EHTTrackEventType : uint8
{
	RoleLoginSucceed                         = 0,
	RoleLoginError                           = 1,
	RoleLogout                               = 2,
	RoleCreate                               = 3,
	EHTTrackEventType_MAX                    = 4,
};

// Enum HTGame.EHideMassEntityCallType
// NumValues: 0x0005
enum class EHideMassEntityCallType : uint8
{
	Default                                  = 0,
	HTUI_Selfie                              = 1,
	AvoidVolume                              = 2,
	Cheat                                    = 3,
	EHideMassEntityCallType_MAX              = 4,
};

// Enum HTGame.EAdjustTimeState
// NumValues: 0x0003
enum class EAdjustTimeState : uint8
{
	Adjust                                   = 0,
	TimeLapse                                = 1,
	EAdjustTimeState_MAX                     = 2,
};

// Enum HTGame.EAdjustTimeConfirmState
// NumValues: 0x0004
enum class EAdjustTimeConfirmState : uint8
{
	None                                     = 0,
	LessTime                                 = 1,
	Confirm                                  = 2,
	EAdjustTimeConfirmState_MAX              = 3,
};

// Enum HTGame.EUIAimingCanStealTargetAbility
// NumValues: 0x0004
enum class EUIAimingCanStealTargetAbility : uint8
{
	NoTargetOrDisableStealAbility            = 0,
	CanStealTargetAbility                    = 1,
	CanNotSteal                              = 2,
	EUIAimingCanStealTargetAbility_MAX       = 3,
};

// Enum HTGame.EMiniMapShowModeAnimState
// NumValues: 0x0004
enum class EMiniMapShowModeAnimState : uint8
{
	None                                     = 0,
	NormalToExplore                          = 1,
	ExploreToNormal                          = 2,
	MAX                                      = 3,
};

// Enum HTGame.EMiniMapShowModeAnimSequence
// NumValues: 0x0003
enum class EMiniMapShowModeAnimSequence : uint8
{
	Forward                                  = 0,
	Reverse                                  = 1,
	EMiniMapShowModeAnimSequence_MAX         = 2,
};

// Enum HTGame.CharacterMemberTagType
// NumValues: 0x0003
enum class ECharacterMemberTagType : uint8
{
	CharacterMemberTagType_MainTag           = 0,
	CharacterMemberTagType_SecondTag         = 1,
	CharacterMemberTagType_MAX               = 2,
};

// Enum HTGame.EDMMainSlotCharacterIconType
// NumValues: 0x0003
enum class EDMMainSlotCharacterIconType : uint8
{
	DMMainSlotCharacterIcon_Left             = 0,
	DMMainSlotCharacterIcon_Right            = 1,
	DMMainSlotCharacterIcon_MAX              = 2,
};

// Enum HTGame.EDrumPointObjectState
// NumValues: 0x0006
enum class EDrumPointObjectState : uint8
{
	None                                     = 0,
	Display                                  = 1,
	Stay                                     = 2,
	Disappear                                = 3,
	DisappearEnd                             = 4,
	MAX                                      = 5,
};

// Enum HTGame.EForkInfoPage
// NumValues: 0x0004
enum class EForkInfoPage : uint8
{
	Fork_Detail                              = 0,
	Fork_Strengthen                          = 1,
	Fork_Upgrade                             = 2,
	Fork_MAX                                 = 3,
};

// Enum HTGame.EGamepadMoveGashaponMainProcessorIconMethod
// NumValues: 0x0004
enum class EGamepadMoveGashaponMainProcessorIconMethod : uint8
{
	None                                     = 0,
	LStick                                   = 1,
	RStick                                   = 2,
	EGamepadMoveGashaponMainProcessorIconMethod_MAX = 3,
};

// Enum HTGame.EGamepadMoveHandmadeShelfIconMethod
// NumValues: 0x0004
enum class EGamepadMoveHandmadeShelfIconMethod : uint8
{
	None                                     = 0,
	LStick                                   = 1,
	RStick                                   = 2,
	EGamepadMoveHandmadeShelfIconMethod_MAX  = 3,
};

// Enum HTGame.EGamepadKeyTipsTextJustify
// NumValues: 0x0004
enum class EGamepadKeyTipsTextJustify : uint8
{
	None                                     = 0,
	Left                                     = 1,
	Right                                    = 2,
	EGamepadKeyTipsTextJustify_MAX           = 3,
};

// Enum HTGame.EGamepadMoveProcessorMethod
// NumValues: 0x0004
enum class EGamepadMoveProcessorMethod : uint8
{
	None                                     = 0,
	LStick                                   = 1,
	RStick                                   = 2,
	EGamepadMoveProcessorMethod_MAX          = 3,
};

// Enum HTGame.EGamepadMoveMapMethod
// NumValues: 0x0004
enum class EGamepadMoveMapMethod : uint8
{
	None                                     = 0,
	LStick                                   = 1,
	RStick                                   = 2,
	EGamepadMoveMapMethod_MAX                = 3,
};

// Enum HTGame.EGamepadMoveRoomMainFormProcessorIconMethod
// NumValues: 0x0004
enum class EGamepadMoveRoomMainFormProcessorIconMethod : uint8
{
	None                                     = 0,
	LStick                                   = 1,
	RStick                                   = 2,
	EGamepadMoveRoomMainFormProcessorIconMethod_MAX = 3,
};

// Enum HTGame.EJoyStickState
// NumValues: 0x0004
enum class EJoyStickState : uint8
{
	Idle                                     = 0,
	Touching                                 = 1,
	Reseting                                 = 2,
	EJoyStickState_MAX                       = 3,
};

// Enum HTGame.EListItemPlayShowAnimState
// NumValues: 0x0005
enum class EListItemPlayShowAnimState : uint8
{
	NotNeed                                  = 0,
	WaitForPlay                              = 1,
	Playing                                  = 2,
	PlayFinished                             = 3,
	EListItemPlayShowAnimState_MAX           = 4,
};

// Enum HTGame.ENoticeContentSwitchType
// NumValues: 0x0003
enum class ENoticeContentSwitchType : uint8
{
	HasContent                               = 0,
	NoContent                                = 1,
	ENoticeContentSwitchType_MAX             = 2,
};

// Enum HTGame.EPosterType
// NumValues: 0x0003
enum class EPosterType : uint8
{
	EPosterType_BigPoster                    = 0,
	EPosterType_SmallPoster                  = 1,
	EPosterType_MAX                          = 2,
};

// Enum HTGame.ESettingInputType
// NumValues: 0x0004
enum class ESettingInputType : uint8
{
	All                                      = 0,
	GamePad                                  = 1,
	NotGamePad                               = 2,
	ESettingInputType_MAX                    = 3,
};

// Enum HTGame.EUIStoreSelectedType
// NumValues: 0x0005
enum class EUIStoreSelectedType : uint8
{
	UI_Selected_None                         = 0,
	UI_Selected_Store_Brand                  = 1,
	UI_Selected_Store_Employee               = 2,
	UI_Selected_Store_Item                   = 3,
	UI_Selected_MAX                          = 4,
};

// Enum HTGame.EVehicleTemplateType
// NumValues: 0x0004
enum class EVehicleTemplateType : uint8
{
	EVTT_None                                = 0,
	EVTT_Buy_Template                        = 1,
	EVTT_Rent_template                       = 2,
	EVTT_Max                                 = 3,
};

// Enum HTGame.EVehicleModuleState
// NumValues: 0x0005
enum class EVehicleModuleState : uint8
{
	EVMS_None                                = 0,
	EVMS_Using                               = 1,
	EVMS_Owned                               = 2,
	EVMS_Choose                              = 3,
	EVMS_MAX                                 = 4,
};

// Enum HTGame.EWholeVehicleItemType
// NumValues: 0x0005
enum class EWholeVehicleItemType : uint8
{
	EWVIT_None                               = 0,
	EWVIT_ModifyItem                         = 1,
	EWVIT_ShopItem                           = 2,
	EWVIT_Garage                             = 3,
	EWVIT_MAX                                = 4,
};

// Enum HTGame.EPropertyModifyType
// NumValues: 0x0004
enum class EPropertyModifyType : uint8
{
	EPMT_Replace                             = 0,
	EPMT_Add                                 = 1,
	EPMT_Ratio                               = 2,
	EPMT_MAX                                 = 3,
};

// Enum HTGame.EVehicleImpactPart
// NumValues: 0x000F
enum class EVehicleImpactPart : uint8
{
	EP_Front                                 = 0,
	EP_FrontRight                            = 1,
	EP_FrontLeft                             = 2,
	EP_RightFront                            = 3,
	EP_LeftFront                             = 4,
	EP_RightBack                             = 5,
	EP_LeftBack                              = 6,
	EP_BackRight                             = 7,
	EP_BackLeft                              = 8,
	EP_Back                                  = 9,
	EP_FrontGlass                            = 10,
	EP_RightGlass                            = 11,
	EP_BackGlass                             = 12,
	EP_LeftGlass                             = 13,
	EP_Max                                   = 14,
};

// Enum HTGame.EVehicleModifySendMsgSToC
// NumValues: 0x000E
enum class EVehicleModifySendMsgSToC : uint8
{
	EVMSSTC_Set_Modify_Vehicle               = 0,
	EVMSSTC_Set_Driving_Vehicle              = 1,
	EVMSSTC_Add_Vehicle                      = 2,
	EVMSSTC_Modify_Result                    = 3,
	EVMSSTC_Apply_Vehicle_module             = 4,
	EVMSSTC_Revert_Vehicle_Data              = 5,
	EVMSSTC_Summon_Vehicle                   = 6,
	EVMSSTC_Set_Display_Vehicle              = 7,
	EVMSSTC_Summon_RentalVehicle             = 8,
	EVMSSTC_Clear_Vehicle                    = 9,
	EVMSSTC_Clear_RentVehicleLimit           = 10,
	EVMSSTC_Maintain_Res                     = 11,
	EVMSSTC_Reset_RentVehicleTrack           = 12,
	EVMSSTC_MAX                              = 13,
};

// Enum HTGame.EVehicleModifySendMsgCToS
// NumValues: 0x000C
enum class EVehicleModifySendMsgCToS : uint8
{
	EVMSCTS_Choose_Module                    = 0,
	EVMSCTS_Set_Modify_Vehicle               = 1,
	EVMSCTS_Set_Driving_Vehicle              = 2,
	EVMSCTS_Add_Vehicle                      = 3,
	EVMSCTS_Submit_Modify_Order              = 4,
	EVMSCTS_Set_Display_Vehicle              = 5,
	EVMSCTS_Retrun_RentalVehicle             = 6,
	EVMSCTS_Summon_RentalVehicle             = 7,
	EVMSCTS_Maintain_Req                     = 8,
	EVMSCTS_Update_PartEndurance             = 9,
	EVMSCTS_Update_Rent_PartEndurance        = 10,
	EVMSCTS_MAX                              = 11,
};

// Enum HTGame.ERentalVehicleStatus
// NumValues: 0x0007
enum class ERentalVehicleStatus : uint8
{
	ERVS_Config_Error                        = 0,
	ERVS_Can_Rental                          = 1,
	ERVS_Max_Rental                          = 2,
	ERVS_Has_Rental                          = 3,
	ERVS_Success_Rental                      = 4,
	ERVS_Failed_Rental                       = 5,
	ERVS_Max                                 = 6,
};

// Enum HTGame.EModuleMorphPart
// NumValues: 0x0004
enum class EModuleMorphPart : uint8
{
	MP_Middle                                = 0,
	MP_Left                                  = 1,
	MP_Right                                 = 2,
	MP_MAX                                   = 3,
};

// Enum HTGame.EVehicleTrackType
// NumValues: 0x0004
enum class EVehicleTrackType : uint8
{
	Invalid                                  = 0,
	OwnVehicle                               = 1,
	CanRent                                  = 2,
	EVehicleTrackType_MAX                    = 3,
};

// Enum HTGame.EVisualSpawnerRefreshType
// NumValues: 0x0004
enum class EVisualSpawnerRefreshType : uint8
{
	Immediately                              = 0,
	EnterRange                               = 1,
	Blueprint                                = 2,
	EVisualSpawnerRefreshType_MAX            = 3,
};

// Enum HTGame.EVisualSpawnerResetType
// NumValues: 0x0003
enum class EVisualSpawnerResetType : uint8
{
	ResetAll                                 = 0,
	AutoFill                                 = 1,
	EVisualSpawnerResetType_MAX              = 2,
};

// Enum HTGame.EVehicleBrakeDirection
// NumValues: 0x0005
enum class EVehicleBrakeDirection : uint8
{
	Free                                     = 0,
	BrakeFront                               = 1,
	BrakeBack                                = 2,
	BrakeBoth                                = 3,
	EVehicleBrakeDirection_MAX               = 4,
};

// Enum HTGame.ESupportInteractType
// NumValues: 0x0004
enum class ESupportInteractType : uint8
{
	ST_CanDrive                              = 0,
	ST_CanRent                               = 1,
	ST_NoInteract                            = 2,
	ST_MAX                                   = 3,
};

// Enum HTGame.EVehicleActorComponentType
// NumValues: 0x0006
enum class EVehicleActorComponentType : uint8
{
	VAC_UnknownComponent                     = 0,
	VAC_EffectComponent                      = 1,
	VAC_DeformComponent                      = 2,
	VAC_ModuleComponent                      = 3,
	VAC_ForkComponent                        = 4,
	VAC_MAX                                  = 5,
};

// Enum HTGame.ERuntimeGridQualityLevel
// NumValues: 0x0007
enum class ERuntimeGridQualityLevel : uint8
{
	Low                                      = 0,
	High                                     = 1,
	Medium                                   = 2,
	Epic                                     = 3,
	Cinematic                                = 4,
	Num                                      = 5,
	ERuntimeGridQualityLevel_MAX             = 6,
};

// Enum HTGame.EHTZoneGraphPathResult
// NumValues: 0x0008
enum class EHTZoneGraphPathResult : uint8
{
	SearchSuccess                            = 0,
	SearchFail                               = 1,
	GoalUnreachable                          = 2,
	InfiniteLoop                             = 3,
	StartLocInvalid                          = 4,
	EndLocInvalid                            = 5,
	OtherErr                                 = 6,
	EHTZoneGraphPathResult_MAX               = 7,
};

// Enum HTGame.ECloneSystemRPCType
// NumValues: 0x0007
enum class ECloneSystemRPCType : uint8
{
	Cs_To_Server_Reset_Clone                 = 0,
	Sc_To_Client_Spawn_Monster               = 1,
	Sc_To_Client_Challenge_Result            = 2,
	Sc_To_Client_Reset_Clone_Respond         = 3,
	Sc_To_Client_ReAward_Clone_Respond       = 4,
	Sc_To_Client_Exit_Scene                  = 5,
	ECloneSystemRPCType_MAX                  = 6,
};

// Enum HTGame.ECloneMode
// NumValues: 0x0003
enum class ECloneMode : uint8
{
	SingleClone                              = 0,
	MultClone                                = 1,
	ECloneMode_MAX                           = 2,
};

// Enum HTGame.ECloneType
// NumValues: 0x0007
enum class ECloneType : uint8
{
	None                                     = 0,
	Weekly_Clone                             = 1,
	AirCurtain_Clone                         = 2,
	Talent_Clone                             = 3,
	ArcDisk_Clone                            = 4,
	Trial_Clone                              = 5,
	ECloneType_MAX                           = 6,
};

// Enum HTGame.ECloneStateType
// NumValues: 0x0006
enum class ECloneStateType : uint8
{
	Noraml                                   = 0,
	Loading                                  = 1,
	Failed                                   = 2,
	CancelSucess                             = 3,
	CancelFailed                             = 4,
	Max                                      = 5,
};

// Enum HTGame.EIllustratedType
// NumValues: 0x0009
enum class EIllustratedType : uint8
{
	EI_None                                  = 0,
	Role                                     = 1,
	ProperNoun                               = 2,
	Team                                     = 3,
	InnermostWords                           = 4,
	Anomalies                                = 5,
	Place                                    = 6,
	YinQi                                    = 7,
	EIllustratedType_MAX                     = 8,
};

// Enum HTGame.EIllustratedAnomaliesType
// NumValues: 0x0005
enum class EIllustratedAnomaliesType : uint8
{
	NULLL                                    = 0,
	Environment                              = 1,
	Biology                                  = 2,
	Monster                                  = 3,
	EIllustratedAnomaliesType_MAX            = 4,
};

// Enum HTGame.EHTOutputPathType
// NumValues: 0x006A
enum class EHTOutputPathType : uint16
{
	OutputPathType_None                      = 0,
	OutputPathType_Notify                    = 1,
	OutputPathType_ConfigChange              = 2,
	OutputPathType_FromBag                   = 3,
	OutputPathType_FromEquip                 = 4,
	OutputPathType_SplitItem                 = 5,
	OutputPathType_MergeItem                 = 6,
	OutputPathType_Prefab2                   = 7,
	OutputPathType_Prefab3                   = 8,
	OutputPathType_Prefab4                   = 9,
	OutputPathType_Prefab5                   = 10,
	Add_Gm                                   = 11,
	Add_Default                              = 12,
	Add_DropItem                             = 13,
	Add_HarvestItems                         = 14,
	Add_QuestAward                           = 15,
	Add_TreasureBox                          = 16,
	Add_ShopBuy                              = 17,
	Add_RoleExpConversion                    = 18,
	Add_DecomposeItem                        = 19,
	Add_CookFood                             = 20,
	Add_VisionAward                          = 21,
	Add_CloneAward                           = 22,
	Add_Charge                               = 23,
	Add_Achievement                          = 24,
	Add_StoreM                               = 25,
	Add_AfterCreate                          = 26,
	Add_Lottery                              = 27,
	Add_UseTreasureBox                       = 28,
	Add_LotteryDecomposeItem                 = 29,
	Add_VisionDifficultyAward                = 30,
	Add_LevelAward                           = 31,
	Add_Mail                                 = 32,
	Add_City_Shop                            = 33,
	Add_City_Shop_Vip                        = 34,
	Add_City_Shop_Integral                   = 35,
	Add_AdventureManual                      = 36,
	Add_Likeability                          = 37,
	Add_Reward                               = 38,
	Add_VehicleModify_Rollback               = 39,
	Add_Lottery_Additional                   = 40,
	Add_TrialAward                           = 41,
	Add_Gashapon                             = 42,
	Add_YahahaAward                          = 43,
	Add_DelegateMission                      = 44,
	Add_ArcaneStoneReward                    = 45,
	Add_MonsterDropBox                       = 46,
	Add_CreateRole                           = 47,
	Add_Talent                               = 48,
	Add_CharacterGive                        = 49,
	Add_AbyssCloneLevelAward                 = 50,
	Add_EquipmentLottery                     = 51,
	Add_Gashapon_Recycle                     = 52,
	Add_SignInAward                          = 53,
	Add_OracleStone                          = 54,
	Add_ActivationReward                     = 55,
	Add_OpActivity                           = 56,
	Add_TGSExplore                           = 57,
	Add_NPCSpecialGift                       = 58,
	Add_StorageFurniture                     = 59,
	Add_FurnitureCollect                     = 60,
	Add_PassPermit                           = 61,
	Add_VisionSoul                           = 62,
	Add_GashaponActived                      = 63,
	Add_ComposeItem                          = 64,
	Add_DecomposeItem_0                      = 65,
	Add_GashaponDeComposeItem                = 66,
	Add_BakStamina                           = 67,
	Cost_Gm                                  = 2000,
	Cost_UseItem                             = 2001,
	Cost_CharacterUpgrade                    = 2002,
	Cost_ShopBuy                             = 2003,
	Cost_ForkStrengthen                      = 2004,
	Cost_ForkBreakthrough                    = 2005,
	Cost_ForkUpgradeStar                     = 2006,
	Cost_Dialogue                            = 2007,
	Cost_CharacterBreakthrough               = 2008,
	Cost_CharacterAwaken                     = 2009,
	Cost_Lottery                             = 2010,
	Cost_EquipmentStrengthen                 = 2011,
	Cost_AdventureManual                     = 2012,
	Cost_UpgradeCharacterAbility             = 20133,
	Cost_VehicleModify                       = 2014,
	Cost_OfferProp                           = 2015,
	Cost_BuyRealEstate                       = 2016,
	Cost_LikeabilityGift                     = 2017,
	Cost_Cooking                             = 2018,
	Cost_StudyCooking                        = 2019,
	Cost_PotionStamina                       = 2020,
	Cost_CoinStamina                         = 2021,
	Cost_GashaponRaffle                      = 2022,
	Cost_StoreM                              = 2023,
	Cost_Talent                              = 2024,
	Cost_ArcaneStone                         = 2025,
	Cost_SetAmountZero                       = 2026,
	Cost_EquipmentLottery                    = 2027,
	Cost_Gashapon_Recycle                    = 2028,
	Cost_Buy_DecorationPlan                  = 2029,
	Cost_RentalVehicle_AutoReturn            = 2030,
	Cost_RentalVehicle_Return                = 2031,
	Cost_TGS_Reset                           = 2032,
	Cost_Room_Furniture                      = 2033,
	Cost_ComposeItem                         = 2034,
	Cost_DeComposeItem                       = 2035,
	Cost_ItemStamina                         = 2036,
	EHTOutputPathType_MAX                    = 20134,
};

// Enum HTGame.EItemFunctionType
// NumValues: 0x0006
enum class EItemFunctionType : uint8
{
	Use                                      = 0,
	Develop                                  = 1,
	Details                                  = 2,
	CookBook                                 = 3,
	Return                                   = 4,
	MAX                                      = 5,
};

// Enum HTGame.EInventoryContainerType
// NumValues: 0x000D
enum class EInventoryContainerType : uint8
{
	WEAPON                                   = 0,
	EQUIP                                    = 1,
	CONSUMABLE                               = 2,
	HOME                                     = 3,
	CARD                                     = 4,
	CAPITAL                                  = 5,
	FORK                                     = 6,
	IMPORTANT                                = 7,
	AUTOUSE                                  = 8,
	INVISIBLE                                = 9,
	STORE                                    = 10,
	FOOD                                     = 11,
	MAX                                      = 12,
};

// Enum HTGame.EItemTreasureBoxType
// NumValues: 0x0005
enum class EItemTreasureBoxType : uint8
{
	ITEM_TREASURE_BOX_TYPE_NONE              = 0,
	ITEM_TREASURE_BOX_TYPE_FiXED             = 1,
	ITEM_TREASURE_BOX_TYPE_RAND              = 2,
	ITEM_TREASURE_BOX_TYPE_OPTIONAL          = 3,
	ITEM_TREASURE_BOX_TYPE_MAX               = 4,
};

// Enum HTGame.EItemAmountRecordType
// NumValues: 0x0006
enum class EItemAmountRecordType : uint8
{
	Total                                    = 0,
	Daily                                    = 1,
	Weekly                                   = 2,
	Monthly                                  = 3,
	Yearly                                   = 4,
	EItemAmountRecordType_MAX                = 5,
};

// Enum HTGame.EItemAmountChangeType
// NumValues: 0x0003
enum class EItemAmountChangeType : uint8
{
	Obtain                                   = 0,
	Cost                                     = 1,
	EItemAmountChangeType_MAX                = 2,
};

// Enum HTGame.EListItemFadeOrientation
// NumValues: 0x0003
enum class EListItemFadeOrientation : uint8
{
	LeftOrTop                                = 0,
	RightOrBottom                            = 1,
	MAX                                      = 2,
};

// Enum HTGame.EListViewOneByOneState
// NumValues: 0x0004
enum class EListViewOneByOneState : uint8
{
	None                                     = 0,
	Wait                                     = 1,
	Playing                                  = 2,
	EListViewOneByOneState_MAX               = 3,
};

// Enum HTGame.ETargetState
// NumValues: 0x0004
enum class ETargetState : uint8
{
	ENormal                                  = 0,
	EAttacking                               = 1,
	EEvadeLimit                              = 2,
	ETargetState_MAX                         = 3,
};

// Enum HTGame.EHTMailOptType
// NumValues: 0x0006
enum class EHTMailOptType : uint8
{
	MAIL_OPT_TYPE_GOT                        = 0,
	MAIL_OPT_TYPE_RECEIVE                    = 1,
	MAIL_OPT_TYPE_AUTO_DEL                   = 2,
	MAIL_OPT_TYPE_OUT_OF_DATE_DEL            = 3,
	MAIL_OPT_TYPE_GM_DEL                     = 4,
	MAIL_OPT_TYPE_MAX                        = 5,
};

// Enum HTGame.EHTMailType
// NumValues: 0x0004
enum class EHTMailType : uint8
{
	MT_Default                               = 0,
	MT_MASS                                  = 1,
	MT_PLAYER                                = 2,
	MT_MAX                                   = 3,
};

// Enum HTGame.EHTMailSubType
// NumValues: 0x0003
enum class EHTMailSubType : uint8
{
	MT_Sub_Default                           = 0,
	MT_Sub_Mail_Star                         = 1,
	MT_Sub_MAX                               = 2,
};

// Enum HTGame.EHTMailConditionType
// NumValues: 0x0003
enum class EHTMailConditionType : uint8
{
	MCT_Default                              = 0,
	MCT_Player_Level                         = 1,
	MCT_MAX                                  = 2,
};

// Enum HTGame.EHTMailState
// NumValues: 0x0004
enum class EHTMailState : uint8
{
	MS_Default                               = 0,
	MS_Delete_DB_Mail                        = 1,
	MS_Normal                                = 2,
	MS_Max                                   = 3,
};

// Enum HTGame.EMailOptType
// NumValues: 0x000C
enum class EMailOptType : uint8
{
	E_MAIL_OPT_TYPE_RECEIVE                  = 0,
	E_MAIL_OPT_TYPE_GOT_ATTACH               = 1,
	E_MAIL_OPT_TYPE_LOCK                     = 2,
	E_MAIL_OPT_TYPE_UNLOCK                   = 3,
	E_MAIL_OPT_TYPE_DEL                      = 4,
	E_MAIL_OPT_TYPE_OUT_OF_DATE_DEL          = 5,
	E_MAIL_OPT_TYPE_GM_DEL                   = 6,
	E_MAIL_OPT_TYPE_COND_DEL                 = 7,
	E_MAIL_OPT_TYPE_REPEAT_ID_DEL            = 8,
	E_MAIL_OPT_TYPE_ADD_FAILED_DEL           = 9,
	E_MAIL_OPT_TYPE_BEST_OLD_DEL             = 10,
	E_MAIL_OPT_TYPE_MAX                      = 11,
};

// Enum HTGame.EHTCrowdPlatform
// NumValues: 0x0003
enum class EHTCrowdPlatform : uint8
{
	Desktop                                  = 0,
	Mobile                                   = 1,
	EHTCrowdPlatform_MAX                     = 2,
};

// Enum HTGame.EMassStreetLampStateFlags
// NumValues: 0x0003
enum class EMassStreetLampStateFlags : uint8
{
	StreetLampStop                           = 0,
	StreetLampOpen                           = 1,
	EMassStreetLampStateFlags_MAX            = 2,
};

// Enum HTGame.HTMassStreetLampLightComponet
// NumValues: 0x0005
enum class EHTMassStreetLampLightComponet : uint8
{
	DefaultLight                             = 0,
	SpotLight                                = 1,
	PointLight                               = 2,
	RectLight                                = 3,
	HTMassStreetLampLightComponet_MAX        = 4,
};

// Enum HTGame.EVehicleSpawnerType
// NumValues: 0x0005
enum class EVehicleSpawnerType : uint8
{
	CommonVehicle                            = 0,
	Bus                                      = 1,
	Train                                    = 2,
	ParkedVehicle                            = 3,
	EVehicleSpawnerType_MAX                  = 4,
};

// Enum HTGame.EMiniMapSphere
// NumValues: 0x0003
enum class EMiniMapSphere : uint8
{
	Rect                                     = 0,
	Round                                    = 1,
	MAX                                      = 2,
};

// Enum HTGame.EMiniMapIconSphere
// NumValues: 0x0003
enum class EMiniMapIconSphere : uint8
{
	Rect                                     = 0,
	Circle                                   = 1,
	EMiniMapIconSphere_MAX                   = 2,
};

// Enum HTGame.EMiniMapIconOutOfView
// NumValues: 0x0004
enum class EMiniMapIconOutOfView : uint8
{
	Center                                   = 0,
	Edge                                     = 1,
	Whole                                    = 2,
	MAX                                      = 3,
};

// Enum HTGame.EMiniMapIconShowAtEdgeDrawType
// NumValues: 0x0004
enum class EMiniMapIconShowAtEdgeDrawType : uint8
{
	None                                     = 0,
	Overview                                 = 1,
	Trace                                    = 2,
	MAX                                      = 3,
};

// Enum HTGame.EMiniMapIconTraceDrawType
// NumValues: 0x0003
enum class EMiniMapIconTraceDrawType : uint8
{
	Normal                                   = 0,
	TraceRangeCenter                         = 1,
	MAX                                      = 2,
};

// Enum HTGame.EMiniMapIconDetailsFunc
// NumValues: 0x0006
enum class EMiniMapIconDetailsFunc : uint8
{
	None                                     = 0,
	Inactived                                = 1,
	Trace                                    = 2,
	CancelTrace                              = 3,
	Transfer                                 = 4,
	MAX                                      = 5,
};

// Enum HTGame.EMiniMapRadarStateChangeAnimState
// NumValues: 0x0008
enum class EMiniMapRadarStateChangeAnimState : uint8
{
	None                                     = 0,
	ShowTracing                              = 1,
	HideTracing                              = 2,
	ShowInArea                               = 3,
	HideInArea                               = 4,
	TraceToInArea                            = 5,
	InAreaToTrace                            = 6,
	MAX                                      = 7,
};

// Enum HTGame.EMiniMapRadarMaxDimensionAnimState
// NumValues: 0x0004
enum class EMiniMapRadarMaxDimensionAnimState : uint8
{
	None                                     = 0,
	Show                                     = 1,
	Hide                                     = 2,
	MAX                                      = 3,
};

// Enum HTGame.EMapFogUnlockAnimState
// NumValues: 0x0004
enum class EMapFogUnlockAnimState : uint8
{
	None                                     = 0,
	Delay                                    = 1,
	Playing                                  = 2,
	EMapFogUnlockAnimState_MAX               = 3,
};

// Enum HTGame.EMiniMapDisableOption
// NumValues: 0x0004
enum class EMiniMapDisableOption : uint8
{
	ShowModeAnim                             = 0,
	FogUnlockAnim                            = 1,
	CloseAnim                                = 2,
	EMiniMapDisableOption_MAX                = 3,
};

// Enum HTGame.EMiniMapInterferState
// NumValues: 0x0005
enum class EMiniMapInterferState : uint8
{
	Normal                                   = 0,
	Interfering                              = 1,
	InterferAnim                             = 2,
	UninterferAnim                           = 3,
	EMiniMapInterferState_MAX                = 4,
};

// Enum HTGame.EMiniMapZoomAnimState
// NumValues: 0x0004
enum class EMiniMapZoomAnimState : uint8
{
	None                                     = 0,
	ZoomIn                                   = 1,
	ZoomOut                                  = 2,
	EMiniMapZoomAnimState_MAX                = 3,
};

// Enum HTGame.EGuideConditionType
// NumValues: 0x000B
enum class EGuideConditionType : uint8
{
	Guide_None                               = 0,
	Guide_Trigger_Box                        = 1,
	Guide_Trigger_Box_And_Accept_Quest       = 2,
	Guide_Trigger_AIManager                  = 3,
	Guide_Trigger_Ultimate_Skill             = 4,
	Guide_Trigger_YS                         = 5,
	Guide_Trigger_Boss_Battle_Before         = 6,
	Guide_Trigger_Unbalanced                 = 7,
	Guide_Trigger_First_Item                 = 8,
	Guide_Trigger_Special_Quest_Finish       = 9,
	Guide_MAX                                = 10,
};

// Enum HTGame.ELimitEffectType
// NumValues: 0x0009
enum class ELimitEffectType : uint8
{
	LimitType_None                           = 0,
	LimitHitBack                             = 1,
	LimitFloating                            = 2,
	LimitHitOut                              = 3,
	LimitHitDown                             = 4,
	LimitBeLinked                            = 5,
	LimitRotation                            = 6,
	LimitType_All                            = 7,
	ELimitEffectType_MAX                     = 8,
};

// Enum HTGame.EPlayWeaponAnimType
// NumValues: 0x0005
enum class EPlayWeaponAnimType : uint8
{
	PWAT_None                                = 0,
	PWAT_CurrentWeapon                       = 1,
	PWAT_PreviewActorWeapon                  = 2,
	PWAT_AttachActor                         = 3,
	PWAT_MAX                                 = 4,
};

// Enum HTGame.EPropState
// NumValues: 0x0004
enum class EPropState : uint8
{
	Display                                  = 0,
	Select                                   = 1,
	Placed                                   = 2,
	EPropState_MAX                           = 3,
};

// Enum HTGame.EPokemonGameTriggerEvent
// NumValues: 0x0004
enum class EPokemonGameTriggerEvent : uint8
{
	None                                     = 0,
	Any                                      = 1,
	CompletedQuest                           = 2,
	EPokemonGameTriggerEvent_MAX             = 3,
};

// Enum HTGame.ETrackTargetState
// NumValues: 0x0004
enum class ETrackTargetState : uint8
{
	TrackState_Close                         = 0,
	TrackState_Open                          = 1,
	TrackState_Finish                        = 2,
	TrackState_MAX                           = 3,
};

// Enum HTGame.EProjectileAkEventType
// NumValues: 0x0008
enum class EProjectileAkEventType : uint8
{
	ProjectileAkEvent_None                   = 0,
	FlyingSound                              = 1,
	HitSound                                 = 2,
	HitLandSound                             = 3,
	HitWaterSound                            = 4,
	HitStealAbility                          = 5,
	ProjectileAkEvent_MAX                    = 6,
	EProjectileAkEventType_MAX               = 7,
};

// Enum HTGame.ERealEstateSaleState
// NumValues: 0x0004
enum class ERealEstateSaleState : uint8
{
	OnSale                                   = 0,
	ForSale                                  = 1,
	SellOut                                  = 2,
	MAX                                      = 3,
};

// Enum HTGame.ERealEstateAttributeType
// NumValues: 0x0006
enum class ERealEstateAttributeType : uint8
{
	C2S_RealEstate_Collect_GetAward          = 0,
	C2S_RealEstate_Attribute_Activate        = 1,
	C2S_RealEstate_Attribute_Activate_ALL    = 2,
	S2C_RealEstate_Collect_GetAward_Result   = 3,
	S2C_RealEstate_Attribute_Activate_Result = 4,
	ERealEstateAttributeType_MAX             = 5,
};

// Enum HTGame.EActorMovementMode
// NumValues: 0x0003
enum class EActorMovementMode : uint8
{
	MOVE_Rotating                            = 0,
	MOVE_Projectile                          = 1,
	MOVE_MAX                                 = 2,
};

// Enum HTGame.ESettingChooseType
// NumValues: 0x0006
enum class ESettingChooseType : uint8
{
	ComboBox                                 = 0,
	Slider                                   = 1,
	ChangeKey                                = 2,
	OpenUI                                   = 3,
	SliderProgress                           = 4,
	ESettingChooseType_MAX                   = 5,
};

// Enum HTGame.ERTQuality
// NumValues: 0x0009
enum class ERTQuality : uint8
{
	VeryHigh                                 = 0,
	High                                     = 1,
	Medium                                   = 2,
	Film                                     = 3,
	Low                                      = 4,
	Xbox                                     = 5,
	PS5                                      = 6,
	Disable                                  = 7,
	ERTQuality_MAX                           = 8,
};

// Enum HTGame.EDesktopAAType
// NumValues: 0x0007
enum class EDesktopAAType : uint8
{
	None                                     = 0,
	FSR                                      = 1,
	SMAA                                     = 2,
	DLSS                                     = 3,
	TSR                                      = 4,
	TAA                                      = 5,
	EDesktopAAType_MAX                       = 6,
};

// Enum HTGame.EShopType
// NumValues: 0x0003
enum class EShopType : uint8
{
	NPC_SHOP                                 = 0,
	MALL_SHOP                                = 1,
	EShopType_MAX                            = 2,
};

// Enum HTGame.EShopRefresh
// NumValues: 0x0004
enum class EShopRefresh : uint8
{
	None                                     = 0,
	Daily                                    = 1,
	Weekly                                   = 2,
	EShopRefresh_MAX                         = 3,
};

// Enum HTGame.EHTAlignScrollState
// NumValues: 0x0004
enum class EHTAlignScrollState : uint8
{
	Inited                                   = 0,
	Scrolling                                = 1,
	ALigning                                 = 2,
	EHTAlignScrollState_MAX                  = 3,
};

// Enum HTGame.EHTAlignScrollDirection
// NumValues: 0x0003
enum class EHTAlignScrollDirection : uint8
{
	Down                                     = 0,
	Up                                       = 1,
	EHTAlignScrollDirection_MAX              = 2,
};

// Enum HTGame.EHTSystematicComponentCreatePolicy
// NumValues: 0x0004
enum class EHTSystematicComponentCreatePolicy : uint8
{
	None                                     = 0,
	Client                                   = 1,
	Server                                   = 2,
	EHTSystematicComponentCreatePolicy_MAX   = 3,
};

// Enum HTGame.ESystematicGameFeaturesActiveType
// NumValues: 0x0006
enum class ESystematicGameFeaturesActiveType : uint8
{
	None                                     = 0,
	SpecifiedQuest                           = 1,
	PlayerLevel                              = 2,
	WorldLevel                               = 3,
	End                                      = 4,
	ESystematicGameFeaturesActiveType_MAX    = 5,
};

// Enum HTGame.FTeamType
// NumValues: 0x0005
enum class EFTeamType : uint8
{
	TEAM_TYPE_NONE                           = 0,
	TEAM_TYPE_FOUR                           = 4,
	TEAM_TYPE_FIVE                           = 5,
	TEAM_TYPE_EIGHT                          = 8,
	TEAM_TYPE_MAX                            = 9,
};

// Enum HTGame.FTeammateReadyType
// NumValues: 0x0004
enum class EFTeammateReadyType : uint8
{
	TEAMMATE_NO_READY                        = 0,
	TEAMMATE_READY_ACCEPT                    = 1,
	TEAMMATE_READY_REJECT                    = 2,
	TEAMMATE_MAX                             = 3,
};

// Enum HTGame.ETeamTargetType
// NumValues: 0x0003
enum class ETeamTargetType : uint8
{
	TeamTarget_None                          = 0,
	TeamTarget_TeamClone                     = 1,
	TeamTarget_MAX                           = 2,
};

// Enum HTGame.EGamepadSoundAction
// NumValues: 0x0005
enum class EGamepadSoundAction : uint8
{
	None                                     = 0,
	OpenGamepadMenu                          = 1,
	BackNavigation                           = 2,
	CloseUI                                  = 3,
	EGamepadSoundAction_MAX                  = 4,
};

// Enum HTGame.EGamepadAbilityActions
// NumValues: 0x0016
enum class EGamepadAbilityActions : uint8
{
	None                                     = 0,
	Melee                                    = 1,
	Evade                                    = 2,
	Skill                                    = 3,
	UltSkill                                 = 4,
	Food                                     = 5,
	Jump                                     = 6,
	Interact                                 = 7,
	SwitchRole_1                             = 8,
	SwitchRole_2                             = 9,
	SwitchRole_3                             = 10,
	SwitchRole_4                             = 11,
	TrackQuest                               = 12,
	LeaveVines                               = 13,
	Aiming                                   = 14,
	CameraAction                             = 15,
	QuickMenu                                = 32,
	Menu                                     = 33,
	Move                                     = 100,
	Look                                     = 101,
	Zoom                                     = 102,
	EGamepadAbilityActions_MAX               = 103,
};

// Enum HTGame.EGamepadType
// NumValues: 0x0004
enum class EGamepadType : uint8
{
	XBOX                                     = 0,
	PS4                                      = 1,
	PS5                                      = 2,
	EGamepadType_MAX                         = 3,
};

// Enum HTGame.EGamepadTriggerType
// NumValues: 0x0004
enum class EGamepadTriggerType : uint8
{
	None                                     = 0,
	Left_Trigger                             = 1,
	Right_Trigger                            = 2,
	EGamepadTriggerType_MAX                  = 3,
};

// Enum HTGame.EGamepadTriggerEffectModeType
// NumValues: 0x0006
enum class EGamepadTriggerEffectModeType : uint8
{
	Trigger_Effect_Mode_Off                  = 0,
	Trigger_Effect_Mode_Feedback             = 1,
	Trigger_Effect_Mode_Weapon               = 2,
	Trigger_Effect_Mode_Vibration            = 3,
	Trigger_Effect_Mode_Slope_Feedback       = 4,
	Trigger_Effect_Mode_MAX                  = 5,
};

// Enum HTGame.ECharacterAbilityButtonActivateState
// NumValues: 0x0007
enum class ECharacterAbilityButtonActivateState : uint8
{
	CanUpgradeOrActive                       = 0,
	MaxLevel                                 = 1,
	NeedTuPo                                 = 2,
	Activated                                = 3,
	ItemNotEnough                            = 4,
	None                                     = 5,
	ECharacterAbilityButtonActivateState_MAX = 6,
};

// Enum HTGame.EUICharacterAbilityUpgradeFailedReason
// NumValues: 0x0007
enum class EUICharacterAbilityUpgradeFailedReason : uint8
{
	None                                     = 0,
	LevelMax                                 = 1,
	CostItem                                 = 2,
	Unknown                                  = 3,
	Successful                               = 4,
	CharacterTupo                            = 5,
	EUICharacterAbilityUpgradeFailedReason_MAX = 6,
};

// Enum HTGame.EUICharacterAbilityButtonType
// NumValues: 0x0007
enum class EUICharacterAbilityButtonType : uint8
{
	None                                     = 0,
	Passive                                  = 1,
	Proactive                                = 2,
	Attribute                                = 3,
	Beginning                                = 4,
	Peculiarity                              = 5,
	EUICharacterAbilityButtonType_MAX        = 6,
};

// Enum HTGame.ELockedUITargetState
// NumValues: 0x0004
enum class ELockedUITargetState : uint8
{
	ENormal                                  = 0,
	EAttacking                               = 1,
	EEvadeLimit                              = 2,
	ELockedUITargetState_MAX                 = 3,
};

// Enum HTGame.ELockTimeType
// NumValues: 0x0004
enum class ELockTimeType : uint8
{
	NoLock                                   = 0,
	LockBySky                                = 1,
	LockByEnvironment                        = 2,
	ELockTimeType_MAX                        = 3,
};

// Enum HTGame.EDlweLandType
// NumValues: 0x0003
enum class EDlweLandType : uint8
{
	DlweLand_Default                         = 0,
	DlweLand_Sand                            = 1,
	DlweLand_MAX                             = 2,
};

// Enum HTGame.DynamicSkyTypeEnum
// NumValues: 0x0003
enum class EDynamicSkyTypeEnum : uint8
{
	SKY_WORLD                                = 0,
	SKY_PREVIEW                              = 1,
	SKY_MAX                                  = 2,
};

// Enum HTGame.EPorjectMode
// NumValues: 0x0003
enum class EPorjectMode : uint8
{
	OptionA                                  = 0,
	OptionB                                  = 1,
	EPorjectMode_MAX                         = 2,
};

// Enum HTGame.TimeSliceNameEnum
// NumValues: 0x0008
enum class ETimeSliceNameEnum : uint8
{
	beforedawn                               = 0,
	Morning                                  = 1,
	Antemeridiem                             = 2,
	Noon                                     = 3,
	Afternoon                                = 4,
	Evening                                  = 5,
	Night                                    = 6,
	TimeSliceNameEnum_MAX                    = 7,
};

// Enum HTGame.VoluemTypeEnum
// NumValues: 0x0003
enum class EVoluemTypeEnum : uint32
{
	BlendTime                                = 0,
	BlendDistance                            = 1,
	VoluemTypeEnum_MAX                       = 2,
};

// Enum HTGame.EVolumetricFogQualityScale
// NumValues: 0x0005
enum class EVolumetricFogQualityScale : uint8
{
	QualityScale_Lower                       = 0,
	QualityScale_NORMAL                      = 1,
	QualityScale_Heigh                       = 2,
	QualityScale_MostHeigh                   = 3,
	QualityScale_MAX                         = 4,
};

// Enum HTGame.EVariantType
// NumValues: 0x0015
enum class EVariantType : uint8
{
	VTYPE_empty                              = 0,
	VTYPE_bool                               = 1,
	VTYPE_int8                               = 2,
	VTYPE_int16                              = 3,
	VTYPE_int32                              = 4,
	VTYPE_int64                              = 5,
	VTYPE_uint8                              = 6,
	VTYPE_uint16                             = 7,
	VTYPE_uint32                             = 8,
	VTYPE_uint64                             = 9,
	VTYPE_float                              = 10,
	VTYPE_double                             = 11,
	VTYPE_widestr                            = 12,
	VTYPE_ansistr                            = 13,
	VTYPE_uobject                            = 14,
	VTYPE_netid                              = 15,
	VTYPE_vector                             = 16,
	VTYPE_rotator                            = 17,
	VTYPE_transform                          = 18,
	VTYPE_text                               = 19,
	VTYPE_Max                                = 20,
};

// Enum HTGame.EVisionDifficultyAwardState
// NumValues: 0x0004
enum class EVisionDifficultyAwardState : uint8
{
	Incomplete                               = 0,
	CanReceive                               = 1,
	Received                                 = 2,
	EVisionDifficultyAwardState_MAX          = 3,
};

// Enum HTGame.EVisionType
// NumValues: 0x0003
enum class EVisionType : uint8
{
	Delete                                   = 0,
	Get                                      = 1,
	EVisionType_MAX                          = 2,
};

// Enum HTGame.EVisionFunc
// NumValues: 0x0005
enum class EVisionFunc : uint8
{
	None                                     = 0,
	Trace                                    = 1,
	Tracing                                  = 2,
	Completed                                = 3,
	MAX                                      = 4,
};

// Enum HTGame.EOwnerCharacterState
// NumValues: 0x0006
enum class EOwnerCharacterState : uint8
{
	StandBy                                  = 0,
	Moving                                   = 1,
	Sprinting                                = 2,
	Aiming                                   = 3,
	InAirSuspend                             = 4,
	EOwnerCharacterState_MAX                 = 5,
};

// Enum HTGame.EBodySetupFromType
// NumValues: 0x0005
enum class EBodySetupFromType : uint8
{
	DefaultNone                              = 0,
	FromStaticMesh                           = 1,
	FromActors                               = 2,
	FromComponents                           = 3,
	EBodySetupFromType_MAX                   = 4,
};

// Enum HTGame.EGamepadMenuStyleType
// NumValues: 0x0004
enum class EGamepadMenuStyleType : uint8
{
	None                                     = 0,
	Quick                                    = 1,
	List                                     = 2,
	EGamepadMenuStyleType_MAX                = 3,
};

// Enum HTGame.EGamepadMenuBlockAbilityActions
// NumValues: 0x0010
enum class EGamepadMenuBlockAbilityActions : uint8
{
	None                                     = 0,
	Melee                                    = 1,
	Evade                                    = 2,
	Skill                                    = 3,
	UltSkill                                 = 4,
	Food                                     = 5,
	Jump                                     = 6,
	Interact                                 = 7,
	SwitchRole_1                             = 8,
	SwitchRole_2                             = 9,
	SwitchRole_3                             = 10,
	SwitchRole_4                             = 11,
	Move                                     = 12,
	Look                                     = 13,
	Zoom                                     = 14,
	Max                                      = 15,
};

// ScriptStruct HTGame.WaterDlweData
// 0x0028 (0x0028 - 0x0000)
struct FWaterDlweData final
{
public:
	struct FVector                                DLWEWaterBrushLocation;                            // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DLWEWaterBrushSize;                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DLWEWaterBrushStrength;                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DLWEWaterBrushTime;                                // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bneedDel;                                          // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3348[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.Misc
// 0x0028 (0x0028 - 0x0000)
struct FMisc final
{
public:
	struct FLinearColor                           SceneColorTint;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ColorGradingLUTIntensity;                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3349[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               ColorGradingLUT;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LUTBlendWeight;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_334A[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ObjectiveData
// 0x0118 (0x0118 - 0x0000)
struct FObjectiveData
{
public:
	class FName                                   ObjectiveID;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ObjectiveName;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EObjectiveType                                ObjectiveType;                                     // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_334B[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Amount;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   TargetType;                                        // 0x0020(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              MonsterTrackIcon;                                  // 0x0048(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetTag;                                         // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Optional;                                          // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_334C[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0080(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CompletedDescription;                              // 0x0090(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          NeedShowProgress;                                  // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_334D[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       IntroduceInfo;                                     // 0x00A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bOnlyInClient;                                     // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_334E[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       TrackInfo;                                         // 0x00C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   CompleteTeleportID;                                // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       CompleteTeleport;                                  // 0x00D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       CompleteCameraRotation;                            // 0x00E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       BuffInfo;                                          // 0x00F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       CompleteDistance;                                  // 0x0108(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ArriveObjective
// 0x0018 (0x0130 - 0x0118)
struct FArriveObjective final : public FObjectiveData
{
public:
	class FString                                 NeedArriveMapName;                                 // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedTrack;                                        // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_334F[0x7];                                     // 0x0129(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ChargeConfig
// 0x0060 (0x0068 - 0x0008)
struct FChargeConfig final : public FTableRowBase
{
public:
	class FName                                   ProductId;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChargeType                                   ChargeType;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3350[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ChargePrice;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PrimaryCurrency;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PrimaryCurrencyAmount;                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3351[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              IconResource;                                      // 0x0030(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Desc;                                              // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MapInterferFunctions
// 0x0003 (0x0003 - 0x0000)
struct FMapInterferFunctions final
{
public:
	bool                                          bShieldBigMap;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideAzimuth;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVehicleInterfer;                                  // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.InteractingInfo
// 0x0070 (0x0070 - 0x0000)
struct FInteractingInfo final
{
public:
	class FText                                   InteractingTips;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              InteractingIcon;                                   // 0x0010(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TimeBarUIClass;                                    // 0x0038(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           InteractingSound;                                  // 0x0048(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.InteractEntry
// 0x0120 (0x0120 - 0x0000)
struct FInteractEntry final
{
public:
	int32                                         InteractIndex;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInteractWidgetStyle                          WidgetStyle;                                       // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClientSideOnly;                                   // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3352[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InteractTitle;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTexture2D*                             IconPhoto;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      IconMaterial;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             BottomPhoto;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedConfirm;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3353[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ConfirmContent;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bIsDisabled;                                       // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3354[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InteractDuration;                                  // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3355[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInteractingInfo                       InteractingInfo;                                   // 0x0058(0x0070)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UActorComponent*                        InteractComponent;                                 // 0x00C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           ClickSoundEvent;                                   // 0x00D0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Keywords;                                          // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x0108(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AISpawnedInfo
// 0x0070 (0x0070 - 0x0000)
struct FAISpawnedInfo final
{
public:
	class AHTAICharacter*                         SpawnedCharacter;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDead;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3356[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastLevel;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LastRandomPointIndex;                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpawnOrderIndex;                                   // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3357[0x58];                                    // 0x0018(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ReactinData
// 0x0018 (0x0018 - 0x0000)
struct FReactinData
{
public:
	class FName                                   ReactionAbilityID;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               ConditionArray;                                    // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ZhouAnReactionExpendTwoData
// 0x0008 (0x0020 - 0x0018)
struct FZhouAnReactionExpendTwoData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTItemNetID
// 0x0008 (0x0008 - 0x0000)
struct FHTItemNetID final
{
public:
	uint32                                        Solt;                                              // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Serial;                                            // 0x0004(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterUpgradeCostItem
// 0x000C (0x000C - 0x0000)
struct FCharacterUpgradeCostItem final
{
public:
	struct FHTItemNetID                           UniqueID;                                          // 0x0000(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ItemAmount;                                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapImageTileData
// 0x0028 (0x0028 - 0x0000)
struct FMiniMapImageTileData final
{
public:
	struct FFloatRange                            ZoomRange;                                         // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TileCountX;                                        // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TileCountY;                                        // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UTexture2D>>      TileImages;                                        // 0x0018(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapTileImagesRenderRule
// 0x0018 (0x0018 - 0x0000)
struct FMiniMapTileImagesRenderRule final
{
public:
	TArray<struct FMiniMapImageTileData>          BackgroundTileDatas;                               // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	EBlendMode                                    BlendMode;                                         // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3358[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MiniMapTileRenderData
// 0x0070 (0x0070 - 0x0000)
struct FMiniMapTileRenderData final
{
public:
	struct FMiniMapTileImagesRenderRule           BackgroundRenderRule;                              // 0x0000(0x0018)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ThumbnailImage;                                    // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MiniMapCenterLocation;                             // 0x0040(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MiniMapEdgeSize;                                   // 0x0058(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapFogBlockData
// 0x0088 (0x0090 - 0x0008)
struct FMiniMapFogBlockData final : public FTableRowBase
{
public:
	class FString                                 BelongsLevel;                                      // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DefaultUnlock;                                     // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3359[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMiniMapTileRenderData                 FogMaskRenderData;                                 // 0x0020(0x0070)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SetMVectorValue
// 0x0028 (0x0028 - 0x0000)
struct FSetMVectorValue final
{
public:
	class FName                                   ChangeName;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           StartValue;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           EndValue;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SetMScaleValue
// 0x0010 (0x0010 - 0x0000)
struct FSetMScaleValue final
{
public:
	class FName                                   ChangeName;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartValue;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndValue;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ChangeColorConfig
// 0x0058 (0x0058 - 0x0000)
struct FChangeColorConfig final
{
public:
	uint8                                         bBeginChangeColor : 1;                             // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_335A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ChangeMeshName;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DurationTime;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_335B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSetMVectorValue>               Vectors;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSetMScaleValue>                Scales;                                            // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 ElementIndexes;                                    // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_335C[0x8];                                     // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemFunctionInputAction
// 0x0018 (0x0020 - 0x0008)
struct FItemFunctionInputAction final : public FTableRowBase
{
public:
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AIIdleStateTargetPoints
// 0x0020 (0x0020 - 0x0000)
struct FAIIdleStateTargetPoints final
{
public:
	TArray<class ATargetPoint*>                   TargetPoints;                                      // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                          TargetPointGuids;                                  // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SubNpcLoadedData
// 0x0108 (0x0108 - 0x0000)
struct FSubNpcLoadedData final
{
public:
	class USkeletalMesh*                          HeadSkeletalMesh;                                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>           SoftHeadSkeletalMesh;                              // 0x0008(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          TopSkeletalMesh;                                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>           SoftTopSkeletalMesh;                               // 0x0038(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          BottomSkeletalMesh;                                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>           SoftBottomSkeletalMesh;                            // 0x0068(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_335D[0x10];                                    // 0x0090(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstance*>              HeadOverideMaterialArray;                          // 0x00A0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UMaterialInstance>> SoftHeadOverideMaterialArray;                      // 0x00B0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstance*>              TopOverideMaterialArray;                           // 0x00C0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UMaterialInstance>> SoftTopOverideMaterialArray;                       // 0x00D0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstance*>              BottomOverideMaterialArray;                        // 0x00E0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UMaterialInstance>> SoftBottomOverideMaterialArray;                    // 0x00F0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_335E[0x8];                                     // 0x0100(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AISpawnEntry
// 0x0208 (0x0208 - 0x0000)
struct FAISpawnEntry final
{
public:
	TSoftClassPtr<class UClass>                   AITemplate;                                        // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   AITemplateCache;                                   // 0x0028(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_335F[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     SpawnTransformPointsOverride;                      // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideLevelType;                                // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAISpawnLevelType                             SpawnLevelTypeOverride;                            // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3360[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LevelOverride;                                     // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LevelMin;                                          // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LevelMax;                                          // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           QuestSpawnPointOverrideIDs;                        // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         SpawnOnlyWhenDeadNumExceeds;                       // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnDelayTime;                                    // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnIntervalTime;                                 // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3361[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UHTAIIdleStateBase>> IdleStatesOverride;                                // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FAIIdleStateTargetPoints>       IdleStateTargetPointsContainer;                    // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	float                                         SpawnProbability;                                  // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3362[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AHTAIController>            AIControllerOverride;                              // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           AdditionalTags;                                    // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   AISettingsOverrideID;                              // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AIConfigOverrideID;                                // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ATargetPoint*>                   FleeTargetPoints;                                  // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	EAILeaveBattleType                            AILeaveBattleType;                                 // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDataTable;                                     // 0x00F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3363[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubNpcLoadedData                      SubNpcLoadedData;                                  // 0x0100(0x0108)(Transient, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DelayParticle
// 0x0060 (0x0060 - 0x0000)
struct FDelayParticle final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          Particle;                                          // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3364[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocationOffset;                                    // 0x0030(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Scale3D;                                           // 0x0048(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NPCMsgID
// 0x01D0 (0x01D0 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x10) FNPCMsgID
{
public:
	class FText                                   MsgText;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         MsgDuration;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MsgDelayTime;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LocationIndex;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableEmoji;                                      // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3365[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            EmojiFrame;                                        // 0x0020(0x00D0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateBrush                            EmojiIcon;                                         // 0x00F0(0x00D0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bUseDurationInVoice;                               // 0x01C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3366[0x7];                                     // 0x01C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
#pragma pack(pop)

// ScriptStruct HTGame.RandomNPCMsgEntry
// 0x0018 (0x0018 - 0x0000)
struct FRandomNPCMsgEntry final
{
public:
	TArray<struct FNPCMsgID>                      MsgSequence;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENPCMessageShowType                           MessageType;                                       // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3367[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolDataBase
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FItemToolDataBase
{
public:
	uint8                                         Pad_3368[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_Exp
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_Exp final : public FItemToolDataBase
{
public:
	int32                                         EXP;                                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3369[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CameraInterpolationSetting
// 0x0020 (0x0020 - 0x0000)
struct FCameraInterpolationSetting
{
public:
	bool                                          bAmend;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_336A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetValue;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EveryFrameMaxModify;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Speed;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            CurveFloatValue;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Tolerance;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_336B[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PlayerCameraInterpolationSetting
// 0x0008 (0x0028 - 0x0020)
struct FPlayerCameraInterpolationSetting final : public FCameraInterpolationSetting
{
public:
	bool                                          bPlusPlayerRotation;                               // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_336C[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CameraInstantSetting
// 0x0008 (0x0008 - 0x0000)
struct FCameraInstantSetting
{
public:
	bool                                          bAmend;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_336D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetValue;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PlayerCameraInstantSetting
// 0x0004 (0x000C - 0x0008)
struct FPlayerCameraInstantSetting final : public FCameraInstantSetting
{
public:
	bool                                          bPlusPlayerRotation;                               // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_336E[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CameraSettings
// 0x02D0 (0x02D0 - 0x0000)
struct FCameraSettings
{
public:
	struct FCameraInterpolationSetting            TargetArmLength;                                   // 0x0000(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            RelativeX;                                         // 0x0020(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            RelativeY;                                         // 0x0040(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            RelativeZ;                                         // 0x0060(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            SocketOffsetY;                                     // 0x0080(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            SocketOffsetZ;                                     // 0x00A0(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            TargetOffsetX;                                     // 0x00C0(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            TargetOffsetY;                                     // 0x00E0(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            TargetOffsetZ;                                     // 0x0100(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            ZoomInMaxDistance;                                 // 0x0120(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            ZoomOutMaxDistance;                                // 0x0140(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            ZoomInMinFOV;                                      // 0x0160(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAmendCameraLag;                                   // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableCameraLag;                                  // 0x0181(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotUsingRunningCommomSpeed;                       // 0x0182(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_336F[0x5];                                     // 0x0183(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraInterpolationSetting            CameraLagSpeed;                                    // 0x0188(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            CameraLagMaxDistance;                              // 0x01A8(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIgnoreZLag;                                       // 0x01C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAmendCameraRotationLag;                           // 0x01C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableCameraRotationLag;                          // 0x01CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3370[0x5];                                     // 0x01CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraInterpolationSetting            CameraRotationLagSpeed;                            // 0x01D0(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            FOV;                                               // 0x01F0(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlayerCameraInterpolationSetting      Pitch;                                             // 0x0210(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlayerCameraInterpolationSetting      Yaw;                                               // 0x0238(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlayerCameraInterpolationSetting      Roll;                                              // 0x0260(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlayerCameraInstantSetting            ViewPitchMin;                                      // 0x0288(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlayerCameraInstantSetting            ViewPitchMax;                                      // 0x0294(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlayerCameraInstantSetting            ViewYawMin;                                        // 0x02A0(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPlayerCameraInstantSetting            ViewYawMax;                                        // 0x02AC(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInstantSetting                  PlayerFadeDistance;                                // 0x02B8(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInstantSetting                  PlayerHideDistance;                                // 0x02C0(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideNormalArmLengthSpeed;                     // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBlockControllerInput;                             // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3371[0x6];                                     // 0x02CA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.FightingCameraSettings
// 0x0058 (0x0328 - 0x02D0)
struct FFightingCameraSettings final : public FCameraSettings
{
public:
	class UCurveFloat*                            DefaultTargetArmLengthCurve;                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FightingGiantRange;                                // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FightingGiantHeight;                               // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FightingGiantMaxHeightDiff;                        // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FightingGiantHeightRate;                           // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FightingGiantMaxDistance;                          // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FightingBadPitchMin;                               // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FightingBadPitchMax;                               // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FightingAbilityPitch;                              // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FightingBadYaw;                                    // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3372[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            FightingBadYawSpeedCurve;                          // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YawBias;                                           // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PitchBias;                                         // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxBiasDistance;                                   // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxBiasOffsetSize;                                 // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            CurveBiasFloatValue;                               // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableTargetOffset;                               // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3373[0x7];                                     // 0x0321(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GuideNPCIdleStateLocation
// 0x0020 (0x0020 - 0x0000)
struct FGuideNPCIdleStateLocation final
{
public:
	TSubclassOf<class UHTAIIdleStateBase>         StateClass;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                StateLocation;                                     // 0x0008(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuideNPCIdleStateOverride
// 0x0030 (0x0030 - 0x0000)
struct FGuideNPCIdleStateOverride final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDefaultIdleStates;                             // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3374[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuideNPCIdleStateLocation>     IdleStateOverrides;                                // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bFollowPlayer;                                     // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3375[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoreBrandWorkingNode
// 0x000C (0x000C - 0x0000)
struct FStoreBrandWorkingNode final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChildIndex;                                        // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterForNet
// 0x002C (0x002C - 0x0000)
struct alignas(0x04) FCharacterForNet final
{
public:
	uint8                                         Pad_3376[0x2C];                                    // 0x0000(0x002C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTGameplayEffectContainer
// 0x0028 (0x0028 - 0x0000)
struct FHTGameplayEffectContainer
{
public:
	TSubclassOf<class UHTGATargetType>            TargetType;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHTGATargetType>            AddTargetType;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHTGATargetType>            NotFindToDoTargetType;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>    TargetGameplayEffectClasses;                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SimpleGAEffectParam
// 0x0000 (0x0028 - 0x0028)
struct FSimpleGAEffectParam final : public FHTGameplayEffectContainer
{
};

// ScriptStruct HTGame.HTPropertyReplicator
// 0x0008 (0x0028 - 0x0020)
struct FHTPropertyReplicator final : public FHottaPropertyReplicator
{
public:
	class AActor*                                 OwningActor;                                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct HTGame.Temperature
// 0x000C (0x000C - 0x0000)
struct FTemperature final
{
public:
	ETemperatureMethod                            TemperatureType;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3377[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WhiteTemp;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WhiteTint;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SwitchInfo
// 0x0018 (0x0018 - 0x0000)
struct FSwitchInfo final
{
public:
	int32                                         SwitchState;                                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3378[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SysInfo;                                           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MonsterDropBoxData
// 0x0218 (0x0220 - 0x0008)
struct FMonsterDropBoxData final : public FTableRowBase
{
public:
	class FString                                 AISpawnManagerGuid;                                // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3379[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             MonsterStartTransform;                             // 0x0020(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   DropBoxTemplate;                                   // 0x0080(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_337A[0x8];                                     // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BoxStartTransform;                                 // 0x00B0(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MonsterDropID;                                     // 0x0110(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MonsterRefreshTime;                                // 0x0118(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_337B[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Des;                                               // 0x0120(0x0010)(Edit, NativeAccessSpecifierPublic)
	int32                                         ConsumeStaminaCount;                               // 0x0130(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsReceiveLimit;                                    // 0x0134(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_337C[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReceiveCount;                                      // 0x0138(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_337D[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0140(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   BossName;                                          // 0x0168(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FText                                   ContentDes;                                        // 0x0178(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FString                                 BelongLevelName;                                   // 0x0188(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MiniMapKeyWorld;                                   // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UnlockLevel;                                       // 0x01A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VisionID;                                          // 0x01A4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestId;                                           // 0x01AC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_337E[0xC];                                     // 0x01B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             EnterTransform;                                    // 0x01C0(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PlayStation
// 0x0020 (0x0020 - 0x0000)
struct FPlayStation final
{
public:
	class FString                                 AccountId;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OnlineId;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMassFindVehicleThreatenLocationTask
// 0x0010 (0x0038 - 0x0028)
struct FHTMassFindVehicleThreatenLocationTask final : public FMassStateTreeTaskBase
{
public:
	float                                         Radius;                                            // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_337F[0xC];                                     // 0x002C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PlayerChangeData
// 0x0010 (0x0010 - 0x0000)
struct FPlayerChangeData final
{
public:
	class UCurveFloat*                            ChangeCurve;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerChangeDuration;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3380[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AutoNavigationInfo
// 0x00A8 (0x00A8 - 0x0000)
struct FAutoNavigationInfo final
{
public:
	class FString                                 DestLevelName;                                     // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  FollowActor;                                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3381[0x90];                                    // 0x0018(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.NPCMsgContainer
// 0x0010 (0x0010 - 0x0000)
struct FNPCMsgContainer final
{
public:
	TArray<struct FRandomNPCMsgEntry>             NPCMsgEntries;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PokemonGameMatchCharacterSpawnConfig
// 0x0088 (0x0090 - 0x0008)
struct FPokemonGameMatchCharacterSpawnConfig final : public FTableRowBase
{
public:
	TSoftClassPtr<class UClass>                   CharacterToSpawn;                                  // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterMaxHealth;                                // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3382[0x5C];                                    // 0x0034(0x005C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.JumpSectionRequirementBase
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FJumpSectionRequirementBase
{
public:
	uint8                                         Pad_3383[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DelegateMissionQuestDetails
// 0x0028 (0x0028 - 0x0000)
struct FDelegateMissionQuestDetails final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelegateMissionQuestState                    QuestState;                                        // 0x0008(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3384[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           EexcuteNPCArr;                                     // 0x0010(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	int64                                         EndTime;                                           // 0x0020(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DelegateMissionQuestInfo
// 0x0058 (0x0058 - 0x0000)
struct FDelegateMissionQuestInfo final
{
public:
	class FName                                   CityID;                                            // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FDelegateMissionQuestDetails> QuestDetailMap;                                    // 0x0008(0x0050)(SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TargetAbilityInfo
// 0x0060 (0x0060 - 0x0000)
struct alignas(0x08) FTargetAbilityInfo final
{
public:
	uint8                                         Pad_3385[0x60];                                    // 0x0000(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SyncSwitch
// 0x0008 (0x0008 - 0x0000)
struct FSyncSwitch final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SWITCH;                                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VaultTraceSetting
// 0x0014 (0x0014 - 0x0000)
struct FVaultTraceSetting final
{
public:
	float                                         MaxHeight;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinHeight;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReachDistance;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForwardTraceRadius;                                // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DownWardTraceRadius;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CameraAnimationParamsEx
// 0x0040 (0x0040 - 0x0000)
struct FCameraAnimationParamsEx final
{
public:
	float                                         PlayRate;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECameraAnimationEasingType                    EaseInType;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3386[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EaseInDuration;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECameraAnimationEasingType                    EaseOutType;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3387[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EaseOutDuration;                                   // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoop;                                             // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRandomStartTime;                                  // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3388[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DurationOverride;                                  // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECameraAnimationPlaySpace                     PlaySpace;                                         // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3389[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               UserPlaySpaceRot;                                  // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkillConstantForceTaskParam
// 0x0078 (0x0078 - 0x0000)
struct FSkillConstantForceTaskParam final
{
public:
	ERootMotionTargetLocationType                 TargtLocationType;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_338A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ForwardOffset;                                     // 0x0008(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              ConstraintZ;                                       // 0x0020(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WorldDirection;                                    // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreZAccumulate;                                // 0x0048(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AlwayUpdateDirection;                              // 0x0049(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_338B[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpeedValue;                                        // 0x004C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0050(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERootMotionFinishVelocityMode                 VelocityFinishMode;                                // 0x0054(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_338C[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FinishVelocity;                                    // 0x0058(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            StrengthOverTime;                                  // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraPropertySet
// 0x0064 (0x0064 - 0x0000)
struct FHTCameraPropertySet final
{
public:
	float                                         Values[0x19];                                      // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraBlackboard
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FHTCameraBlackboard final
{
public:
	uint8                                         Pad_338D[0x50];                                    // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraStateInstance
// 0x00F8 (0x00F8 - 0x0000)
struct FHTCameraStateInstance final
{
public:
	struct FGameplayTag                           CameraStateID;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHTCameraState*                         CameraState;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActivated;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_338E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ElapsedTime;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHTCameraPropertySet                   InitialProperties;                                 // 0x0020(0x0064)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_338F[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Tags;                                              // 0x0088(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FHTCameraBlackboard                    Blackboard;                                        // 0x00A8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AbyssCloneCharacterData
// 0x0020 (0x0020 - 0x0000)
struct FAbyssCloneCharacterData final
{
public:
	TArray<class FName>                           CharacterItemArray;                                // 0x0000(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	struct FGuid                                  CostItemID;                                        // 0x0010(0x0010)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AbyssCloneLevelData
// 0x0040 (0x0040 - 0x0000)
struct FAbyssCloneLevelData final
{
public:
	class FName                                   LevelID;                                           // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAbyssCloneCharacterData>       AbyssCloneCharacterDatas;                          // 0x0008(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	class FName                                   AssistItemID;                                      // 0x0018(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HasPass;                                           // 0x0020(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          GetAward;                                          // 0x0021(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3390[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 StarArray;                                         // 0x0028(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	bool                                          bIsMaxStar;                                        // 0x0038(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3391[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AbyssCloneCostItem
// 0x001C (0x001C - 0x0000)
struct FAbyssCloneCostItem final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  Guid;                                              // 0x0008(0x0010)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAbyssCloneItemState                          BindState;                                         // 0x0018(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3392[0x3];                                     // 0x0019(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AbyssCloneStarAwardData
// 0x0008 (0x0008 - 0x0000)
struct FAbyssCloneStarAwardData final
{
public:
	int32                                         Star;                                              // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          GetAward;                                          // 0x0004(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3393[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AbyssCloneData
// 0x0040 (0x0040 - 0x0000)
struct FAbyssCloneData final
{
public:
	class FName                                   ActivityId;                                        // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAbyssCloneLevelData>           AbyssCloneLevelDataArray;                          // 0x0008(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<struct FAbyssCloneCostItem>            CostItemContainer;                                 // 0x0018(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	int32                                         Cost;                                              // 0x0028(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3394[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAbyssCloneStarAwardData>       StarAwardArray;                                    // 0x0030(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraCondition
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FHTCameraCondition
{
public:
	uint8                                         Pad_3395[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MiniMapIconDetailsFuncData
// 0x0010 (0x0018 - 0x0008)
struct FMiniMapIconDetailsFuncData final : public FTableRowBase
{
public:
	class FText                                   FuncName;                                          // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.JSRequirement_PlayerInFightState
// 0x0000 (0x0008 - 0x0008)
struct FJSRequirement_PlayerInFightState final : public FJumpSectionRequirementBase
{
};

// ScriptStruct HTGame.HTCameraCondition_True
// 0x0000 (0x0008 - 0x0008)
struct FHTCameraCondition_True final : public FHTCameraCondition
{
};

// ScriptStruct HTGame.TrialState
// 0x0010 (0x0010 - 0x0000)
struct FTrialState final
{
public:
	class FName                                   TrialID;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETrialState                                   TrialState;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3396[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ActiveTime;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SummonAIAngelLimit
// 0x0008 (0x0008 - 0x0000)
struct FSummonAIAngelLimit final
{
public:
	bool                                          bGreaterThan;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3397[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FAngleLimit;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AISkillSelectCondition
// 0x0048 (0x0048 - 0x0000)
struct FAISkillSelectCondition final
{
public:
	bool                                          bCheckHP;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3398[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HPThreshold;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHPThresholdIsPercentage;                          // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckBuff;                                        // 0x0009(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3399[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  BuffTagContainer;                                  // 0x0010(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	EAIGameplayTagRequire                         BuffTagRequireType;                                // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckBattleTime;                                  // 0x0031(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_339A[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayTimeAfterBattle;                              // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckSummonIsAlive;                               // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_339B[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSummonAIAngelLimit                    CheckSummonAIAngelLimit;                           // 0x003C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAllConditionsMeetRequired;                        // 0x0044(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_339C[0x3];                                     // 0x0045(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.WeaponAbilitiesBase
// 0x0030 (0x0030 - 0x0000)
struct FWeaponAbilitiesBase
{
public:
	TSoftClassPtr<class UClass>                   AbilityClass;                                      // 0x0000(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESkillInputIDType                             InputID;                                           // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_339D[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.WeaponAbilities
// 0x0060 (0x0090 - 0x0030)
struct FWeaponAbilities final : public FWeaponAbilitiesBase
{
public:
	int32                                         AISkillPriority;                                   // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AISkillWeight;                                     // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSkillSelectCondition;                          // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_339E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAISkillSelectCondition                SelectCondition;                                   // 0x0040(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bUseCustomSelectCondition;                         // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_339F[0x7];                                     // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DrumPlayLevelData
// 0x0050 (0x0058 - 0x0008)
struct FDrumPlayLevelData final : public FTableRowBase
{
public:
	bool                                          bNeedShow;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33A0[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UpgradeNote;                                       // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UpgradeWorldLevel;                                 // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UpgradeLevelLimit;                                 // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UpgradeWorldLevelLimit;                            // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BrokenQuestID;                                     // 0x001C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33A1[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           DescArray;                                         // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           BrokenDescArray;                                   // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   AwardDropID;                                       // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BrokenAwardDropID;                                 // 0x0050(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityChatPushData
// 0x0010 (0x0010 - 0x0000)
struct FLikeabilityChatPushData final
{
public:
	class FName                                   ChatItemID;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELikeabilityChatPushType                      ChatPushType;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33A2[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Day;                                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RangeTargetData
// 0x0020 (0x0020 - 0x0000)
struct FRangeTargetData final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FRange;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedTrack;                                        // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33A3[0x3];                                     // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.EquippedQuickBarData
// 0x000C (0x000C - 0x0000)
struct FEquippedQuickBarData final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ItemID;                                            // 0x0004(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterTagConfig
// 0x0060 (0x0060 - 0x0000)
struct FCharacterTagConfig final
{
public:
	class FText                                   TagText;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              TagBgIcon;                                         // 0x0010(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              TagIcon;                                           // 0x0038(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AISkillDerivedTriggerAngle
// 0x0008 (0x0008 - 0x0000)
struct FAISkillDerivedTriggerAngle final
{
public:
	float                                         MaxTriggerAngle;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinTriggerAngle;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AISkillDerived
// 0x0028 (0x0058 - 0x0030)
struct FAISkillDerived final : public FWeaponAbilitiesBase
{
public:
	float                                         TriggerProbability;                                // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTriggerDistance;                                // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinTriggerDistance;                                // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTriggerAngle;                                   // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinTriggerAngle;                                   // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33A4[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAISkillDerivedTriggerAngle>    ExtraTriggerAngleArr;                              // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StartSkillEffectInstigatorInfo
// 0x0040 (0x0040 - 0x0000)
struct FStartSkillEffectInstigatorInfo final
{
public:
	class AActor*                                 InstigatorActor;                                   // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 InstigatorOwner;                                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                    StartLocation;                                     // 0x0010(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               StartRotator;                                      // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PlayGamePlayEffect_Net
// 0x0090 (0x0090 - 0x0000)
struct FPlayGamePlayEffect_Net final
{
public:
	ESkillEventType                               SkillEventType;                                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33A5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayEffect*                        GameplayEffect;                                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AHTAbilityCharacter*                    DamageCharacter;                                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStartSkillEffectInstigatorInfo        InstigatorInfo;                                    // 0x0018(0x0040)(NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                    SelfLocation;                                      // 0x0058(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal              SelfNormal;                                        // 0x0070(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         PredictionKey;                                     // 0x0088(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33A6[0x6];                                     // 0x008A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PlayGamePlayEffect_NetQueue
// 0x0010 (0x0010 - 0x0000)
struct FPlayGamePlayEffect_NetQueue final
{
public:
	TArray<struct FPlayGamePlayEffect_Net>        PlayGamePlayEffectsArray;                          // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.Film
// 0x0014 (0x0014 - 0x0000)
struct FFilm final
{
public:
	float                                         Slope;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Toe;                                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Shoulder;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WhiteClip;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33A7[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GoodsNetData
// 0x0010 (0x0010 - 0x0000)
struct FGoodsNetData final
{
public:
	class FName                                   GoodsID;                                           // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLock;                                           // 0x000C(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33A8[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.NetObjectiveProgress
// 0x0020 (0x0020 - 0x0000)
struct FNetObjectiveProgress final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID;                                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsCompleted;                                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Optional;                                          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsFailed;                                          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33A9[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Progress;                                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NeededAmount;                                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WaittingDays;                                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconFunctionData_Base
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FMiniMapIconFunctionData_Base
{
public:
	uint8                                         Pad_33AA[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.NextSectionCfg
// 0x0020 (0x0020 - 0x0000)
struct FNextSectionCfg final
{
public:
	struct FInstancedStruct                       OptionalRequirements;                              // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   NextSectionName;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHTGameplayAbility>         JumpAbilityClass;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VarListBase
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FVarListBase
{
public:
	uint8                                         Pad_33AB[0x18];                                    // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PortalData
// 0x0028 (0x0028 - 0x0000)
struct FPortalData final
{
public:
	uint8                                         Pad_33AC[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneCaptureComponent2D*               SceneCapture;                                      // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 PortalTexture;                                     // 0x0010(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33AD[0x10];                                    // 0x0018(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SavedZoneGraphLaneHandle
// 0x000C (0x000C - 0x0000)
struct FSavedZoneGraphLaneHandle final
{
public:
	int32                                         LaneIndex;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DataIndex;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DataGeneration;                                    // 0x0008(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SavedZoneGraphLaneLocation
// 0x0078 (0x0078 - 0x0000)
struct FSavedZoneGraphLaneLocation final
{
public:
	struct FVector                                Position;                                          // 0x0000(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Direction;                                         // 0x0018(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Tangent;                                           // 0x0030(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Up;                                                // 0x0048(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSavedZoneGraphLaneHandle              LaneHandle;                                        // 0x0060(0x000C)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LaneSegment;                                       // 0x006C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceAlongLane;                                 // 0x0070(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33AE[0x4];                                     // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SavedBusChangeLanePoint
// 0x0098 (0x0098 - 0x0000)
struct FSavedBusChangeLanePoint final
{
public:
	struct FSavedZoneGraphLaneLocation            BeginLaneLocation;                                 // 0x0000(0x0078)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FSavedZoneGraphLaneHandle              TargetLaneHandle;                                  // 0x0078(0x000C)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChangeLaneDirection                          ChangeLaneDirection;                               // 0x0084(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33AF[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           BusNamesArray;                                     // 0x0088(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SavedZoneGraphBusLane
// 0x0030 (0x0030 - 0x0000)
struct FSavedZoneGraphBusLane final
{
public:
	struct FSavedZoneGraphLaneHandle              LaneHandle;                                        // 0x0000(0x000C)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33B0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSavedZoneGraphLaneLocation>    BusStations;                                       // 0x0010(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FSavedBusChangeLanePoint>       ChangeLanePoints;                                  // 0x0020(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VarList
// 0x0010 (0x0028 - 0x0018)
struct FVarList final : public FVarListBase
{
public:
	uint8                                         Pad_33B1[0x10];                                    // 0x0018(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MassStreetLampControl
// 0x0001 (0x0001 - 0x0000)
struct FMassStreetLampControl final
{
public:
	uint8                                         Pad_33B2[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ObjectiveProgress
// 0x00A8 (0x00A8 - 0x0000)
struct alignas(0x08) FObjectiveProgress final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsCompleted;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Optional;                                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsFailed;                                          // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33B3[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Progress;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NeededAmount;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WaittingDays;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33B4[0x88];                                    // 0x0020(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestProgress
// 0x0070 (0x0070 - 0x0000)
struct FQuestProgress final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FObjectiveProgress>             ObjectivesProgress;                                // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	EQuestStatus                                  QuestStatus;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bNeedRemove : 1;                                   // 0x0019(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_33B5[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OnlineSeconds;                                     // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33B6[0x50];                                    // 0x0020(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DrumModuleTabData
// 0x0088 (0x0088 - 0x0000)
struct FDrumModuleTabData final
{
public:
	class FText                                   TabName;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              NormalIcon;                                        // 0x0010(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              SelectedIcon;                                      // 0x0038(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   ModuleUIClass;                                     // 0x0060(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CityShopGoodsData
// 0x0020 (0x0020 - 0x0000)
struct FCityShopGoodsData final
{
public:
	class FText                                   CityName;                                          // 0x0000(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         BuyVipLevel;                                       // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CityShopIntegral;                                  // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CityShopExp;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LikeabilityLevelCityShop;                          // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ActivitySignInData
// 0x0048 (0x0050 - 0x0008)
struct FActivitySignInData final : public FTableRowBase
{
public:
	class FText                                   TextDesc;                                          // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   AwardID;                                           // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MailID;                                            // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              SpecialImage;                                      // 0x0028(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassCrowdSpawnGridInfo
// 0x00B0 (0x00B0 - 0x0000)
struct alignas(0x08) FMassCrowdSpawnGridInfo final
{
public:
	EMassCrowdSpawnHashGrid2DType                 HashGrid2DType;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33B7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnCoefficitent;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33B8[0xA8];                                    // 0x0008(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AbyssCloneTime
// 0x0010 (0x0010 - 0x0000)
struct FAbyssCloneTime final
{
public:
	int32                                         Year;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Month;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Day;                                               // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Hour;                                              // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AbyssCloneSeasonConfig
// 0x0088 (0x0090 - 0x0008)
struct FAbyssCloneSeasonConfig final : public FTableRowBase
{
public:
	class FName                                   ActivityId;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAbyssCloneTime                        BeginTime;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         LifeDays;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33B9[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           Buffs;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   CloneMainClass;                                    // 0x0038(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ShopID;                                            // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CostCount;                                         // 0x0068(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33BA[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BattleMainUI;                                      // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ResultUI;                                          // 0x0080(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RandomOffsetRange
// 0x0038 (0x0038 - 0x0000)
struct FRandomOffsetRange final
{
public:
	struct FVector2D                              RandomOffsetX;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              RandomOffsetY;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              WidgetSize;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CanOverlayTime;                                    // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33BB[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LotteryProbabilityItem
// 0x000C (0x000C - 0x0000)
struct FLotteryProbabilityItem final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsShowIconTip;                                    // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33BC[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RandomModifyDataSaveStruct
// 0x0014 (0x0014 - 0x0000)
struct FRandomModifyDataSaveStruct final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PropValue;                                         // 0x0008(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GroupCiTidoName;                                   // 0x000C(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ExtraStructBase
// 0x0000 (0x0000 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x01) FExtraStructBase
{
};
#pragma pack(pop)

// ScriptStruct HTGame.ExtraStructItemNetInfo
// 0x0020 (0x0020 - 0x0000)
struct FExtraStructItemNetInfo final : public FExtraStructBase
{
public:
	TArray<class FName>                           RandomBaseModifyData;                              // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRandomModifyDataSaveStruct>    RandomModifyData;                                  // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AwardInfo
// 0x0030 (0x0030 - 0x0000)
struct FAwardInfo final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Amount;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHiddenAmount;                                     // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33BD[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExtraStructItemNetInfo                ExtraItemNetInfo;                                  // 0x0010(0x0020)(NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DropItemData
// 0x0010 (0x0010 - 0x0000)
struct FDropItemData final
{
public:
	TArray<struct FAwardInfo>                     DropItemList;                                      // 0x0000(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ElementData
// 0x0000 (0x0000 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x01) FElementData
{
};
#pragma pack(pop)

// ScriptStruct HTGame.AttributeData
// 0x000C (0x000C - 0x0000)
struct FAttributeData : public FElementData
{
public:
	class FName                                   AttributeID;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttributeShowType                            AttributeShowType;                                 // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33BE[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.FlowerData
// 0x002C (0x0038 - 0x000C)
struct FFlowerData final : public FAttributeData
{
public:
	uint8                                         Pad_33BF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             SoftAsset;                                         // 0x0010(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CityShopRPCParameter
// 0x0014 (0x0014 - 0x0000)
struct FCityShopRPCParameter final
{
public:
	bool                                          IsCityShop;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BrandUnqiueID;                                     // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLikeabilityCityShop;                              // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C1[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LikeabilityLevel;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AsyncUpdateMaterialParamItem
// 0x0098 (0x0098 - 0x0000)
struct FAsyncUpdateMaterialParamItem final
{
public:
	struct FRuntimeFloatCurve                     ValueCurve;                                        // 0x0000(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   ParamName;                                         // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C2[0x8];                                     // 0x0090(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraValueProvider
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FHTCameraValueProvider
{
public:
	uint8                                         Pad_33C3[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraValueProviderCurrentCameraProperty
// 0x0008 (0x0010 - 0x0008)
struct FHTCameraValueProviderCurrentCameraProperty final : public FHTCameraValueProvider
{
public:
	EHTCameraPropertyType                         PropertyType;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C4[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraValueProviderInitialCameraProperty
// 0x0008 (0x0010 - 0x0008)
struct FHTCameraValueProviderInitialCameraProperty final : public FHTCameraValueProvider
{
public:
	EHTCameraPropertyType                         PropertyType;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C5[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VisionConditionBase
// 0x0000 (0x0000 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x01) FVisionConditionBase
{
};
#pragma pack(pop)

// ScriptStruct HTGame.AILevelDifferenceMark
// 0x0008 (0x0008 - 0x0000)
struct FAILevelDifferenceMark final
{
public:
	int32                                         LevelDifference;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHeadUpMarkType                               HeadUpMarkType;                                    // 0x0004(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C6[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AnimMontageSlotName
// 0x0010 (0x0010 - 0x0000)
struct FAnimMontageSlotName final
{
public:
	class FName                                   InGroupName;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InSlotName;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemToolData_AddMaxStrength
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_AddMaxStrength final : public FItemToolDataBase
{
public:
	float                                         AddMaxStrength;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C7[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ModifyCameraSettings
// 0x002C (0x002C - 0x0000)
struct FModifyCameraSettings final
{
public:
	float                                         TolerateControlTime;                               // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNormalEnableTargetArmLength;                      // 0x0004(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NormalArmLenSpeed;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalDefaultArmLen;                               // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalDefaultSprintArmLen;                         // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalArmLenAmendSpeed;                            // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalYawSpeed;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalYawAmendSpeed;                               // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalPitchSpeed;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalDefaultPitch;                                // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalPitchAmendSpeed;                             // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FinishedTrialData
// 0x0010 (0x0010 - 0x0000)
struct FFinishedTrialData final
{
public:
	TArray<class FName>                           FinishedArray;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FunctionUnlockPlayerStateEntry
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FFunctionUnlockPlayerStateEntry
{
public:
	uint8                                         Pad_33C9[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.FunctionUnlockPlayerStateComponentEntry
// 0x0030 (0x0038 - 0x0008)
struct FFunctionUnlockPlayerStateComponentEntry final : public FFunctionUnlockPlayerStateEntry
{
public:
	TSoftClassPtr<class UClass>                   ComponentClass;                                    // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bClientComponent : 1;                              // 0x0030(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bServerComponent : 1;                              // 0x0030(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_33CA[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PrivateSpawnDeadMonsterInfo
// 0x0010 (0x0010 - 0x0000)
struct FPrivateSpawnDeadMonsterInfo final
{
public:
	int32                                         SpawnEntryIndex;                                   // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33CB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         DeadTime;                                          // 0x0008(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AbyssCloneShopItemConfig
// 0x0018 (0x0020 - 0x0008)
struct FAbyssCloneShopItemConfig final : public FTableRowBase
{
public:
	class FName                                   ShopID;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ItemID;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Price;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RecoveryPrice;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AISpawnWaveEntry
// 0x0038 (0x0038 - 0x0000)
struct FAISpawnWaveEntry final
{
public:
	class FName                                   WaveName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAISpawnEntry>                  SpawnEntries;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         WaveDelayTime;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ChangeSpawnEntriesID;                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDynamicChangeEntryType                       ChangeEntryType;                                   // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33CC[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RandomTableRowIndex;                               // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedAdditionalDropItem;                           // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33CD[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AnHunReactionExpendTwoData
// 0x0008 (0x0020 - 0x0018)
struct FAnHunReactionExpendTwoData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PokemonGameTrigger
// 0x000C (0x000C - 0x0000)
struct FPokemonGameTrigger final
{
public:
	EPokemonGameTriggerEvent                      TriggerEvent;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33CE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ID;                                                // 0x0004(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ArcaneStoneInfo
// 0x0008 (0x0008 - 0x0000)
struct FArcaneStoneInfo final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Progress;                                          // 0x0004(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DrumLevelData_Base
// 0x0050 (0x0050 - 0x0000)
struct FDrumLevelData_Base
{
public:
	EDrumSongLevelType                            LevelType;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33CF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PassRate;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   LevelName;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EDrumSongLevelType                            UnlockLevel;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33D0[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            ChannelDisappearTime;                              // 0x002C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinScore;                                          // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NoteNum;                                           // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33D1[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Unique_id;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemFunctionTypeData
// 0x0010 (0x0018 - 0x0008)
struct FItemFunctionTypeData final : public FTableRowBase
{
public:
	class FText                                   ShowName;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreManagerLevel
// 0x0020 (0x0028 - 0x0008)
struct FStoreManagerLevel final : public FTableRowBase
{
public:
	int32                                         ManagerLevel;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ManagerLevelExp;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AddManagerArea;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33D2[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ManagerLevelDes;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NPCLockQuest
// 0x0010 (0x0010 - 0x0000)
struct FNPCLockQuest final
{
public:
	class FName                                   BeginQuest;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EndQuest;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NPCQuestOccupation
// 0x0010 (0x0018 - 0x0008)
struct FNPCQuestOccupation final : public FTableRowBase
{
public:
	TArray<struct FNPCLockQuest>                  LockQuests;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DuringBattleMsgEntry
// 0x0020 (0x0020 - 0x0000)
struct FDuringBattleMsgEntry final
{
public:
	struct FNPCMsgContainer                       NPCMsg;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         MsgIntervalMin;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MsgIntervalMax;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33D3[0x8];                                     // 0x0018(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DrumSongActiveParam
// 0x0014 (0x0014 - 0x0000)
struct FDrumSongActiveParam final
{
public:
	EDrumSongActiveType                           ActiveType;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33D4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxValue;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ID;                                                // 0x000C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TreasureBoxTrackCache
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FTreasureBoxTrackCache final
{
public:
	uint8                                         Pad_33D5[0x18];                                    // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SendAwardExtensionParameter
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FSendAwardExtensionParameter final
{
public:
	uint8                                         Pad_33D6[0x30];                                    // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TalentPage
// 0x0058 (0x0058 - 0x0000)
struct FTalentPage final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33D7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FName>                      TalentIds;                                         // 0x0008(0x0050)(SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AkAudioSignificanceManagerTickFunction
// 0x0008 (0x0038 - 0x0030)
struct FAkAudioSignificanceManagerTickFunction final : public FTickFunction
{
public:
	uint8                                         Pad_33D8[0x8];                                     // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AttributeText
// 0x0020 (0x0020 - 0x0000)
struct FAttributeText final
{
public:
	class FText                                   LevelText;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   AdditionText;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTRedPointMessage
// 0x0028 (0x0028 - 0x0000)
struct FHTRedPointMessage
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanRead;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRead;                                             // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33D9[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExtraData;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTRedPointMessagePendingData
// 0x0008 (0x0030 - 0x0028)
struct FHTRedPointMessagePendingData final : public FHTRedPointMessage
{
public:
	bool                                          bResetReadFlag;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33DA[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTRedPointPendingData
// 0x0028 (0x0028 - 0x0000)
struct FHTRedPointPendingData final
{
public:
	class FName                                   RedPointType;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHTRedPointMessagePendingData>  AddMessageArray;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         RemoveMessageArray;                                // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ObjBuff
// 0x0020 (0x0020 - 0x0000)
struct FObjBuff final
{
public:
	TArray<TSoftClassPtr<class UClass>>           AddBuffList;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           RemoveBuffList;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OverrideNormalSettings
// 0x0020 (0x0020 - 0x0000)
struct FOverrideNormalSettings final
{
public:
	struct FCameraInterpolationSetting            TargetArmLengthSetting;                            // 0x0000(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PassPermitRecordInfo
// 0x0038 (0x0038 - 0x0000)
struct FPassPermitRecordInfo final
{
public:
	int32                                         CurLevel;                                          // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurPassPermitExp;                                  // 0x0004(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurWeekGetExp;                                     // 0x0008(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33DB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 BaseAwardGetInfo;                                  // 0x0010(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<int32>                                 AdvanceAwardGetInfo;                               // 0x0020(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	bool                                          bIsActiveAdvance;                                  // 0x0030(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33DC[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SagiriSwallowSlot
// 0x0040 (0x0040 - 0x0000)
struct FSagiriSwallowSlot final
{
public:
	uint8                                         bIsEmpty : 1;                                      // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsDisabled : 1;                                   // 0x0000(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPreIsDisabled : 1;                                // 0x0000(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPreIsEmpty : 1;                                   // 0x0000(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_33DD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UHTGamePlayEffect>          CoolDownGE;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHTGamePlayEffect>          RequiredGE;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotName;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  SwallowTarget;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        FakeFreeTime;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        FakeDuration;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.JSRequirement_TimeOfDay
// 0x0018 (0x0020 - 0x0008)
struct FJSRequirement_TimeOfDay final : public FJumpSectionRequirementBase
{
public:
	bool                                          bNightOnly;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33DE[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInt32Range>                    DayTimeRangeArr;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ReactinConditionData
// 0x0000 (0x0000 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x01) FReactinConditionData
{
};
#pragma pack(pop)

// ScriptStruct HTGame.RideAttackCameraSettings
// 0x0048 (0x0318 - 0x02D0)
struct FRideAttackCameraSettings final : public FCameraSettings
{
public:
	struct FCameraInterpolationSetting            AttackingArmLength;                                // 0x02D0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            AttackingFOV;                                      // 0x02F0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         AttackRestoreDelay;                                // 0x0310(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePlayerMeshRotation;                            // 0x0314(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33DF[0x3];                                     // 0x0315(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RoomFrunitureLoad
// 0x0018 (0x0018 - 0x0000)
struct FRoomFrunitureLoad final
{
public:
	class FName                                   RoomId;                                            // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           ItemIds;                                           // 0x0008(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ZhouAnReactionExpendFiveData
// 0x0008 (0x0020 - 0x0018)
struct FZhouAnReactionExpendFiveData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TriggerTypeCondition
// 0x0018 (0x0018 - 0x0000)
struct FTriggerTypeCondition
{
public:
	uint8                                         Pad_33E0[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ERedPointTriggerType>                  TriggerTypeArray;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TriggerCommon
// 0x0000 (0x0018 - 0x0018)
struct FTriggerCommon final : public FTriggerTypeCondition
{
};

// ScriptStruct HTGame.JSRequirement_LogicNot
// 0x0010 (0x0018 - 0x0008)
struct FJSRequirement_LogicNot final : public FJumpSectionRequirementBase
{
public:
	struct FInstancedStruct                       TargetRequirement;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkillLevelData
// 0x0014 (0x0014 - 0x0000)
struct FSkillLevelData final
{
public:
	class FName                                   SkillId;                                           // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SkillTag;                                          // 0x0008(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SkillLevel;                                        // 0x0010(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StealableAbility
// 0x0010 (0x0010 - 0x0000)
struct FStealableAbility final
{
public:
	TSubclassOf<class UHTGameplayAbility>         AbilityClass;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESkillInputIDType                             InputID;                                           // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESkillInputIDType                             InheritLevelOfAbilityWithSameInputID;              // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33E1[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChangeAvatarCapsuleScale;                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StolenAbility
// 0x0020 (0x0020 - 0x0000)
struct FStolenAbility final
{
public:
	struct FStealableAbility                      AbilityCfg;                                        // 0x0000(0x0010)(BlueprintVisible, SaveGame, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class AHTAbilityCharacter>        TargetAvatarClass;                                 // 0x0010(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetAtk;                                         // 0x0018(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33E2[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.EquipmentSlotInfo
// 0x0024 (0x0024 - 0x0000)
struct FEquipmentSlotInfo final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EquipmentID;                                       // 0x0004(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHTItemNetID                           EquipNetID;                                        // 0x000C(0x0008)(SaveGame, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bFirstStep;                                        // 0x0014(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33E3[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Row;                                               // 0x0018(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x001C(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         New;                                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EquipmentStruct
// 0x0010 (0x0010 - 0x0000)
struct FEquipmentStruct final
{
public:
	TArray<struct FEquipmentSlotInfo>             SlotList;                                          // 0x0000(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AwakenEffectData
// 0x000C (0x000C - 0x0000)
struct FAwakenEffectData final
{
public:
	bool                                          Unlocked;                                          // 0x0000(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33E4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EffectID;                                          // 0x0004(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterItemNetInfo
// 0x00C8 (0x00C8 - 0x0000)
struct FCharacterItemNetInfo final
{
public:
	int32                                         CharacterLevel;                                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BreakthroughLevel;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHTItemNetID                           ForkItemNetID;                                     // 0x0008(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                         AwakenLevel;                                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SaveHPPercent;                                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SaveHPMax;                                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SaveCharge;                                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SaveSatiety;                                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SaveSatietyChangeTime;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SaveSatietyMaxValue;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SaveIsDead;                                        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33E5[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EXP;                                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33E6[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillLevelData>                SkillLevelData;                                    // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FEquipmentStruct>               EquipmentSlots;                                    // 0x0048(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FEquipmentSlotInfo>             EquipCoreSlots;                                    // 0x0058(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           FileRead;                                          // 0x0068(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAwakenEffectData>              AwakenEffectDataLists;                             // 0x0078(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           YiNengAttributeData;                               // 0x0088(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           PassiveSkillData;                                  // 0x0098(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FStolenAbility                         StolenAbility;                                     // 0x00A8(0x0020)(NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.Birthday
// 0x0008 (0x0008 - 0x0000)
struct FBirthday final
{
public:
	int32                                         Month;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Day;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RandomAnimEntry
// 0x0020 (0x0020 - 0x0000)
struct FRandomAnimEntry final
{
public:
	class UAnimMontage*                           Anim;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33E7[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNPCMsgContainer                       NPCMsg;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.IdleStateRandoAnimList
// 0x0010 (0x0010 - 0x0000)
struct FIdleStateRandoAnimList final
{
public:
	TArray<struct FRandomAnimEntry>               RandomAnims;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TeamChargeRelationData
// 0x0008 (0x0008 - 0x0000)
struct FTeamChargeRelationData final
{
public:
	ECharacterElementType                         TeamCharacterElementType;                          // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33E8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TeamChargeCoefficient;                             // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TeamChargeRelationConfigData
// 0x0018 (0x0020 - 0x0008)
struct FTeamChargeRelationConfigData final : public FTableRowBase
{
public:
	ECharacterElementType                         ChargeCharacterElementType;                        // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33E9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTeamChargeRelationData>        TeamChargeDataArray;                               // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCostItem
// 0x0014 (0x0014 - 0x0000)
struct FHTCostItem final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemCount;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33EA[0x8];                                     // 0x000C(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DrumPlayPointClassMap
// 0x0050 (0x0050 - 0x0000)
struct FDrumPlayPointClassMap final
{
public:
	TMap<EDrumPlayPointType, TSubclassOf<class UHTUI_DrumPlayPoint>> PointClassMap;                                     // 0x0000(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OpActivitySaveInfo
// 0x0020 (0x0020 - 0x0000)
struct FOpActivitySaveInfo final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveData;                                          // 0x0010(0x0010)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.WaitAsyncLoadingStruct
// 0x000C (0x000C - 0x0000)
struct FWaitAsyncLoadingStruct final
{
public:
	class FName                                   CharacterId;                                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyRefresh;                                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33EB[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ChargeExtraConfig
// 0x0010 (0x0018 - 0x0008)
struct FChargeExtraConfig final : public FTableRowBase
{
public:
	class FName                                   ExtraCurrency;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ExtraCurrencyAmount;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FirstExtraCurrencyAmount;                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CloneSaveData
// 0x000C (0x000C - 0x0000)
struct FCloneSaveData final
{
public:
	class FName                                   CloneID;                                           // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CloneDifficultyLevel;                              // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTStateTreeFrightenStateIntanceData
// 0x0001 (0x0001 - 0x0000)
struct FHTStateTreeFrightenStateIntanceData final
{
public:
	bool                                          bCrowdFrighten;                                    // 0x0000(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAbilityFuncExtensionStruct
// 0x0020 (0x0020 - 0x0000)
struct FHTAbilityFuncExtensionStruct
{
public:
	uint8                                         Pad_33EC[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UHTAbilityFuncExtensionComponent*       OwnerExtensionComponent;                           // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DelayTime;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Duration;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_33ED[0x8];                                     // 0x0018(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTAbilityActorFun_FaceToLockTarget
// 0x0008 (0x0028 - 0x0020)
struct FHTAbilityActorFun_FaceToLockTarget final : public FHTAbilityFuncExtensionStruct
{
public:
	float                                         RotateAngularSpeed;                                // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFaceToTarget;                                     // 0x0024(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_33EE[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_AddHP
// 0x0010 (0x0018 - 0x0008)
struct FItemToolData_AddHP final : public FItemToolDataBase
{
public:
	float                                         HPAdd;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HPMult;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsGlobal;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedShowConsumableUseUI;                          // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33EF[0x6];                                     // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DateInfo
// 0x0018 (0x0018 - 0x0000)
struct FDateInfo final
{
public:
	int32                                         Year;                                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Month;                                             // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Day;                                               // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Hour;                                              // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minute;                                            // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Second;                                            // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StorePropertyNode
// 0x0038 (0x0038 - 0x0000)
struct FStorePropertyNode final
{
public:
	EStoreBaseProperty                            PropertyType;                                      // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33F0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaterialsConsumeValue;                             // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GoodEventWeightValue;                              // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CuisineLevel;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UnitPrice;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowestPrice;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IncreaseConsumeWillValue;                          // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ConsumeWillPer;                                    // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IncreaseUnitPricePer;                              // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LessThanPassengerFlowVolumeValue;                  // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BreakEvenValue;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CuisineExpIncreasePer;                             // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IncreaseExtraPassengerFlowVolume;                  // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StoreBrandIncreasePer;                             // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreWeathervane
// 0x0068 (0x0070 - 0x0008)
struct FStoreWeathervane final : public FTableRowBase
{
public:
	class FName                                   StoreWeathervaneID;                                // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   StoreWeathervaneDes;                               // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDateInfo                              StartTime;                                         // 0x0020(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDateInfo                              EndTime;                                           // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           ItemIds;                                           // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FStorePropertyNode>             EventPropertyNodes;                                // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DelegateMissionSaveData
// 0x0060 (0x0060 - 0x0000)
struct FDelegateMissionSaveData final
{
public:
	int32                                         DelegateMaxAdditionCnt;                            // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DelegateCnt;                                       // 0x0004(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FDelegateMissionQuestInfo> CityQuestMap;                                      // 0x0008(0x0050)(SaveGame, NativeAccessSpecifierPublic)
	bool                                          bIsInit;                                           // 0x0058(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33F1[0x7];                                     // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TrackQuestNode
// 0x000C (0x000C - 0x0000)
struct FTrackQuestNode final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQuestType                                    QuestType;                                         // 0x0008(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33F2[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTBreakStateRequest
// 0x0040 (0x0040 - 0x0000)
struct FHTBreakStateRequest final
{
public:
	EHTCharacterStateType                         StateType;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33F3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVarList                               Args;                                              // 0x0008(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EHTCharacterStateType                         RequesterStateType;                                // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33F4[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSeconds;                                       // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTStateExecutionPolicy                       ExecutionPolicy;                                   // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33F5[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraValueProviderFunctionSubtract
// 0x0020 (0x0028 - 0x0008)
struct FHTCameraValueProviderFunctionSubtract final : public FHTCameraValueProvider
{
public:
	struct FInstancedStruct                       A;                                                 // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       B;                                                 // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTSequencePlaybackSettings
// 0x00B0 (0x00B0 - 0x0000)
struct FHTSequencePlaybackSettings final
{
public:
	bool                                          bDisableKeyboardInput;                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideUI;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecoverAllUIWhenEnd;                              // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideHeadUpInfo;                                   // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPauseCameraSwitch;                                // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideSpawnedNpc;                                   // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideVehicle;                                      // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33F6[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnedNpcHideDistance;                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideSpawnedVisualActor;                           // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33F7[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnedVisualActorHideDistance;                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopToEnd;                                        // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33F8[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BackwardFrameStopTo;                               // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckSafeDistanceToPlayer;                        // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDontSendClientSideCameraUpdatesToServer;          // 0x001D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowBulletScreen;                                 // 0x001E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPauseGameSound;                                   // 0x001F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBestViewDistanceQuality;                          // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33F9[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CantSkipTime;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSequenceFadeIn;                                 // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSequenceFadeOut;                                // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33FA[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeOutSequenceTime;                               // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTransformOrigin;                               // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33FB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TransformOriginActor;                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             TransformOrigin;                                   // 0x0040(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBreakAllSkillMontange;                            // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActuallyStopBeforeAnim;                           // 0x00A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResetCamera;                                      // 0x00A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceAddToNewSpawnedTickGroup;                    // 0x00A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShowSimpleActorNum;                                // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33FC[0x8];                                     // 0x00A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.WorldSequenceData
// 0x0108 (0x0110 - 0x0008)
struct FWorldSequenceData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class ULevelSequence>          SequenceTemple;                                    // 0x0008(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovieSceneSequencePlaybackSettings    Settings;                                          // 0x0030(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_33FD[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHTSequencePlaybackSettings            GameplaySettings;                                  // 0x0060(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuangLingReactionExpendFourData
// 0x0008 (0x0020 - 0x0018)
struct FGuangLingReactionExpendFourData final : public FReactinData
{
public:
	int32                                         AdditionalBulletCount;                             // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FixFireCountDown;                                  // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTReplicatedObjectNetID
// 0x0034 (0x0034 - 0x0000)
struct FHTReplicatedObjectNetID final
{
public:
	struct FCharacterForNet                       NetTarget;                                         // 0x0000(0x002C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ComponentName;                                     // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTReplicatedObjectPropertyContainer
// 0x0040 (0x0060 - 0x0020)
struct FHTReplicatedObjectPropertyContainer final : public FHottaReplicatedObjectPropertyContainer
{
public:
	bool                                          bUseCharacterForNetID;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33FE[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHTReplicatedObjectNetID               ObjectNetID;                                       // 0x0024(0x0034)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_33FF[0x8];                                     // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTBusinessConfig
// 0x0088 (0x0090 - 0x0008)
struct FHTBusinessConfig final : public FTableRowBase
{
public:
	class FText                                   Name;                                              // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bIsDefault;                                        // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoUnlock;                                       // 0x0019(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3400[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   UnlockDescription;                                 // 0x0020(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0030(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              IconSource;                                        // 0x0040(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              IconSourceBig;                                     // 0x0068(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTFootIKLegDefinition
// 0x00C0 (0x00C0 - 0x0000)
struct alignas(0x08) FHTFootIKLegDefinition final
{
public:
	struct FBoneReference                         FKFootBone;                                        // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         IKFootBone;                                        // 0x0010(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         VBIKFootBoneOffset;                                // 0x0020(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   EnableFootIKCurveName;                             // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FootLockCurveName;                                 // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3401[0x80];                                    // 0x0040(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTAnimNodeSkeletalControlBase
// 0x0000 (0x00C8 - 0x00C8)
struct FHTAnimNodeSkeletalControlBase : public FAnimNode_SkeletalControlBase
{
};

// ScriptStruct HTGame.HTFootIKAnimNode
// 0x00B0 (0x0178 - 0x00C8)
struct FHTFootIKAnimNode final : public FHTAnimNodeSkeletalControlBase
{
public:
	uint8                                         Pad_3402[0x38];                                    // 0x00C8(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 OwningComponent;                                   // 0x0100(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimInstance*                          OwningAnimInstance;                                // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OwningActor;                                       // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         PelvisBone;                                        // 0x0118(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FHTFootIKLegDefinition>         LegDefinitions;                                    // 0x0128(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         FIKTraceDistanceAboveFoot;                         // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FIKTraceDistanceBelowFoot;                         // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FIKTraceRadius;                                    // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FFootHeight;                                       // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FFootHeightOffset;                                 // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FLocationOffsetHInterpSpeed;                       // 0x014C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FLocationOffsetLInterpSpeed;                       // 0x0150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3403[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PelvisOffset;                                      // 0x0158(0x0018)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FPelvisOffsetHInterpSpeed;                         // 0x0170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FPelvisOffsetLInterpSpeed;                         // 0x0174(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DrumPointResultData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x04) FDrumPointResultData final
{
public:
	uint8                                         Pad_3404[0x20];                                    // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GameplayAbilityCost
// 0x0008 (0x0010 - 0x0008)
struct FGameplayAbilityCost final : public FTableRowBase
{
public:
	float                                         GACost;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GAStrengthCost;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UserSummary
// 0x0070 (0x0070 - 0x0000)
struct FUserSummary final
{
public:
	int32                                         Version;                                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3405[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Uid;                                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlayStation                           PS;                                                // 0x0010(0x0020)(NativeAccessSpecifierPublic)
	class FString                                 Name;                                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AvatarId;                                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SignCnt;                                           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBirthday                              Birthday;                                          // 0x0058(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Level;                                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3406[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         LastOnlineTime;                                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuangLingReactionExpendOneData
// 0x0010 (0x0028 - 0x0018)
struct FGuangLingReactionExpendOneData final : public FReactinData
{
public:
	float                                         AdditionalDamageRange;                             // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3407[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            NewDamageGE;                                       // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTEnterStateRequest
// 0x0050 (0x0050 - 0x0000)
struct FHTEnterStateRequest final
{
public:
	EHTCharacterStateType                         StateType;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3408[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVarList                               Args;                                              // 0x0008(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FParameterWrapperArray                 ParameterWrappers;                                 // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSeconds;                                       // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTStateExecutionPolicy                       ExecutionPolicy;                                   // 0x004C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3409[0x3];                                     // 0x004D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraValueProviderFunctionAdd
// 0x0020 (0x0028 - 0x0008)
struct FHTCameraValueProviderFunctionAdd final : public FHTCameraValueProvider
{
public:
	struct FInstancedStruct                       A;                                                 // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       B;                                                 // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StorySequenceAndVedioData
// 0x0020 (0x0028 - 0x0008)
struct FStorySequenceAndVedioData final : public FTableRowBase
{
public:
	class FString                                 Desc;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               SequenceInfo;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AIGroupSkillInfo
// 0x0018 (0x0018 - 0x0000)
struct FAIGroupSkillInfo final
{
public:
	TArray<TSubclassOf<class UHTGameplayAbility>> UsedSkills;                                        // 0x0000(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         LastGroupEndTime;                                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalSkillNum;                                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointCondition
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FRedPointCondition
{
public:
	uint8                                         Pad_340A[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RedPointConditionActivationChange
// 0x0000 (0x0008 - 0x0008)
struct FRedPointConditionActivationChange final : public FRedPointCondition
{
};

// ScriptStruct HTGame.DivinationIdToAreaId
// 0x0010 (0x0018 - 0x0008)
struct FDivinationIdToAreaId final : public FTableRowBase
{
public:
	TArray<class FName>                           AreaIds;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapCustomMarkIconData
// 0x0050 (0x0050 - 0x0000)
struct FMiniMapCustomMarkIconData final
{
public:
	class FString                                 IconUniqueID;                                      // 0x0000(0x0010)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   IconID;                                            // 0x0010(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0018(0x0010)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BelongsLevel;                                      // 0x0028(0x0010)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Transform;                                         // 0x0038(0x0018)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ForkUpgrade
// 0x000C (0x000C - 0x0000)
struct FForkUpgrade final
{
public:
	struct FHTItemNetID                           UniqueID;                                          // 0x0000(0x0008)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Amount;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UIAbilityDescription
// 0x0040 (0x0040 - 0x0000)
struct FUIAbilityDescription final
{
public:
	EAbilityDesType                               AbilityDesType;                                    // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_340B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DescriptionTitle;                                  // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   UnlockId;                                          // 0x0028(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   UnlockDesc;                                        // 0x0030(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GameplayAbilityLevelUpStruct
// 0x0030 (0x0030 - 0x0000)
struct FGameplayAbilityLevelUpStruct final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Desc;                                              // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   DescValue;                                         // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   CLGlobalCommonDataCurveID;                         // 0x0028(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GameplayAbilityTips
// 0x0088 (0x0090 - 0x0008)
struct FGameplayAbilityTips final : public FTableRowBase
{
public:
	class FText                                   Name;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FUIAbilityDescription>          AbilityDescription;                                // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ExtendIcon;                                        // 0x0050(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayAbilityLevelUpStruct>  GALevelUpArray;                                    // 0x0078(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bStolenAbility;                                    // 0x0088(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_340C[0x7];                                     // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ReactionCameraSettings
// 0x0060 (0x0330 - 0x02D0)
struct FReactionCameraSettings final : public FCameraSettings
{
public:
	bool                                          bEnableTimeIntervalPoint;                          // 0x02D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_340D[0x3];                                     // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeIntervalPoint;                                 // 0x02D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReactionInTime;                                    // 0x02D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_340E[0x4];                                     // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraInterpolationSetting            ReactionInArmLengthSetting;                        // 0x02E0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReactionOutTime;                                   // 0x0300(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_340F[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraInterpolationSetting            ReactionOutArmLengthSetting;                       // 0x0308(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnToOrginArmLength;                            // 0x0328(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3410[0x7];                                     // 0x0329(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SaveGameplayEffectMapping
// 0x0030 (0x0038 - 0x0008)
struct FSaveGameplayEffectMapping final : public FTableRowBase
{
public:
	TSoftClassPtr<class UClass>                   GameplayEffectClass;                               // 0x0008(0x0028)(Edit, DisableEditOnInstance, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UniqueIndex;                                       // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3411[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RecentInfo
// 0x0078 (0x0078 - 0x0000)
struct FRecentInfo final
{
public:
	int64                                         UpdateTime;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUserSummary                           SummaryData;                                       // 0x0008(0x0070)(BlueprintVisible, BlueprintReadOnly, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LimitPropertyData
// 0x0010 (0x0018 - 0x0008)
struct FLimitPropertyData final : public FTableRowBase
{
public:
	struct FGameplayTag                           LimitTag;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterLimitProptiesType                   LimitPropertyType;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3412[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VehicleBrokenData
// 0x0008 (0x0008 - 0x0000)
struct FVehicleBrokenData final
{
public:
	EImpactPart                                   VehiclePartType;                                   // 0x0000(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3413[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurentEndurance;                                   // 0x0004(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RentVehicleBrokenData
// 0x0020 (0x0020 - 0x0000)
struct FRentVehicleBrokenData final
{
public:
	class FName                                   VehicleID;                                         // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ColorId;                                           // 0x0008(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3414[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVehicleBrokenData>             VehicleBrokonInfos;                                // 0x0010(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.WorkingItemStrParseData
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FWorkingItemStrParseData final
{
public:
	uint8                                         Pad_3415[0x18];                                    // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.OfferInfoSet
// 0x000C (0x000C - 0x0000)
struct FOfferInfoSet final
{
public:
	class FName                                   PropID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Num;                                               // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreConsumeItemData
// 0x000C (0x000C - 0x0000)
struct FStoreConsumeItemData final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ItemCount;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BinaryDrumSongSaveData
// 0x0028 (0x0028 - 0x0000)
struct FBinaryDrumSongSaveData final
{
public:
	class FName                                   SongID;                                            // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LevelType;                                         // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3416[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 SongData;                                          // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	int64                                         Unique_id;                                         // 0x0020(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleData
// 0x0130 (0x0138 - 0x0008)
struct FVehicleData final : public FTableRowBase
{
public:
	class FName                                   VehicleID;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Name;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Brand;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bDefaultUnLock;                                    // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVehicleTemplateType                          VehicleType;                                       // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3417[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              UnLockNormalIcon;                                  // 0x0048(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              UnLockSelectedIcon;                                // 0x0070(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   InVehicleTemple;                                   // 0x0098(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EVehicleModuleType, struct FTransform>   ModulePreviewCamera;                               // 0x00C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   UnlockId;                                          // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TrackGoalOffset;                                   // 0x0118(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                            EnduranceProps;                                    // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.InstancedStructTestBase
// 0x0001 (0x0001 - 0x0000)
struct FInstancedStructTestBase
{
public:
	bool                                          BoolVaue;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RealEstateBuildingTypeData
// 0x0038 (0x0040 - 0x0008)
struct FRealEstateBuildingTypeData final : public FTableRowBase
{
public:
	class FText                                   BuildingTypeName;                                  // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              IconImage;                                         // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AbyssCloneActivityData
// 0x0014 (0x0014 - 0x0000)
struct FAbyssCloneActivityData final
{
public:
	class FName                                   ActivityId;                                        // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LevelID;                                           // 0x0008(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LayerIndex;                                        // 0x0010(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FoliageInteractionInfo
// 0x0014 (0x0014 - 0x0000)
struct FFoliageInteractionInfo final
{
public:
	class FName                                   MeshTag;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RandomModifyDataCiTiaoStruct
// 0x0010 (0x0010 - 0x0000)
struct FRandomModifyDataCiTiaoStruct final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PropValue;                                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OwnGridNum;                                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FunctionUnlockActiveParam
// 0x0014 (0x0014 - 0x0000)
struct FFunctionUnlockActiveParam final
{
public:
	EFunctionUnlockActiveType                     ActiveType;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3418[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxValue;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ID;                                                // 0x000C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FunctionUnlockConfig
// 0x0178 (0x0180 - 0x0008)
struct FFunctionUnlockConfig final : public FTableRowBase
{
public:
	class FString                                 Comment;                                           // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ActivatedOnEditor;                                 // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3419[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ID;                                                // 0x001C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESwitchType                                   SwitchID;                                          // 0x0024(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_341A[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFunctionUnlockActiveParam>     Requires;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EFunctionUnlockConditionType                  ConditionType;                                     // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_341B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInstancedStruct>               Actions;                                           // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   UINameToOpen;                                      // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UIExtendParameter;                                 // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Icon;                                              // 0x0070(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bShowActiveDescription;                            // 0x0140(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_341C[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0148(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_341D[0x10];                                    // 0x0158(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bEnableQuickMenuOption;                            // 0x0168(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_341E[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         QuickMenuIndex_Keyboard;                           // 0x016C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         QuickMenuIndex_Gamepad;                            // 0x0170(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQuickMenuSettingsButtonPlace                 Place;                                             // 0x0174(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_341F[0xB];                                     // 0x0175(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HandmadePos
// 0x000C (0x000C - 0x0000)
struct FHandmadePos final
{
public:
	int32                                         Index;                                             // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ItemID;                                            // 0x0004(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FurnitureUsedItem
// 0x0038 (0x0038 - 0x0000)
struct FFurnitureUsedItem final
{
public:
	struct FVector                                FurnitureLocation;                                 // 0x0000(0x0018)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FurnitureItemID;                                   // 0x0018(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UseItemId;                                         // 0x0020(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHandmadePos>                   HandmadeItems;                                     // 0x0028(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AnHunReactionExpendOneData
// 0x0008 (0x0020 - 0x0018)
struct FAnHunReactionExpendOneData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LoadingData
// 0x0048 (0x0048 - 0x0000)
struct FLoadingData final
{
public:
	TSoftObjectPtr<class UTexture2D>              BackImage;                                         // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0028(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FText                                   Desc;                                              // 0x0038(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FoliageInteractionWeaponTrailInfo
// 0x0068 (0x0068 - 0x0000)
struct FFoliageInteractionWeaponTrailInfo final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 MeshComponent;                                     // 0x0008(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PreviousLocation;                                  // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Velocity;                                          // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LocalHeight;                                       // 0x0064(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RoomDecorationPlans
// 0x0010 (0x0010 - 0x0000)
struct FRoomDecorationPlans final
{
public:
	class FName                                   RoomId;                                            // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DecorationId;                                      // 0x0008(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TeachGuidePictureNode
// 0x0070 (0x0070 - 0x0000)
struct FTeachGuidePictureNode final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Photo;                                             // 0x0020(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              PSPhoto;                                           // 0x0048(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTNotifyStateData
// 0x0008 (0x0008 - 0x0000)
struct FHTNotifyStateData final
{
public:
	float                                         StartTime;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SaveFrunitureArray
// 0x0018 (0x0018 - 0x0000)
struct FSaveFrunitureArray final
{
public:
	class FName                                   FurnitureItemID;                                   // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     TransformArray;                                    // 0x0008(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ChargeMonthCountData
// 0x0008 (0x0008 - 0x0000)
struct FChargeMonthCountData final
{
public:
	int32                                         CurMonth;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalAmount;                                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SaveGameChargeOrder
// 0x0018 (0x0018 - 0x0000)
struct FSaveGameChargeOrder final
{
public:
	class FString                                 CreateTime;                                        // 0x0000(0x0010)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ProductId;                                         // 0x0010(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DelegateMissionTendencyLevelData
// 0x0030 (0x0038 - 0x0008)
struct FDelegateMissionTendencyLevelData final : public FTableRowBase
{
public:
	EDelegateMissionRoleTendencyLevel             TendencyType;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3420[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GoodFeelingAddValue;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              TendencyIcon;                                      // 0x0010(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UIGuideWidgetInfo
// 0x0014 (0x0014 - 0x0000)
struct alignas(0x04) FUIGuideWidgetInfo final
{
public:
	uint8                                         Pad_3421[0x14];                                    // 0x0000(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DrumChannelPointData
// 0x001C (0x001C - 0x0000)
struct alignas(0x04) FDrumChannelPointData final
{
public:
	uint8                                         Pad_3422[0x1C];                                    // 0x0000(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.Avatar
// 0x0018 (0x0018 - 0x0000)
struct FAvatar final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FrameId;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BackGroundId;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ForkInfo
// 0x001C (0x001C - 0x0000)
struct FForkInfo final
{
public:
	struct FHTItemNetID                           ForkItemNetID;                                     // 0x0000(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   ItemID;                                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StrengthenLevel;                                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BreakthroughLevel;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StarLevel;                                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EquipmentInfo
// 0x0030 (0x0030 - 0x0000)
struct FEquipmentInfo final
{
public:
	struct FHTItemNetID                           EquipmentNetId;                                    // 0x0000(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                         StrengthenLevel;                                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3423[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           RandomBaseModifyData;                              // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRandomModifyDataSaveStruct>    RandomModifyData;                                  // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterInfoStruct
// 0x00A0 (0x00A0 - 0x0000)
struct FCharacterInfoStruct final
{
public:
	struct FHTItemNetID                           UniqueID;                                          // 0x0000(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   CharacterId;                                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterLevel;                                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BreakthroughLevel;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AwakenLevel;                                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsEquiped;                                         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3424[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillLevelData>                SkillLevelData;                                    // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FEquipmentStruct>               EquipmentSlots;                                    // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FEquipmentSlotInfo>             EquipCoreSlots;                                    // 0x0040(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAwakenEffectData>              AwakenEffectDataLists;                             // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FForkInfo                              ForkInfo;                                          // 0x0060(0x001C)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3425[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEquipmentInfo>                 EquipmentInfoList;                                 // 0x0080(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           YiNengAttributeData;                               // 0x0090(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.WholeVehicleData
// 0x0038 (0x0038 - 0x0000)
struct FWholeVehicleData final
{
public:
	class FName                                   VehicleID;                                         // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           Modules;                                           // 0x0008(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<struct FVehicleBrokenData>             VehicleBrokonInfos;                                // 0x0018(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<class FName>                           OwnedVehicleModule;                                // 0x0028(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UserDetail
// 0x0090 (0x0090 - 0x0000)
struct FUserDetail final
{
public:
	int32                                         Version;                                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAcceptFriend;                                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3426[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAvatar                                Avatar;                                            // 0x0008(0x0018)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                         WorldLevel;                                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayDay;                                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           MedalIds;                                          // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          IsShowStatistical;                                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3427[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FigureNum;                                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterNum;                                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AchievementNum;                                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ForkNum;                                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3428[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCharacterInfoStruct>           CharacterList;                                     // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          IsShowEstate;                                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3429[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         EstateList;                                        // 0x0068(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          IsShowVehicle;                                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_342A[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWholeVehicleData>              VehicleList;                                       // 0x0080(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTUserCache
// 0x0100 (0x0100 - 0x0000)
struct FHTUserCache final
{
public:
	struct FUserSummary                           SummaryData;                                       // 0x0000(0x0070)(NativeAccessSpecifierPublic)
	struct FUserDetail                            DetailData;                                        // 0x0070(0x0090)(NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTFriendInfo
// 0x0128 (0x0128 - 0x0000)
struct FHTFriendInfo final
{
public:
	EHTFriendType                                 Type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_342B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Uid;                                               // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NickName;                                          // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         UpdateTime;                                        // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHTUserCache                           UserCache;                                         // 0x0028(0x0100)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassStreetLampsParameters
// 0x0020 (0x0020 - 0x0000)
struct FMassStreetLampsParameters final : public FMassSharedFragment
{
public:
	class UMassStreetLampTypesDataAsset*          StreetLampTypesData;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int16>                                 StreetLampTypesStaticMeshDescIndex;                // 0x0008(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	float                                         OpenCastShadows;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_342C[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StaticEquipmentStrengthData
// 0x0018 (0x0020 - 0x0008)
struct FStaticEquipmentStrengthData final : public FTableRowBase
{
public:
	int32                                         NeedExp;                                           // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_342D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0010(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTRedPointReadData
// 0x0020 (0x0020 - 0x0000)
struct FHTRedPointReadData final
{
public:
	class FName                                   RedPointType;                                      // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MessageId;                                         // 0x0008(0x0010)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsRead;                                            // 0x0018(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_342E[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AreaMusicData
// 0x0048 (0x0048 - 0x0000)
struct FAreaMusicData final
{
public:
	TSoftObjectPtr<class UAkAudioEvent>           AudioEvent;                                        // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StateGroup;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MapPointData
// 0x0088 (0x0090 - 0x0008)
struct FMapPointData final : public FTableRowBase
{
public:
	class FString                                 Comment;                                           // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BelongsLevel;                                      // 0x0018(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_342F[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             PointTransform;                                    // 0x0030(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTQuickMenuSettingTableRow
// 0x0128 (0x0130 - 0x0008)
struct FHTQuickMenuSettingTableRow final : public FTableRowBase
{
public:
	class FName                                   ID;                                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESwitchType                                   UISwitchID;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3430[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   OptionName;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EQuickMenuSettingsButtonPlace                 Place;                                             // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3431[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UIToOpen;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ExtendParameter;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3432[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            OptionIcon;                                        // 0x0050(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bIsEmpty;                                          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3433[0xF];                                     // 0x0121(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DivinationRewardSaveData
// 0x0010 (0x0010 - 0x0000)
struct FDivinationRewardSaveData final
{
public:
	EDivinationType                               DivinationType;                                    // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3434[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RewardId;                                          // 0x0004(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index;                                             // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StorePropParseData
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FStorePropParseData final
{
public:
	uint8                                         Pad_3435[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DivinationSaveData
// 0x0008 (0x0008 - 0x0000)
struct FDivinationSaveData final
{
public:
	EDivinationType                               DivinationType;                                    // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3436[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DivinationCount;                                   // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TransferSingleSceneInfo
// 0x0070 (0x0070 - 0x0000)
struct FTransferSingleSceneInfo final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAnimNode_GetRootSpeed
// 0x0038 (0x0048 - 0x0010)
struct FHTAnimNode_GetRootSpeed final : public FAnimNode_Base
{
public:
	struct FPoseLink                              SourcePose;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, EditFixedSize, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsUserBlendCurve;                                 // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3437[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RootSpeedCurve;                                    // 0x0024(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FRootVelocityX;                                    // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FRootVelocityY;                                    // 0x0034(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FRootVelocityZ;                                    // 0x003C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3438[0x4];                                     // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DivinationSubBase
// 0x0050 (0x0050 - 0x0000)
struct FDivinationSubBase
{
public:
	EDivinationType                               DivinationType;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3439[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Weight;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              TargetIcon;                                        // 0x0008(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   TitleText;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   BodyText;                                          // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DivinationFetterSub
// 0x0008 (0x0058 - 0x0050)
struct FDivinationFetterSub final : public FDivinationSubBase
{
public:
	class FName                                   FetterNPCID;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DivinationFetter
// 0x0010 (0x0018 - 0x0008)
struct FDivinationFetter final : public FTableRowBase
{
public:
	TArray<struct FDivinationFetterSub>           DivinationFetterArray;                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreBrandUpgradeTips
// 0x000C (0x000C - 0x0000)
struct FStoreBrandUpgradeTips final
{
public:
	class FName                                   StoreBrandID;                                      // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LastOpenUIStoreBrandLevel;                         // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SpawnParticleEffectParams
// 0x00C0 (0x00C0 - 0x0000)
struct FSpawnParticleEffectParams final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          SoftPSTemplate;                                    // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LocationOffset;                                    // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RotationOffset;                                    // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Scale;                                             // 0x0058(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScalingStandard;                                   // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_343A[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ScaleFactor;                                       // 0x0078(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Attached : 1;                                      // 0x0090(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         IgnoreHitEffectOpt : 1;                            // 0x0090(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         UseParentBoundBox : 1;                             // 0x0090(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_343B[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAcceptCustomDilation;                             // 0x0094(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAttachRootComponent;                              // 0x0095(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_343C[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInstancedStruct>               NiagaraParameters;                                 // 0x0098(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       DirectionForce;                                    // 0x00A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UNiagaraSystem*                         SavedParticleSystem;                               // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct HTGame.AkEventParams
// 0x0048 (0x0048 - 0x0000)
struct FAkEventParams final
{
public:
	TSoftObjectPtr<class UAkAudioEvent>           SoftEventToPlay;                                   // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAttached : 1;                                     // 0x0028(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_343D[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AttachName;                                        // 0x002C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EventName;                                         // 0x0034(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_343E[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          CacheAkAudioEvent;                                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct HTGame.AimingParams
// 0x01F8 (0x01F8 - 0x0000)
struct FAimingParams final
{
public:
	float                                         ShootDistance;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             TraceChannel;                                      // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_343F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TraceProfileName;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HideHeadUpInfo;                                    // 0x0010(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         AimingFloating : 1;                                // 0x0011(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_3440[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AHTActor>                   AimingViewActorClass;                              // 0x0018(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         CanForceAttack : 1;                                // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_3441[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EnterForceAimingTime;                              // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForceAimingDamageMaxMult;                          // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForceAimingMaxTime;                                // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSpawnParticleEffectParams             ForceAimingParticleEffect;                         // 0x0030(0x00C0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FAkEventParams                         ForceAkInfo;                                       // 0x00F0(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FAkEventParams                         ForceMaxAkInfo;                                    // 0x0138(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FAkEventParams                         ExistForceAkInfo;                                  // 0x0180(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         ForceAimingSpeedMultiplier;                        // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimingSpeedMultiplier;                             // 0x01CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanAutoAim;                                       // 0x01D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3442[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AutoAimMinDistance;                                // 0x01D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoAimAdjustLerpSpeed;                            // 0x01D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoAimPitchOffset;                                // 0x01DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoAimYawOffset;                                  // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoAimSearchCoolDown;                             // 0x01E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoAimCoolDown;                                   // 0x01E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndAutoAimingInputThreshold;                       // 0x01EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlwaysLockAutoAimTarget;                          // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebugAutoAim;                                     // 0x01F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3443[0x6];                                     // 0x01F2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoreBrandSpawnNPCData
// 0x0014 (0x0014 - 0x0000)
struct FStoreBrandSpawnNPCData final
{
public:
	class FName                                   StoreBrandID;                                      // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SpawNPCID;                                         // 0x0008(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EmployeeSlotIndex;                                 // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreBrandEventLog
// 0x0038 (0x0038 - 0x0000)
struct FStoreBrandEventLog final
{
public:
	class FName                                   StoreBrandID;                                      // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCommonLog;                                      // 0x0008(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3444[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EventID;                                           // 0x000C(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3445[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              HandleLogTime;                                     // 0x0018(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              EndHandleLogTime;                                  // 0x0020(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EmployeeID;                                        // 0x0028(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAddEvent;                                       // 0x0030(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3446[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoreBrandLog
// 0x0010 (0x0010 - 0x0000)
struct FStoreBrandLog final
{
public:
	TArray<struct FStoreBrandEventLog>            EventLogs;                                         // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UpgradeStarAttributecCoefficient
// 0x000C (0x000C - 0x0000)
struct FUpgradeStarAttributecCoefficient final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PropCoefficient;                                   // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreBrandWorkingInfoRecord
// 0x000C (0x000C - 0x0000)
struct FStoreBrandWorkingInfoRecord final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SimpleActorPlatformShow
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FSimpleActorPlatformShow final
{
public:
	float                                         ShowDistance;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxShowNum;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTSpawnPlatform                              SpawnPlatfomType;                                  // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3447[0x17];                                    // 0x0009(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoreBrandEventTimeNode
// 0x0028 (0x0028 - 0x0000)
struct FStoreBrandEventTimeNode final
{
public:
	class FName                                   EventID;                                           // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              EndTime;                                           // 0x0008(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDateTime>                      EmployeeHandleEventTimeNodes;                      // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	bool                                          bCanDelete;                                        // 0x0020(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3448[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoreBrandEventSaveData
// 0x0068 (0x0068 - 0x0000)
struct FStoreBrandEventSaveData final
{
public:
	class FName                                   StoreBrandID;                                      // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StoreBrandIntervalModelIndex;                      // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3449[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              LastIncomeTime;                                    // 0x0010(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           CandidateEventPool;                                // 0x0018(0x0010)(BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<class FName>                           SelectedEventPool;                                 // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<struct FStoreBrandEventTimeNode>       TakeEffectNodes;                                   // 0x0038(0x0010)(BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<struct FStoreBrandEventTimeNode>       EventEnterPoolNodes;                               // 0x0048(0x0010)(BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<struct FStoreBrandEventTimeNode>       EffectIncomeNodes;                                 // 0x0058(0x0010)(BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreConditionData
// 0x0038 (0x0038 - 0x0000)
struct FStoreConditionData final
{
public:
	EStoreConditionType                           ConditionType;                                     // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_344A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   StoreBrandID;                                      // 0x0004(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BrandLevel;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ItemID;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemSalesVolume;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemLevel;                                         // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ConsumeItemCount;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ManagerLevel;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ConditionDes;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreBrand
// 0x0208 (0x0210 - 0x0008)
struct FStoreBrand final : public FTableRowBase
{
public:
	class FName                                   BrandUnqiueID;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   BrandName;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   BelongStoreID;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BrandFitment;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_344B[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              BrandIcon;                                         // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             StoreBrandHeadLogoMesh;                            // 0x0058(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             StoreBrandHeadMesh;                                // 0x0080(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             StoreBrandBodyLogoMesh;                            // 0x00A8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   StoreBrandDoor;                                    // 0x00D0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              WorkingEmployeeIcon;                               // 0x00F8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, float>                            GuaranteedIncomeMap;                               // 0x0120(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FStoreConditionData>            UnlockSlotConditions;                              // 0x0170(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<int32, int32>                            StoreBrandLevelExpMap;                             // 0x0180(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  StoreBrandLevelInstance;                           // 0x01D0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           EventPool;                                         // 0x01F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   SeqEndTransferID;                                  // 0x0208(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.JSRequirement_HasGE
// 0x0020 (0x0028 - 0x0008)
struct FJSRequirement_HasGE final : public FJumpSectionRequirementBase
{
public:
	TArray<TSubclassOf<class UHTGamePlayEffect>>  HasAllGEArray;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UHTGamePlayEffect>>  HasAnyGEArray;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraDeltaTimeModifier
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FHTCameraDeltaTimeModifier
{
public:
	uint8                                         Pad_344C[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraDeltaTimeModifier_Multiplier
// 0x0010 (0x0018 - 0x0008)
struct FHTCameraDeltaTimeModifier_Multiplier final : public FHTCameraDeltaTimeModifier
{
public:
	struct FInstancedStruct                       Multiplier;                                        // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreBrandSellItemData
// 0x0014 (0x0014 - 0x0000)
struct FStoreBrandSellItemData final
{
public:
	class FName                                   StoreBrandID;                                      // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ItemID;                                            // 0x0008(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ItemCount;                                         // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreBrandSellLog
// 0x0038 (0x0038 - 0x0000)
struct FStoreBrandSellLog final
{
public:
	class FName                                   StoreBrandID;                                      // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SellItemIncome;                                    // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GuaranteedIncome;                                  // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LuckIncome;                                        // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_344D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStoreBrandSellItemData>        SellItems;                                         // 0x0018(0x0010)(BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<struct FStoreBrandSellItemData>        ConsumeSellItems;                                  // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconExtendData
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FMiniMapIconExtendData
{
public:
	uint8                                         Pad_344E[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MiniMapIconExtendData_Trial
// 0x0010 (0x0018 - 0x0008)
struct FMiniMapIconExtendData_Trial final : public FMiniMapIconExtendData
{
public:
	class FName                                   TrialID;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETrialType                                    TrialType;                                         // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_344F[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ActSignInRPCInfo
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FActSignInRPCInfo final
{
public:
	uint8                                         Pad_3450[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CityShopFixedQuestInfo
// 0x0018 (0x0018 - 0x0000)
struct FCityShopFixedQuestInfo final
{
public:
	class FName                                   CityUnqiueID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BrandUnqiueID;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestId;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CityShopQuestInfo
// 0x0030 (0x0030 - 0x0000)
struct FCityShopQuestInfo final
{
public:
	TArray<struct FCityShopFixedQuestInfo>        FixedQuestInfoArray;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<class FName>                           QuestAcceptArray;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<class FName>                           QuestFinishArray;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreItemSalesVolumeInfo
// 0x000C (0x000C - 0x0000)
struct FStoreItemSalesVolumeInfo final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemCount;                                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DamageExplode
// 0x0003 (0x0003 - 0x0000)
struct FDamageExplode final
{
public:
	EExecutionDamageTypeEX                        DamageType;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCauseExplode;                                     // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDelayExplode;                                     // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OpenMouthTableRow
// 0x0008 (0x0010 - 0x0008)
struct FOpenMouthTableRow final : public FTableRowBase
{
public:
	float                                         Time;                                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Open;                                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.WoodenStructData
// 0x0010 (0x0018 - 0x0008)
struct FWoodenStructData final : public FTableRowBase
{
public:
	class FText                                   Desc;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ForkItemNetInfo
// 0x001C (0x001C - 0x0000)
struct FForkItemNetInfo final
{
public:
	int32                                         StrengthenLevel;                                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BreakthroughLevel;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StarLevel;                                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLocked;                                          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3451[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CharacterId;                                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EXP;                                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CityShopBrandLevelAndIntegralInfo
// 0x0028 (0x0028 - 0x0000)
struct FCityShopBrandLevelAndIntegralInfo final
{
public:
	class FName                                   BrandUnqiueID;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BrandLevel;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BrandExp;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BrandIntegral;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLockVipLevel;                                   // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3452[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ReceiveAwardsLevelInfo;                            // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CityShopLevelAndIntegralInfo
// 0x0010 (0x0010 - 0x0000)
struct FCityShopLevelAndIntegralInfo final
{
public:
	TArray<struct FCityShopBrandLevelAndIntegralInfo> BrandLevelAndIntegralInfoArray;                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTModifierValue
// 0x0010 (0x0010 - 0x0000)
struct FHTModifierValue final
{
public:
	float                                         ModifierValue;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3453[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffectCustomApplicationRequirement> ApplicationRequirement;                            // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraValueProviderFunctionNegate
// 0x0010 (0x0018 - 0x0008)
struct FHTCameraValueProviderFunctionNegate final : public FHTCameraValueProvider
{
public:
	struct FInstancedStruct                       A;                                                 // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreStaticItemBaseInfo
// 0x0060 (0x0060 - 0x0000)
struct FStoreStaticItemBaseInfo final
{
public:
	int32                                         ItemLevel;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemSellPrice;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStorePropertyNode                     ConsumeWillPropertyNode;                           // 0x0008(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FStoreConsumeItemData>          UpgradeConsumeItems;                               // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FStoreConditionData>            UpgradeConditions;                                 // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FoliageInteractionData
// 0x0050 (0x0050 - 0x0000)
struct FFoliageInteractionData final
{
public:
	class USkeletalMeshComponent*                 MeshComponent;                                     // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Length;                                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Width;                                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3454[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionSoulDelayData
// 0x0088 (0x0088 - 0x0000)
struct FVisionSoulDelayData final
{
public:
	class FName                                   VisionSoulID;                                      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                VisionSoulLocation;                                // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VisionDelayTime;                                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3455[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   VisionSoulActorClass;                              // 0x0028(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bNeedTraceToFloor;                                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3456[0x7];                                     // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DropGroupModifyWeightRecordData
// 0x0050 (0x0050 - 0x0000)
struct FDropGroupModifyWeightRecordData final
{
public:
	TMap<class FName, int64>                      ModifyWeightRecordData;                            // 0x0000(0x0050)(SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAIFlockParams
// 0x0020 (0x0020 - 0x0000)
struct FHTAIFlockParams final
{
public:
	float                                         PatrolRange;                                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PatrolRangeMin;                                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PatrolRandomHeightOffset;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PatrolSpeed;                                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotateInterpSpeed;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3457[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHTAIMovePoint_Spline*                  SplinePathActor;                                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModulePropsData_SkeletalMeshComp
// 0x0030 (0x0030 - 0x0000)
struct FVehicleModulePropsData_SkeletalMeshComp final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   PropValue;                                         // 0x0008(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DropSequenceRecordData
// 0x000C (0x000C - 0x0000)
struct FDropSequenceRecordData final
{
public:
	int32                                         CurGenerateDropCount;                              // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurDropSequenceCount;                              // 0x0004(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxDropSequenceCount;                              // 0x0008(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DropGroupSequenceRecordData
// 0x0050 (0x0050 - 0x0000)
struct FDropGroupSequenceRecordData final
{
public:
	TMap<class FName, struct FDropSequenceRecordData> DropGroupSequenceRecordMap;                        // 0x0000(0x0050)(SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreBrandWorkingData
// 0x0020 (0x0020 - 0x0000)
struct FStoreBrandWorkingData final
{
public:
	TArray<struct FStoreBrandWorkingNode>         EmployeeDatas;                                     // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FStoreBrandWorkingNode>         ItemDatas;                                         // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModulePropsData_ChildActor
// 0x0030 (0x0030 - 0x0000)
struct FVehicleModulePropsData_ChildActor final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   PropValue;                                         // 0x0008(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModule_Base
// 0x0000 (0x0000 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x01) FVehicleModule_Base
{
};
#pragma pack(pop)

// ScriptStruct HTGame.VehicleModule_Spoiler
// 0x0038 (0x0038 - 0x0000)
struct FVehicleModule_Spoiler final : public FVehicleModule_Base
{
public:
	struct FVehicleModulePropsData_ChildActor     ModuleActor;                                       // 0x0000(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   TargetSocket;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RoomCameraSettings
// 0x0010 (0x02E0 - 0x02D0)
struct FRoomCameraSettings final : public FCameraSettings
{
public:
	struct FVector2D                              RotationSpeed;                                     // 0x02D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SplineMeshInfo
// 0x000C (0x000C - 0x0000)
struct FSplineMeshInfo final
{
public:
	int32                                         Index;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UMeshComponent>          WeakPlayer;                                        // 0x0004(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BufferData
// 0x0058 (0x0058 - 0x0000)
struct FBufferData final
{
public:
	class FName                                   BuffName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  DynamicGrantedTags;                                // 0x0008(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, SaveGame, NativeAccessSpecifierPublic)
	int32                                         NLevel;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FDuration;                                         // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ModifyDuration;                                    // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FPeriod;                                           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NStackCount;                                       // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FStrengthMult;                                     // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FStrengthAdd;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3458[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         NStartTime;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CalcOfflineTime;                                   // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3459[0x7];                                     // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GlobalBufferData
// 0x0070 (0x0070 - 0x0000)
struct FGlobalBufferData final
{
public:
	class UGameplayEffect*                        CacheGlobalGE;                                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AHTAbilityCharacter*                    TriggerCharacter;                                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_345A[0x8];                                     // 0x0010(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBufferData                            CacheGlobalBufferData;                             // 0x0018(0x0058)(NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RTPCConfig
// 0x0018 (0x0018 - 0x0000)
struct FRTPCConfig final
{
public:
	class FString                                 RTPCName;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RTPCValue;                                         // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_345B[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MessageDialogSoundData
// 0x0088 (0x0090 - 0x0008)
struct FMessageDialogSoundData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UAkAudioEvent>           DialogSoundEvent;                                  // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRTPCConfig>                    RTPCConfigs;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<TSoftObjectPtr<class UAkAuxBus>, float>  AuxBus;                                            // 0x0040(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FogDensity
// 0x0040 (0x0040 - 0x0000)
struct FFogDensity final
{
public:
	float                                         BaseFogDensity;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FoggyDensityContribution;                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CloudyDensityContribution;                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DustDensityContribution;                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScaleTotalFogDensity;                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FogStartDistancewhenClear;                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FogDensitywhereStartDistanceReachesZero;           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FogDensityDaytimeMutliplier;                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FogDensityNighttimeMultiplier;                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseHeightFogFalloff;                              // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CloudyHeightFogFalloff;                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FoggyHeightFogFalloff;                             // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DustyHeightFogFalloff;                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DisableHeightFogAboveVolumetricCloudLayer;         // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_345C[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VolumetricFogExtinctionScale;                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumetricFogStartDistance;                        // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.Global
// 0x00A0 (0x00A0 - 0x0000)
struct FGlobal final
{
public:
	struct FVector4                               ColorSaturation;                                   // 0x0000(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorContrast;                                     // 0x0020(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorGamma;                                        // 0x0040(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorGain;                                         // 0x0060(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorOffset;                                       // 0x0080(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterBufferData
// 0x00A0 (0x00A0 - 0x0000)
struct FCharacterBufferData final
{
public:
	TMap<class FString, struct FBufferData>       BufferDatas;                                       // 0x0000(0x0050)(SaveGame, NativeAccessSpecifierPublic)
	TMap<class FString, struct FBufferData>       DynamicGrantedTagsBufferDatas;                     // 0x0050(0x0050)(SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DelegateMissionRPCInfoData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FDelegateMissionRPCInfoData final
{
public:
	uint8                                         Pad_345D[0x20];                                    // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTDamageEvent
// 0x0030 (0x0158 - 0x0128)
struct FHTDamageEvent final : public FPointDamageEvent
{
public:
	uint8                                         Pad_345E[0x30];                                    // 0x0128(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTNavMeshAIFragment
// 0x0030 (0x0030 - 0x0000)
struct FHTNavMeshAIFragment final : public FMassFragment
{
public:
	uint8                                         Pad_345F[0x28];                                    // 0x0000(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Timeout;                                           // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MoveAudioParams
// 0x0068 (0x0068 - 0x0000)
struct FMoveAudioParams final
{
public:
	TSoftObjectPtr<class UAkAudioEvent>           AimMovingAudio;                                    // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           AimStopAudio;                                      // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                           MovingAkComponent;                                 // 0x0050(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          MovingAkEvent;                                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          StopAkEvent;                                       // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DelegateMissionRPCQuestReportRoleInfo
// 0x000C (0x000C - 0x0000)
struct alignas(0x04) FDelegateMissionRPCQuestReportRoleInfo final
{
public:
	uint8                                         Pad_3460[0xC];                                     // 0x0000(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.EvadeBeanParam
// 0x0018 (0x0018 - 0x0000)
struct FEvadeBeanParam final
{
public:
	int32                                         RandBean;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurBeanCount;                                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChangeTime;                                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartServerWorldTime;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CachedStartServerWorldTime;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartWorldTime;                                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAchievementEssentialFields
// 0x0188 (0x0190 - 0x0008)
#pragma pack(push, 0x1)
struct alignas(0x10) FHTAchievementEssentialFields : public FTableRowBase
{
public:
	class FName                                   ID;                                                // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTAchievementEssentialType                   Type;                                              // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTAchievementRarity                          Rarity;                                            // 0x0011(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3461[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayName;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         MaxValue;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TypeId;                                            // 0x003C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RewardId;                                          // 0x0044(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3462[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            AchievementIcon;                                   // 0x0050(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         DisplayValue;                                      // 0x0120(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3463[0x64];                                    // 0x0124(0x0064)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
#pragma pack(pop)

// ScriptStruct HTGame.HTAchievementQuestTypeRow
// 0x0010 (0x01A0 - 0x0190)
struct FHTAchievementQuestTypeRow final : public FHTAchievementEssentialFields
{
public:
	EHTAchievementQuestType                       SubType;                                           // 0x0188(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3464[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   QuestId;                                           // 0x018C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3465[0xC];                                     // 0x0194(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StaticGuideWidgetInfo
// 0x0010 (0x0010 - 0x0000)
struct FStaticGuideWidgetInfo final
{
public:
	class FName                                   GuideID;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GuideStep;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECommonInputType                              InputType;                                         // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3466[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LikeabilityChatItemsSaveData
// 0x0010 (0x0010 - 0x0000)
struct FLikeabilityChatItemsSaveData final
{
public:
	TArray<class FName>                           ChatItemIDs;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TalkObjective
// 0x0030 (0x0148 - 0x0118)
struct FTalkObjective final : public FObjectiveData
{
public:
	bool                                          bMainQuestAutoSpeak;                               // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3467[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UDlgDialogue>            SpecialDialog;                                     // 0x0120(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityLevelInfo
// 0x0028 (0x0028 - 0x0000)
struct FLikeabilityLevelInfo final
{
public:
	int32                                         MaxValue;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AwardID;                                           // 0x0004(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3468[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Conditions;                                        // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   ChatItemID;                                        // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityPlotQuestCondition
// 0x000C (0x000C - 0x0000)
struct FLikeabilityPlotQuestCondition final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LikeabilityLevel;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityPlotQuestData
// 0x0018 (0x0018 - 0x0000)
struct FLikeabilityPlotQuestData final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLikeabilityPlotQuestCondition         QuestCondition;                                    // 0x0008(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsEpic;                                           // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3469[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LikeabilityRoleData
// 0x0140 (0x0148 - 0x0008)
struct FLikeabilityRoleData final : public FTableRowBase
{
public:
	class FName                                   SortID;                                            // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AreaId;                                            // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   RoleNameText;                                      // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   TitleNameText;                                     // 0x0028(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   RoleDescText;                                      // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              IconImage;                                         // 0x0048(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   SoftActorClass;                                    // 0x0070(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLikeabilityLevelInfo>          LevelInfo;                                         // 0x0098(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                           QuestIDs;                                          // 0x00A8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       LikeabilityMapData;                                // 0x00B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   UnlockAvatarID;                                    // 0x00C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EpicQuestID;                                       // 0x00D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLikeabilityPlotQuestData>      PlotQuestDatas;                                    // 0x00D8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                           AppointQuestIDs;                                   // 0x00E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         EpicQuestLikeabilityLevel;                         // 0x00F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InitLikeabilityLevel;                              // 0x00FC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InitLikeabilityLevelLimit;                         // 0x0100(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MainPlotChatItemID;                                // 0x0104(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GroupId;                                           // 0x010C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SubSortLevel;                                      // 0x0114(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUnlock;                                         // 0x0118(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsShowMessage;                                    // 0x0119(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLockGift;                                         // 0x011A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_346A[0x1];                                     // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraOffset;                                      // 0x011C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            SoftBornAnim;                                      // 0x0120(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityChatSaveData
// 0x0014 (0x0014 - 0x0000)
struct FLikeabilityChatSaveData final
{
public:
	class FName                                   ChatID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LastChatItemID;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELikeabilityChatState                         State;                                             // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_346B[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LikeabilityChatGroupSaveData
// 0x0020 (0x0020 - 0x0000)
struct FLikeabilityChatGroupSaveData final
{
public:
	class FName                                   GroupId;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LastChatID;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLikeabilityChatSaveData>       ChatDatas;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AutoNavigationParam
// 0x0070 (0x0070 - 0x0000)
struct FAutoNavigationParam final
{
public:
	uint8                                         Pad_346C[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SoftGoalActorClass;                                // 0x0008(0x0028)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_346D[0x14];                                    // 0x0030(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AActor>                  GoalActor;                                         // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_346E[0x24];                                    // 0x004C(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SpawnDamageTriggerActor
// 0x0070 (0x0070 - 0x0000)
struct FSpawnDamageTriggerActor final
{
public:
	TSubclassOf<class AHTAbilitySpawnActor>       SapwnActorClass;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFindSpawnConditionObj*>         SpawnConditionObjs;                                // 0x0008(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	class UFindSpawnLocationObj*                  SpawnLocationObj;                                  // 0x0018(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFindSpawnRotationObj*                  SpawnRotationObj;                                  // 0x0020(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFindSpawnScaleObj*                     SpawnScaleObj;                                     // 0x0028(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceSpawn;                                       // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClientPredictionSpawn;                            // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_346F[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DamageTriggerConfigID;                             // 0x0034(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RandomRadius;                                      // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHTGameplayEffectContainer             EffectContainer;                                   // 0x0040(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UCurveFloat*                            RandomCountCurve;                                  // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SpawnDamageTriggerActorArray
// 0x0028 (0x0028 - 0x0000)
struct FSpawnDamageTriggerActorArray final
{
public:
	TArray<struct FSpawnDamageTriggerActor>       SpawnArray;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         NRandomSpawnCount;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3470[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UHTGATargetType>            SelectTargetType;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHTGATargetType>            SecondSelectTargetType;                            // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTStateOperationResult
// 0x0018 (0x0018 - 0x0000)
struct FHTStateOperationResult final
{
public:
	EHTStateOperationResultType                   Code;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3471[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Cause;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CaptionNode
// 0x0018 (0x0018 - 0x0000)
struct FCaptionNode final
{
public:
	int32                                         StartTime;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndTime;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Text;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VoiceCaptionData
// 0x0010 (0x0018 - 0x0008)
struct FVoiceCaptionData final : public FTableRowBase
{
public:
	TArray<struct FCaptionNode>                   Captions;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityInfo
// 0x0048 (0x0048 - 0x0000)
struct FLikeabilityInfo final
{
public:
	class FName                                   LikeabilityID;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LikeabilityValue;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LikeabilityLevel;                                  // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetGiftAmount;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInFavorites;                                    // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3472[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurQuestID;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CurPlotQuestID;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           GetedGiftsInDay;                                   // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<bool>                                  DefaultAwardGeted;                                 // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityChatOptionData
// 0x0040 (0x0048 - 0x0008)
struct FLikeabilityChatOptionData final : public FTableRowBase
{
public:
	class FText                                   OptionText;                                        // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              OptionIcon;                                        // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NextSetenceID;                                     // 0x0040(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemEffectCDData
// 0x000C (0x000C - 0x0000)
struct FItemEffectCDData final
{
public:
	int32                                         CDType;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxCDTime;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoverTime;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTLotteryRecord
// 0x0040 (0x0040 - 0x0000)
struct FHTLotteryRecord final
{
public:
	int32                                         ExtractedCount;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3473[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              LastFreeExtractDateTime;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TodayExtractedCount;                               // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3474[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              LastExtractDateTime;                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasRemindUpWeaponMaxStars;                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3475[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NextExhibitMediaDays;                              // 0x0024(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          MissUp;                                            // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3476[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NotExpectCount;                                    // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TrackingID;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              DeadLine;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CrowdCharacterMassContextualAnimTaskInstanceData
// 0x0018 (0x0018 - 0x0000)
struct FCrowdCharacterMassContextualAnimTaskInstanceData final
{
public:
	struct FMassEntityHandle                      TargetEntity;                                      // 0x0000(0x0008)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ComputedDuration;                                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Time;                                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3477[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTReactionDisplayTexture
// 0x0018 (0x0018 - 0x0000)
struct FHTReactionDisplayTexture final
{
public:
	EReactionDisplayType                          ReactionDisplayType;                               // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3478[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UTexture2D>>      ReactionDisplayTextures;                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PokemonGameRoundActions
// 0x0218 (0x0220 - 0x0008)
struct FPokemonGameRoundActions final : public FTableRowBase
{
public:
	bool                                          bShouldDoAction;                                   // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3479[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HealthToCut;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OtherSideActionToDelay;                            // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_347A[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            Montage;                                           // 0x0018(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNPCMsgID                              Message;                                           // 0x0040(0x01D0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_347B[0x10];                                    // 0x0210(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PokemonGameRoundActionTurn
// 0x0448 (0x0450 - 0x0008)
struct FPokemonGameRoundActionTurn final : public FTableRowBase
{
public:
	uint8                                         Pad_347C[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPokemonGameRoundActions               MyAction;                                          // 0x0010(0x0220)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FPokemonGameRoundActions               OtherSideAction;                                   // 0x0230(0x0220)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PokemonGameRoundConfig
// 0x0040 (0x0048 - 0x0008)
struct FPokemonGameRoundConfig final : public FTableRowBase
{
public:
	class FName                                   GameId;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_347D[0x8];                                     // 0x0010(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	EPokemonGameRoundEnterRequire                 EnterCondition;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_347E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ValueToEnterCondition;                             // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NextRoundToDelay;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPokemonGameCharacterTeamPlace                TeamPlace;                                         // 0x002C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPokemonGameRoundStage                        RoundStage;                                        // 0x002D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPokemonGameRoundStage                        NextRoundStage;                                    // 0x002E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPokemonGameCharacterTeamPlace                NextRoundTeamPlace;                                // 0x002F(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPokemonGameRoundActionType                   ActionType;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_347F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPokemonGameRoundActionTurn>    ActionList;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMassTickTaskInstanceData
// 0x0004 (0x0004 - 0x0000)
struct FHTMassTickTaskInstanceData final
{
public:
	float                                         TickInterval;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassTrafficTrainLaneExtraFragment
// 0x000C (0x000C - 0x0000)
struct FMassTrafficTrainLaneExtraFragment final : public FMassFragment
{
public:
	int32                                         RouteIndex;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RequirePriorityPassDistance;                       // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GiveUpPriorityPassDistance;                        // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.JSRequirement_PlayerUnPossessed
// 0x0000 (0x0008 - 0x0008)
struct FJSRequirement_PlayerUnPossessed final : public FJumpSectionRequirementBase
{
};

// ScriptStruct HTGame.CharacterEquipFilterData
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FCharacterEquipFilterData final
{
public:
	uint8                                         Pad_3480[0x50];                                    // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraValueProviderCameraStateElapsedTime
// 0x0000 (0x0008 - 0x0008)
struct FHTCameraValueProviderCameraStateElapsedTime final : public FHTCameraValueProvider
{
};

// ScriptStruct HTGame.CacheCharAtkInfo
// 0x0038 (0x0160 - 0x0128)
struct FCacheCharAtkInfo final : public FPointDamageEvent
{
public:
	TWeakObjectPtr<class UHTGameplayAbility>      DamageAbility;                                     // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UHTGamePlayEffect>       DamageGEDef;                                       // 0x0130(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SectionName;                                       // 0x0138(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0140(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleDeformConfigData
// 0x01D8 (0x01E0 - 0x0008)
struct FVehicleDeformConfigData final : public FTableRowBase
{
public:
	TMap<EImpactPart, float>                      PartEnduranceMap;                                  // 0x0008(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         DamageCoefficient;                                 // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinAngleCoefficient;                               // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PartImpactMinInterval;                             // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BrokenRatioToDecreaseSpeed;                        // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSpeedLimitRate_Front;                           // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSpeedLimitRate_Side;                            // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSpeedLimitRate_Back;                            // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ThrottleLimitRate_Front;                           // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ThrottleLimitRate_Side;                            // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ThrottleLimitRate_Back;                            // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_BonnetRight;                           // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_BonnetMiddle;                          // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_BonnetLeft;                            // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_BodyFrontRight;                        // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_BodyFrontMiddle;                       // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_BodyFrontLeft;                         // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_BodyBackRight;                         // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_BodyBackMiddle;                        // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_BodyBackLeft;                          // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_LeftFrontDoor;                         // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_RightFrontDoor;                        // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_LeftBackDoor;                          // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorpherName_RightBackDoor;                         // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName_LeftFrontDoor;                            // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName_RightFrontDoor;                           // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName_LeftBackDoor;                             // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName_RightBackDoor;                            // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName_FrontBumper;                              // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName_BackBumper;                               // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName_Bonnet;                                   // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName_LeftFrontWheel;                           // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName_LeftBackWheel;                            // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName_RightFrontWheel;                          // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName_RightBackWheel;                           // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             BrokenMesh_LeftFrontDoor;                          // 0x0140(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             BrokenMesh_LeftBackDoor;                           // 0x0168(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             BrokenMesh_RightFrontDoor;                         // 0x0190(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             BrokenMesh_RightBackDoor;                          // 0x01B8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCmpCond
// 0x0008 (0x0008 - 0x0000)
struct FHTCmpCond final
{
public:
	EArithmeticKeyOperation                       OperationType;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3481[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CompareTarget;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointEvent
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FRedPointEvent
{
public:
	uint8                                         Pad_3482[0x10];                                    // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RedPointItemEvent
// 0x0008 (0x0018 - 0x0010)
struct FRedPointItemEvent final : public FRedPointEvent
{
public:
	uint8                                         Pad_3483[0x8];                                     // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CrowdCharacterDefinition
// 0x00D8 (0x00D8 - 0x0000)
struct FCrowdCharacterDefinition final
{
public:
	TSoftObjectPtr<class UAnimToTextureDataAsset> BaseAnimToTextureData;                             // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimToTextureDataAsset> HeadAnimToTextureData;                             // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimToTextureDataAsset> TopAnimToTextureData;                              // 0x0050(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimToTextureDataAsset> BottomAnimToTextureData;                           // 0x0078(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMassCrowdContextualAnimationDataAsset> ContextualAnimDataAsset;                           // 0x00A0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         HairColorIndex;                                    // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         TopClothingColorIndex;                             // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         BottomClothingColorIndex;                          // 0x00CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         SkinColorIndex;                                    // 0x00CB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScaleFactor;                                       // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RayTracingMinLOD;                                  // 0x00D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3484[0x4];                                     // 0x00D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.UpdateContent
// 0x0020 (0x0028 - 0x0008)
struct FUpdateContent final : public FTableRowBase
{
public:
	class FString                                 UpdateTitle;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UpdateContent;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UpdateData
// 0x0078 (0x0080 - 0x0008)
struct FUpdateData final : public FTableRowBase
{
public:
	class FString                                 Name;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ChannelTag;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceUpdate;                                      // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3485[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UpdateVersion;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UpdateUrl;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayBeginTime;                                  // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayEndedTime;                                  // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FUpdateContent>                 Contents;                                          // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StaminaCapitalResumeInfo
// 0x000C (0x000C - 0x0000)
struct FStaminaCapitalResumeInfo final
{
public:
	int32                                         MinTimes;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxTimes;                                          // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResumeCapitalNum;                                  // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StaminaBaseConfigData
// 0x0050 (0x0058 - 0x0008)
struct FStaminaBaseConfigData final : public FTableRowBase
{
public:
	int32                                         DefaultStaminaValue;                               // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AutoRecoveryInterval;                              // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AutoRecoveryValue;                                 // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StaminaMaxValue;                                   // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StaminaPotionID;                                   // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BakStaminaItemID;                                  // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PotionRecoveryValue;                               // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StaminaCapitalID;                                  // 0x002C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CapitalRecoveryValue;                              // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStaminaCapitalResumeInfo>      CapitalRecoveryInfos;                              // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   StaminaItemID;                                     // 0x0048(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CapitalRecoveryTimesInDay;                         // 0x0050(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BakStaminaMaxValue;                                // 0x0054(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraValueProviderConstant
// 0x0008 (0x0010 - 0x0008)
struct FHTCameraValueProviderConstant final : public FHTCameraValueProvider
{
public:
	float                                         ConstantValue;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3486[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.NewGuideCondition
// 0x000C (0x000C - 0x0000)
struct FNewGuideCondition final
{
public:
	EGuideConditionType                           ConditionType;                                     // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3487[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TriggerBoxTag;                                     // 0x0004(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RichTextBlockAction
// 0x0010 (0x0010 - 0x0000)
struct FRichTextBlockAction final
{
public:
	class FName                                   ImageID;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputAction*                           CurUIAction;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NewGuideStepData
// 0x0060 (0x0060 - 0x0000)
struct FNewGuideStepData final
{
public:
	class FName                                   WidgetID;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Desc;                                              // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2D                              DescPos;                                           // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Context;                                           // 0x0028(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                           GuideTriggerEvents;                                // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FRichTextBlockAction>           CurUIActions;                                      // 0x0048(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         GuardTime;                                         // 0x0058(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResponseTime;                                      // 0x005C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NewGuideInfo
// 0x0040 (0x0040 - 0x0000)
struct FNewGuideInfo final
{
public:
	bool                                          HasCondition;                                      // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3488[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNewGuideCondition                     NewGuideCondition;                                 // 0x0004(0x000C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           MutualExclusionGuideIDs;                           // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FNewGuideStepData>              GuideStepDatas;                                    // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                           TeachGuideIDs;                                     // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SceneDissolveData
// 0x0030 (0x0030 - 0x0000)
struct FSceneDissolveData final
{
public:
	int32                                         OldID;                                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewID;                                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DissolveType;                                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3489[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DissolveCenter;                                    // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DissolveDistance;                                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_348A[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SettingComboBoxLimitAreaData
// 0x0020 (0x0020 - 0x0000)
struct FSettingComboBoxLimitAreaData final
{
public:
	struct FVector2D                              LimitPosition;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              LimitSize;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UICameraSetting
// 0x0180 (0x0180 - 0x0000)
struct FUICameraSetting final
{
public:
	bool                                          bForceCloseAmend;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAmend;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_348B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraInterpolationSetting            TargetArmLengthSetting;                            // 0x0008(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            YawSetting;                                        // 0x0028(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            PitchSetting;                                      // 0x0048(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            TargetOffsetXSetting;                              // 0x0068(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            TargetOffsetYSetting;                              // 0x0088(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            TargetOffsetZSetting;                              // 0x00A8(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TMap<float, float>                            ShiftUpDistanceMap;                                // 0x00C8(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            SocketOffsetYSetting;                              // 0x0118(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            SocketOffsetZSetting;                              // 0x0138(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAmendCameraLag;                                   // 0x0158(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableCameraLag;                                  // 0x0159(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_348C[0x6];                                     // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraInterpolationSetting            CameraLagSpeed;                                    // 0x0160(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAbsorbAbilityData
// 0x0010 (0x0010 - 0x0000)
struct FHTAbsorbAbilityData final
{
public:
	float                                         FPassTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_348D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHTAbilityCharacter*                    AbsorbCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisualSpawnTimespan
// 0x000C (0x000C - 0x0000)
struct FVisualSpawnTimespan final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minute;                                            // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Second;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisualSpawnTimespanQuantum
// 0x0018 (0x0018 - 0x0000)
struct FVisualSpawnTimespanQuantum final
{
public:
	struct FVisualSpawnTimespan                   StartTime;                                         // 0x0000(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FVisualSpawnTimespan                   EndTime;                                           // 0x000C(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTSelfiePose
// 0x00E0 (0x00E0 - 0x0000)
struct FHTSelfiePose final
{
public:
	class FText                                   PoseName;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              PoseIcon;                                          // 0x0010(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MontageId;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            FemalePoseMontage;                                 // 0x0040(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            MalePoseMontage;                                   // 0x0068(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, TSoftObjectPtr<class UAnimMontage>> MimicryPoseMontage;                                // 0x0090(0x0050)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ForkGolbalBuffStruct
// 0x0018 (0x0018 - 0x0000)
struct FForkGolbalBuffStruct final
{
public:
	TArray<TSoftClassPtr<class UClass>>           ForkGlobalBuffs;                                   // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                         Level;                                             // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_348E[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CameraSettingInfo
// 0x0040 (0x0040 - 0x0000)
struct FCameraSettingInfo final
{
public:
	struct FVector                                CameraLocation;                                    // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               CameraRotator;                                     // 0x0018(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         MoveTimerInterval;                                 // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HiddenCharacter;                                   // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HiddenWeapon;                                      // 0x0035(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_348F[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FOV;                                               // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowBornNiagara;                                   // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3490[0x3];                                     // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VoiceMsgDetail
// 0x00F0 (0x00F8 - 0x0008)
struct FVoiceMsgDetail final : public FTableRowBase
{
public:
	class FText                                   Desc;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   SpeakerName;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           DialogSoundEvent;                                  // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsSelf;                                            // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3491[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EndByVoice;                                        // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedTyping;                                        // 0x005D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3492[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ClearNeedQuestID;                                  // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               MontageInfos;                                      // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       LockTargetInfo;                                    // 0x0078(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       VoiceInfo;                                         // 0x0088(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FRTPCConfig>                    RTPCConfigs;                                       // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<TSoftObjectPtr<class UAkAuxBus>, float>  AuxBus;                                            // 0x00A8(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DebugVoiceMsg
// 0x0100 (0x0100 - 0x0000)
struct FDebugVoiceMsg final
{
public:
	class FName                                   MsgId;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVoiceMsgDetail                        MsgDetail;                                         // 0x0008(0x00F8)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DelegateMissionRPCQuestInfo
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FDelegateMissionRPCQuestInfo final
{
public:
	uint8                                         Pad_3493[0x28];                                    // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GashaponPoolDataConfig
// 0x00D8 (0x00E0 - 0x0008)
struct FGashaponPoolDataConfig final : public FTableRowBase
{
public:
	class FText                                   PoolName;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              IconResource;                                      // 0x0018(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              PortraitIconResource;                              // 0x0040(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   SoftActorClass;                                    // 0x0068(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   PoolAreaName;                                      // 0x0090(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   DropID;                                            // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemQuality                                  MinItemQuality;                                    // 0x00A8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3494[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      PoolMat;                                           // 0x00B0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParaValue;                                         // 0x00D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3495[0x4];                                     // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GAEffectParam
// 0x0008 (0x0008 - 0x0000)
struct FGAEffectParam final
{
public:
	TSubclassOf<class UHTGameplayAbility>         GAClass;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.Bloom
// 0x0014 (0x0014 - 0x0000)
struct FBloom final
{
public:
	float                                         Intensity;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Threshold;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ToonShadingModelBloomThreshold;                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ToonShadingModelIntensityMultiplier;               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3496[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CharacterFormationData
// 0x0020 (0x0020 - 0x0000)
struct FCharacterFormationData final
{
public:
	class FString                                 FormationName;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           FormationItems;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SlotAnimation
// 0x0010 (0x0010 - 0x0000)
struct FSlotAnimation final
{
public:
	class FName                                   SlotName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      AnimSequenceBase;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SimpleNpcEditAnyWhereData
// 0x0040 (0x0040 - 0x0000)
struct FSimpleNpcEditAnyWhereData final
{
public:
	bool                                          bPlatformManager;                                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3497[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlatformShowWeights;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpawnResultsOperation                        RefreshConditionOperation;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3498[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UHTAIRefreshConditionBase>> RefreshConditionEntries;                           // 0x0010(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class USubNpcDataAsset*>               SubNpcDatas;                                       // 0x0020(0x0010)(Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	class FName                                   RefreshTag;                                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         CompressedSpecificSubNpcColorData;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SimpleNpcSaveInfo
// 0x0100 (0x0100 - 0x0000)
struct FSimpleNpcSaveInfo final
{
public:
	TSoftClassPtr<class UClass>                   SceneActorClass;                                   // 0x0000(0x0028)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3499[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0030(0x0060)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UDataLayerAsset*>                BelongedDatalayers;                                // 0x0090(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	EHTSpawnPlatform                              SpawnPlatformType;                                 // 0x00A0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_349A[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NpcIndex;                                          // 0x00A4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AHTSimpleSceneActor*                    SpawnedActor;                                      // 0x00A8(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_349B[0x8];                                     // 0x00B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSimpleNpcEditAnyWhereData             EditAnyWhereData;                                  // 0x00B8(0x0040)(NativeAccessSpecifierPublic)
	uint8                                         Pad_349C[0x8];                                     // 0x00F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.FootLandDistanceDT
// 0x0198 (0x01A0 - 0x0008)
struct FFootLandDistanceDT final : public FTableRowBase
{
public:
	uint8                                         Pad_349D[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FootLTransform;                                    // 0x0010(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             FootRTransform;                                    // 0x0070(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             FootLTransformW;                                   // 0x00D0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             FootRTransformW;                                   // 0x0130(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Speed;                                             // 0x0190(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Time;                                              // 0x0194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_349E[0x8];                                     // 0x0198(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MiniMapIconTransformInfo
// 0x0080 (0x0080 - 0x0000)
struct FMiniMapIconTransformInfo final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  WithActor;                                         // 0x0060(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class USceneComponent>         WithComponent;                                     // 0x0068(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_349F[0x8];                                     // 0x0070(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bLockRotation;                                     // 0x0078(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A0[0x7];                                     // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MiniMapIconInfo
// 0x0150 (0x0150 - 0x0000)
struct FMiniMapIconInfo final
{
public:
	class FName                                   MapIconID;                                         // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UniqueID;                                          // 0x0008(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Keywords;                                          // 0x0018(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FParameterWrapperArray> ExtendDatas;                                       // 0x0028(0x0050)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 BelongsLevelName;                                  // 0x0078(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUnderFog;                                       // 0x0088(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A1[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BelongsAreaID;                                     // 0x008C(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMiniMapIconState                             IconState;                                         // 0x0094(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A2[0xB];                                     // 0x0095(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMiniMapIconTransformInfo              TransformInfo;                                     // 0x00A0(0x0080)(BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FVector2D                              DrawRange;                                         // 0x0120(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<EMiniMapType>                          ShowTypes;                                         // 0x0130(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<EMiniMapShowMode>                      ShowModes;                                         // 0x0140(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraStateExecutionContext
// 0x0120 (0x0120 - 0x0000)
struct FHTCameraStateExecutionContext final
{
public:
	class AHTPlayerCameraManager*                 PlayerCameraManager;                               // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHTCameraStateInstance                 CurrentInstance;                                   // 0x0008(0x00F8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class AHTPlayerController*                    PlayerController;                                  // 0x0100(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AHTPlayerCharacter*                     PlayerCharacter;                                   // 0x0108(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        FrameDeltaTime;                                    // 0x0110(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ActualDeltaTime;                                   // 0x0118(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ShowMapIconWidgetData
// 0x0020 (0x0020 - 0x0000)
struct FShowMapIconWidgetData final
{
public:
	class FString                                 CurrentShowLevelName;                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMiniMapType                                  CurrentShowMiniMapType;                            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMiniMapShowMode                              CurrentShowMiniMapShowMode;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A3[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentMapScale;                                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHTUI_MiniMapWidget_Base*               MiniMapWidget;                                     // 0x0018(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FoliageInteractionVehicleTrailInfo
// 0x0090 (0x0090 - 0x0000)
struct FFoliageInteractionVehicleTrailInfo final
{
public:
	class USkeletalMeshComponent*                 VehicleMeshComponent;                              // 0x0000(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PreviousLocation;                                  // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               PreviousRotation;                                  // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Velocity;                                          // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Width;                                             // 0x0080(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Length;                                            // 0x0084(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Angle;                                             // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A4[0x4];                                     // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoreBrandNPCData
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FStoreBrandNPCData final
{
public:
	uint8                                         Pad_34A5[0x30];                                    // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AISpawnedState
// 0x0048 (0x0048 - 0x0000)
struct FAISpawnedState final
{
public:
	TSoftClassPtr<class UClass>                   AITemplate;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAISpawnedInfo>                 SpawnedAIInfos;                                    // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	float                                         DelayTimeElapsed;                                  // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A6[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpawnBeginTime;                                    // 0x0040(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AISpawnedWaveState
// 0x0028 (0x0028 - 0x0000)
struct FAISpawnedWaveState final
{
public:
	TArray<struct FAISpawnedState>                SpawnedStates;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	float                                         DelayTimeElapsed;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A7[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WaveBeginTime;                                     // 0x0018(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LastRandomState;                                   // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A8[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VehicleModule_SkeleBodyKit
// 0x0038 (0x0038 - 0x0000)
struct FVehicleModule_SkeleBodyKit final : public FVehicleModule_Base
{
public:
	struct FVehicleModulePropsData_SkeletalMeshComp KitMeshComponent;                                  // 0x0000(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   TargetSocket;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AzimuthIndicatorParam
// 0x0190 (0x0190 - 0x0000)
struct FAzimuthIndicatorParam final
{
public:
	struct FVector                                GoalLocation;                                      // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                NextStepLocation;                                  // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  GoalActor;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   GoalActorClass;                                    // 0x0038(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassEntityHandle                      GoalEntity;                                        // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PosOffset;                                         // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETrackIconType                                IndicatorIcon;                                     // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EObjectiveType                                QuestObjType;                                      // 0x0081(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAzimuthIndicatorType                         IndicatorType;                                     // 0x0082(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAzimuthTreasureBoxType                       TreasureBoxType;                                   // 0x0083(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoHideDistanceThreshold;                         // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoHideDistanceMax;                               // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A9[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MapName;                                           // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanRecoverShowAfterAutoHide;                      // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34AA[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        MultiLocationArray;                                // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        VehicleParkingArray;                               // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         NextParkingIndex;                                  // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34AB[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 MultiRangeArray;                                   // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<ETrackIconType>                        MultiLocationIconArray;                            // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bNeedTips;                                         // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFromMinimapTrack;                               // 0x00F1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34AC[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TrackQuestID;                                      // 0x00F4(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34AD[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CustomIcon;                                        // 0x0100(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              CustomQualityPhoto;                                // 0x0128(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              MonsterTrackIcon;                                  // 0x0150(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         MarkOwnerRoleid;                                   // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowDist;                                         // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowOutSideScreen;                                // 0x0181(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34AE[0xE];                                     // 0x0182(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraValueProviderCameraStateValue
// 0x0030 (0x0038 - 0x0008)
struct FHTCameraValueProviderCameraStateValue final : public FHTCameraValueProvider
{
public:
	TSoftClassPtr<class UClass>                   CameraStateClass;                                  // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTCameraPropertyType                         PropertyType;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34AF[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTSpawnQueueTickFunction
// 0x0008 (0x0038 - 0x0030)
struct FHTSpawnQueueTickFunction final : public FTickFunction
{
public:
	class UHTSpawnGlobalQueue*                    Target;                                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MidLookAt
// 0x0040 (0x0040 - 0x0000)
struct FMidLookAt final
{
public:
	struct FDlgLookAtConfig                       LookAtConfig;                                      // 0x0000(0x0038)(NoDestructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AHTAbilityCharacter>     Character;                                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTIconImageData
// 0x00A0 (0x00A0 - 0x0000)
struct FHTIconImageData final
{
public:
	TSoftObjectPtr<class UObject>                 NormalImage;                                       // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                 HoverImage;                                        // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                 CheckedImage;                                      // 0x0050(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                 CheckedHoverImage;                                 // 0x0078(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ListItemData
// 0x00C0 (0x00C0 - 0x0000)
struct FListItemData final
{
public:
	class FString                                 Keywords;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ShowName;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FHTIconImageData                       IconData;                                          // 0x0020(0x00A0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconRenderData_Base
// 0x0048 (0x0048 - 0x0000)
struct FMiniMapIconRenderData_Base
{
public:
	uint8                                         Pad_34B0[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Alignment;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Pivot;                                             // 0x0018(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RenderAngle;                                       // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34B1[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              IconDrawSize;                                      // 0x0030(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMiniMapIconSphere                            IconSphere;                                        // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34B2[0x7];                                     // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.FGamepadFeedbackEffectCurveParams
// 0x0028 (0x0028 - 0x0000)
struct FFGamepadFeedbackEffectCurveParams final
{
public:
	TSoftObjectPtr<class UCurveFloat>             FeedbackEffectCurvesFloat;                         // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GamepadFeedbackEffect
// 0x0068 (0x0070 - 0x0008)
struct FGamepadFeedbackEffect final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UForceFeedbackEffect>    ForceFeedbackEffectPtr;                            // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFGamepadFeedbackEffectCurveParams> FeedbackEffectCurvesFloat;                         // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   FeedbackEffectName;                                // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLooping;                                          // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34B3[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Tag;                                               // 0x004C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreTimeDilation;                               // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayWhilePaused;                                  // 0x0055(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34B4[0x12];                                    // 0x0056(0x0012)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   LoadedForceFeedbackEffect;                         // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCommonIdNumber
// 0x0010 (0x0018 - 0x0008)
struct FHTCommonIdNumber final : public FTableRowBase
{
public:
	class FName                                   ID;                                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Number;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHiddenAmount;                                     // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34B5[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AdventureManualDailyRewardsConfig
// 0x0018 (0x0020 - 0x0008)
struct FAdventureManualDailyRewardsConfig final : public FTableRowBase
{
public:
	int32                                         OrderId;                                           // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Activation;                                        // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHTCommonIdNumber>              RewardItems;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ShieldHealthData
// 0x0018 (0x0018 - 0x0000)
struct FShieldHealthData final
{
public:
	class FName                                   ShieldActorName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitShield;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OldShield;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurShield;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AdditionalShield;                                  // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.WorldLevelNotifyData
// 0x0028 (0x0028 - 0x0000)
struct FWorldLevelNotifyData final
{
public:
	int32                                         Index;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OldRoleLevelLimit;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RoleLevelLimit;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OldWorldLevel;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WorldLevel;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OldWorldLevelLimit;                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WorldLevelLimit;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestId;                                           // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFWorldLevelNotifyState                       NotifyState;                                       // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34B6[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.NoticeContentData
// 0x0058 (0x0058 - 0x0000)
struct FNoticeContentData final
{
public:
	ENoticeContentType                            ContentType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34B7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            ContentData;                                       // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NoticeSlotData
// 0x0070 (0x0078 - 0x0008)
struct FNoticeSlotData final : public FTableRowBase
{
public:
	int32                                         ID;                                                // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsHot;                                             // 0x000C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34B8[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NoticeIndex;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NoticeType;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NoticeTitle;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NoticeContent;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FNoticeContentData>             NoticeContentsData;                                // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                 NoticeSignature;                                   // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayBeginTime;                                  // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayEndedTime;                                  // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AsyncUpdateMaterialParamItemArr
// 0x0010 (0x0010 - 0x0000)
struct FAsyncUpdateMaterialParamItemArr final
{
public:
	TArray<struct FAsyncUpdateMaterialParamItem>  ItemArray;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UIPropMessageData
// 0x0010 (0x0010 - 0x0000)
struct FUIPropMessageData final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUIPropMessageType                            PropType;                                          // 0x000C(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUIPropMessageType                            OriginalPropType;                                  // 0x000D(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemQuality                                  ItemQuality;                                       // 0x000E(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceInsert;                                      // 0x000F(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CDData
// 0x0038 (0x0038 - 0x0000)
struct FCDData final
{
public:
	class FString                                 CDName;                                            // 0x0000(0x0010)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ActiveTime;                                        // 0x0010(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActiveGameTime;                                    // 0x0018(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CDTime;                                            // 0x001C(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PauseWhenOffline;                                  // 0x0020(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NotifyIfOffline;                                   // 0x0021(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34B9[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RemoveWhenOffline;                                 // 0x0024(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LoopCount;                                         // 0x0028(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34BA[0xC];                                     // 0x002C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTMassFindNavMeshPathTargetInstanceData
// 0x0050 (0x0050 - 0x0000)
struct FHTMassFindNavMeshPathTargetInstanceData final
{
public:
	struct FVector                                MoveTargetLocation;                                // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x0018(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ThreatenAnimBeginLocation;                         // 0x0030(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassEntityHandle                      TargetEntity;                                      // 0x0048(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTItemInfo
// 0x0010 (0x0010 - 0x0000)
struct FHTItemInfo final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Amount;                                            // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GashaponCycleItemInfo
// 0x000C (0x000C - 0x0000)
struct FGashaponCycleItemInfo final
{
public:
	class FName                                   CycleItemID;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Num;                                               // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GamePlayTagBreakRelationConfig
// 0x0018 (0x0020 - 0x0008)
struct FGamePlayTagBreakRelationConfig final : public FTableRowBase
{
public:
	struct FGameplayTag                           ActiveTag;                                         // 0x0008(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<EHTCharacterStateType>                 StateTypes;                                        // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAchievementConsumeTypeRow
// 0x0010 (0x01A0 - 0x0190)
struct FHTAchievementConsumeTypeRow final : public FHTAchievementEssentialFields
{
public:
	EHTAchievementConsumeType                     SubType;                                           // 0x0188(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34BB[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ItemID;                                            // 0x018C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ShopID;                                            // 0x0194(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemQuality                                  ItemQuality;                                       // 0x019C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemType                                     ItemType;                                          // 0x019D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34BC[0x2];                                     // 0x019E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AtmosphereRayleigh
// 0x0018 (0x0018 - 0x0000)
struct FAtmosphereRayleigh final
{
public:
	float                                         RayleighScatteringScale;                           // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           RayleighScattering;                                // 0x0004(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RayleighExponentialDistribution;                   // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ServerSpawnActorParams
// 0x0060 (0x0060 - 0x0000)
struct FServerSpawnActorParams final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTStateRelationConfig
// 0x0030 (0x0038 - 0x0008)
struct FHTStateRelationConfig final : public FTableRowBase
{
public:
	EHTCharacterStateType                         StateType;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTStateRelationType                          RelationArray[0x2D];                               // 0x0009(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34BD[0x2];                                     // 0x0036(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VisionReceiveAwardConditionData
// 0x0000 (0x0000 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x01) FVisionReceiveAwardConditionData
{
};
#pragma pack(pop)

// ScriptStruct HTGame.VisionReceiveAwardConditionData_CompleteVisionCount
// 0x0004 (0x0004 - 0x0000)
struct FVisionReceiveAwardConditionData_CompleteVisionCount final : public FVisionReceiveAwardConditionData
{
public:
	int32                                         CompleteVisionAmount;                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AbyssCloneMonsterConfig
// 0x0048 (0x0050 - 0x0008)
struct FAbyssCloneMonsterConfig final : public FTableRowBase
{
public:
	class FName                                   MonsterID;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   MonsterName;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         Level;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34BE[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              MonsterIcon;                                       // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AIFlock
// 0x0028 (0x0028 - 0x0000)
struct FAIFlock final
{
public:
	TArray<TWeakObjectPtr<class AHTAICharacter>>  Neighbors;                                         // 0x0000(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FVector                                FlockCenter;                                       // 0x0010(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ActivityLocalDataLayerStaticData
// 0x0048 (0x0050 - 0x0008)
struct FActivityLocalDataLayerStaticData final : public FTableRowBase
{
public:
	TArray<TSoftObjectPtr<class UDataLayerAsset>> DataLayerAssets;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          AutoActive;                                        // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34BF[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           AreaIds;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       ActiveCondition;                                   // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       UnLoadCondition;                                   // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTProgressStyle
// 0x0040 (0x0040 - 0x0000)
struct FHTProgressStyle final
{
public:
	bool                                          bUseForegroundTexture;                             // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34C0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ForegroundColor;                                   // 0x0004(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34C1[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ForegroundTexture;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseBackgroundTexture;                             // 0x0020(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34C2[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BackgroundColor;                                   // 0x0024(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34C3[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             BackgroundTexture;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ActivitySignInRecordData
// 0x0018 (0x0018 - 0x0000)
struct FActivitySignInRecordData final
{
public:
	int32                                         LoginCnt;                                          // 0x0000(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetFlag;                                           // 0x0004(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         EndTime;                                           // 0x0008(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsInit;                                           // 0x0010(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34C4[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RedPointConditionAddItem
// 0x0018 (0x0020 - 0x0008)
struct FRedPointConditionAddItem final : public FRedPointCondition
{
public:
	bool                                          ByItemTypes;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34C5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EItemType>                             ItemTypes;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassStreetLampUnitData
// 0x00F0 (0x00F0 - 0x0000)
struct FMassStreetLampUnitData final
{
public:
	bool                                          CastShadows;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34C6[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LightTransformOffset;                              // 0x0010(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightIntensity;                                    // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LightColor;                                        // 0x0074(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightAttenuationRadius;                            // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SourceLength;                                      // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SourceRadius;                                      // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SourceHeight;                                      // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SourceWidth;                                       // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               SourceTexture;                                     // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BarnDoorAngle;                                     // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BarnDoorLength;                                    // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SoftSourceRadius;                                  // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTemperature;                                   // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34C7[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temperature;                                       // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IndirectLightingIntensity;                         // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumetricScatteringIntensity;                     // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OuterConeAngle;                                    // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InterConeAngle;                                    // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELightUnits                                   IntensityUnits;                                    // 0x00C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34C8[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bUseInverseSquaredFalloff : 1;                     // 0x00C8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_34C9[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LightFalloffExponent;                              // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InverseExposureBlend;                              // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpecularScale;                                     // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShadowResolutionScale;                             // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShadowBias;                                        // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShadowSlopeBias;                                   // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTMassStreetLampLightComponet                LightComponetType;                                 // 0x00E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLightingChannels                      LightingChannels;                                  // 0x00E5(0x0001)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_34CA[0x2];                                     // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TranslucentDirectionalLightingIntensity;           // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34CB[0x4];                                     // 0x00EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MapTrackLimit
// 0x0004 (0x0004 - 0x0000)
struct FMapTrackLimit final
{
public:
	bool                                          bEnableCrossMapTrack;                              // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseNavPathEffect;                                 // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNoNavPathEffect;                             // 0x0002(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableTrackTeammate;                              // 0x0003(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LevelConfigData
// 0x00A0 (0x00A8 - 0x0008)
struct FLevelConfigData final : public FTableRowBase
{
public:
	ELevelSceneType                               SceneType;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34CC[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Title;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   StrategyText;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FMapTrackLimit                         TrackLimit;                                        // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bCanVines;                                         // 0x0044(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGuideNPCEnabled;                                  // 0x0045(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34CD[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       SingleExtensionData;                               // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSet<class FName>                             MapEntranceList;                                   // 0x0058(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.WidgetAnimationData
// 0x0010 (0x0010 - 0x0000)
struct FWidgetAnimationData final
{
public:
	class UWidgetAnimation*                       Anim;                                              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForward;                                          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34CE[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraDeltaTimeModifier_ActualDeltaTime
// 0x0000 (0x0008 - 0x0008)
struct FHTCameraDeltaTimeModifier_ActualDeltaTime final : public FHTCameraDeltaTimeModifier
{
};

// ScriptStruct HTGame.UIDOFSettings
// 0x0018 (0x0018 - 0x0000)
struct FUIDOFSettings final
{
public:
	bool                                          bEnableDOF;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34CF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NearTransitionRegion;                              // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FarTransitionRegion;                               // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DepthOfFieldScale;                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DepthOfFieldSensorWidth;                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FocalDistance;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CustomFootPrint
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FCustomFootPrint
{
public:
	uint8                                         Pad_34D0[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.FootGroundParticleWithTagsRequirement
// 0x0128 (0x0130 - 0x0008)
struct alignas(0x10) FFootGroundParticleWithTagsRequirement final : public FCustomFootPrint
{
public:
	struct FGameplayTagRequirements               TagRequirements;                                   // 0x0008(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          GroundParticle;                                    // 0x0090(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DrawDebug;                                         // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34D1[0x77];                                    // 0x00B9(0x0077)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraCondition_ElapsedTime
// 0x0010 (0x0018 - 0x0008)
struct FHTCameraCondition_ElapsedTime final : public FHTCameraCondition
{
public:
	struct FFloatRange                            ElapsedTimeRange;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ChapterNumImage
// 0x0080 (0x0080 - 0x0000)
struct FChapterNumImage final
{
public:
	int32                                         ChapterID;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34D2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              SelectImage;                                       // 0x0008(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              UnSelectImage;                                     // 0x0030(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              HoveredImage;                                      // 0x0058(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ImageState
// 0x0340 (0x0340 - 0x0000)
struct FImageState final
{
public:
	struct FSlateBrush                            UncheckedImage;                                    // 0x0000(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            UncheckedHoverImage;                               // 0x00D0(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            CheckedImage;                                      // 0x01A0(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                            CheckedHoverImage;                                 // 0x0270(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UIExtensionData
// 0x00B8 (0x00C0 - 0x0008)
struct FUIExtensionData final : public FTableRowBase
{
public:
	struct FGameplayTag                           Slot;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   UITemplet;                                         // 0x0010(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChangedExtensionOnInputTypeChanged;               // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34D3[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   UITemplate_Gamepad;                                // 0x0040(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   UITemplate_Mobile;                                 // 0x0068(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   UITemplate_PlayStation;                            // 0x0090(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AutoAdd;                                           // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34D4[0x7];                                     // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AimingTaskParams
// 0x0008 (0x0008 - 0x0000)
struct FAimingTaskParams final
{
public:
	uint8                                         bExitAimingWhileEndOrPauseTask : 1;                // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_34D5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayExitAimingTimeAfterFire;                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionActiveCondition_Base
// 0x0000 (0x0000 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x01) FVisionActiveCondition_Base
{
};
#pragma pack(pop)

// ScriptStruct HTGame.VisionActiveCondition_QuestComplete
// 0x000C (0x000C - 0x0000)
struct FVisionActiveCondition_QuestComplete final : public FVisionActiveCondition_Base
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CompleteDays;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StarTimeConfig
// 0x0008 (0x0008 - 0x0000)
struct FStarTimeConfig final
{
public:
	int32                                         LeftTime;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Star;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AbyssCloneLayerConfig
// 0x0038 (0x0038 - 0x0000)
struct FAbyssCloneLayerConfig final
{
public:
	EAbyssClonePassType                           ClonePassType;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34D6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStarTimeConfig>                StarTimeArray;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           MonsterArray;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   BossConfigID;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LifeTime;                                          // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34D7[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VisionShowMapIconLocationData_Base
// 0x0000 (0x0000 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x01) FVisionShowMapIconLocationData_Base
{
};
#pragma pack(pop)

// ScriptStruct HTGame.AbyssCloneLevelConfig
// 0x0048 (0x0050 - 0x0008)
struct FAbyssCloneLevelConfig final : public FTableRowBase
{
public:
	class FName                                   ActivityId;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LevelID;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MapName;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   LevelName;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   AwardDropID;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAbyssCloneLayerConfig>         LayerConfigArray;                                  // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          IsFirstLevel;                                      // 0x0048(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34D8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PlayerCharacterAbilities
// 0x0030 (0x0030 - 0x0000)
struct FPlayerCharacterAbilities final
{
public:
	TSoftClassPtr<class UClass>                   AbilityClass;                                      // 0x0000(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESkillInputIDType                             InputID;                                           // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34D9[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AbyssCloneItemConfig
// 0x0088 (0x0090 - 0x0008)
struct FAbyssCloneItemConfig final : public FTableRowBase
{
public:
	class FName                                   ItemID;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlayerCharacterAbilities              AbyssSkill;                                        // 0x0010(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ItemName;                                          // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ItemDesc;                                          // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0060(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SellPrice;                                         // 0x0088(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34DA[0x4];                                     // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VisionCategoryDisplayData
// 0x0048 (0x0048 - 0x0000)
struct FVisionCategoryDisplayData final
{
public:
	class FText                                   VisionName;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   VisionDesc;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   PropID;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   HouseCondition;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   AnnihilateCondition;                               // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionRecordSignData
// 0x0040 (0x0040 - 0x0000)
struct FVisionRecordSignData final
{
public:
	class FText                                   SignTitle;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Sign;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   OrganizationTitle;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Organization;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionRecordContentData
// 0x0020 (0x0020 - 0x0000)
struct FVisionRecordContentData final
{
public:
	class FText                                   Content;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FVisionRecordSignData>          SignData;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionCustomCommentData
// 0x0020 (0x0020 - 0x0000)
struct FVisionCustomCommentData final
{
public:
	class FText                                   PreviewText;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   DisplayText;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionCategoryData
// 0x0088 (0x0090 - 0x0008)
struct FVisionCategoryData final : public FTableRowBase
{
public:
	struct FVisionCategoryDisplayData             DisplayData;                                       // 0x0008(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       CompletedDisplayDataOverride;                      // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   RecordTitle;                                       // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FVisionRecordContentData>       RecordContents;                                    // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVisionCustomCommentData>       CustomComments;                                    // 0x0080(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAchievementCollectionTypeRow
// 0x0010 (0x01A0 - 0x0190)
struct FHTAchievementCollectionTypeRow final : public FHTAchievementEssentialFields
{
public:
	EHTAchievementCollectionType                  SubType;                                           // 0x0188(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34DB[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ItemID;                                            // 0x018C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemQuality                                  ItemQuality;                                       // 0x0194(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemType                                     ItemType;                                          // 0x0195(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34DC[0xA];                                     // 0x0196(0x000A)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTAchievementRewardItem
// 0x000C (0x000C - 0x0000)
struct FHTAchievementRewardItem final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemCount;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAchievementRewardItemRow
// 0x0018 (0x0020 - 0x0008)
struct FHTAchievementRewardItemRow final : public FTableRowBase
{
public:
	class FName                                   RewardId;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHTAchievementRewardItem>       RewardItems;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAchievementTypeData
// 0x00F8 (0x0100 - 0x0008)
struct FHTAchievementTypeData final : public FTableRowBase
{
public:
	class FName                                   TypeId;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RewardId;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34DD[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Icon;                                              // 0x0020(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x00F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterBreakthroughData
// 0x0030 (0x0038 - 0x0008)
struct FCharacterBreakthroughData final : public FTableRowBase
{
public:
	int32                                         MaxCharacterLevel;                                 // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NeedMaxWorldLevel;                                 // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NeedItems;                                         // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NeedGolds;                                         // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ModifyPackID;                                      // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTActivityToPsObjectIDData
// 0x0028 (0x0030 - 0x0008)
struct FHTActivityToPsObjectIDData final : public FTableRowBase
{
public:
	class FName                                   ObjectID;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SubObjectID;                                       // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestName;                                         // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UIClassName;                                       // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsShow;                                            // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34DE[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SecondFogData
// 0x000C (0x000C - 0x0000)
struct FSecondFogData final
{
public:
	float                                         FogDensity;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FogHeightFalloff;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FogHeightOffset;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HeightFogHT
// 0x0064 (0x0064 - 0x0000)
struct FHeightFogHT final
{
public:
	float                                         FogDensity;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FogHeightFalloff;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSecondFogData                         SecondFogData;                                     // 0x0008(0x000C)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	float                                         StartDistance;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FogCutoffDistance;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FogMaxOpacity;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           FogInscatteringColor;                              // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirectionalInscatteringExponent;                   // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           FogDirectionalInscatteringColor;                   // 0x0034(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           VolumetricFogEmissive;                             // 0x0044(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumetircFogExtinctionScale;                      // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumetircFogViewDistance;                         // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumetircFogStartDistance;                        // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableVolumetricFog;                               // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34DF[0x2];                                     // 0x0062(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PendingRecordAchievementParam
// 0x0018 (0x0018 - 0x0000)
struct FPendingRecordAchievementParam final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34E0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Timestamp;                                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAchievementGameplayTypeRow
// 0x0010 (0x01A0 - 0x0190)
struct FHTAchievementGameplayTypeRow final : public FHTAchievementEssentialFields
{
public:
	EHTAchievementGameplayType                    SubType;                                           // 0x0188(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECloneType                                    DungeonType;                                       // 0x0189(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EReactionResultType                           ReactionResultType;                                // 0x018A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESkillInputIDType                             SkillInputIDType;                                  // 0x018B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDamageReason                                 DeadReason;                                        // 0x018C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34E1[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   GameplayId;                                        // 0x0190(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34E2[0x8];                                     // 0x0198(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TimeSlice
// 0x000C (0x000C - 0x0000)
struct FTimeSlice final
{
public:
	ETimeSliceNameEnum                            TimeSliceName;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34E3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartTime;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTime;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAchievementKillTypeRow
// 0x0010 (0x01A0 - 0x0190)
struct FHTAchievementKillTypeRow final : public FHTAchievementEssentialFields
{
public:
	EHTAchievementKillType                        SubType;                                           // 0x0188(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34E4[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CharacterId;                                       // 0x018C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34E5[0xC];                                     // 0x0194(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTAchievementLevelTypeRow
// 0x0010 (0x01A0 - 0x0190)
struct FHTAchievementLevelTypeRow final : public FHTAchievementEssentialFields
{
public:
	EHTAchievementLevelType                       SubType;                                           // 0x0188(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemType                                     ItemType;                                          // 0x0189(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34E6[0x2];                                     // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x018C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34E7[0x4];                                     // 0x0190(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SubID;                                             // 0x0194(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34E8[0x4];                                     // 0x019C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTAchievementUnlockTypeRow
// 0x0010 (0x01A0 - 0x0190)
struct FHTAchievementUnlockTypeRow final : public FHTAchievementEssentialFields
{
public:
	EHTAchievementUnlockType                      SubType;                                           // 0x0188(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34E9[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   UnlockId;                                          // 0x018C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34EA[0xC];                                     // 0x0194(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PlayerLightData
// 0x0038 (0x0038 - 0x0000)
struct FPlayerLightData final
{
public:
	int32                                         TimeOfDay;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MainLightColor;                                    // 0x0004(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34EB[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   ColorInShadow;                                     // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                   DarkColors;                                        // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTPlayerLightData
// 0x0048 (0x0048 - 0x0000)
struct FHTPlayerLightData final
{
public:
	float                                         BlendWeight;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34EC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerLightData                       PlayerLightData;                                   // 0x0008(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          PlayerLightEnable;                                 // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34ED[0x7];                                     // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTMaterialSCalarParamData
// 0x000C (0x000C - 0x0000)
struct FHTMaterialSCalarParamData final
{
public:
	class FName                                   ScalarName;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EffectStrenth;                                     // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AnomaliesSequenceClueConfig
// 0x0010 (0x0010 - 0x0000)
struct FAnomaliesSequenceClueConfig final
{
public:
	int32                                         ClueStartFrame;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ClueEndFrame;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnomaliesSequenceClueState                   ClueStartState;                                    // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34EE[0x1];                                     // 0x0009(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bChangeMaxPlayingFrameNumberOnDeactivated;         // 0x000A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34EF[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxPlayingFrameNumber;                             // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkySphereHT
// 0x0070 (0x0070 - 0x0000)
struct FSkySphereHT final
{
public:
	struct FLinearColor                           SkyBaseColor;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SunDiskColor;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MoonLightInscatteringColor;                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MoonDiskColor;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveLinearColorAtlas*                 CurveLinearColorAtlas;                             // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveLinearColorAtlas*                 CurveLinearColorAtlasBlend;                        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34F0[0x4];                                     // 0x0050(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SunGrowColor;                                      // 0x0054(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunGrowScale;                                      // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34F1[0x7];                                     // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AnomaliesSequenceConfig
// 0x0048 (0x0050 - 0x0008)
struct FAnomaliesSequenceConfig final : public FTableRowBase
{
public:
	class FName                                   SequenceId;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ULevelSequence>          LevelSequencePtr;                                  // 0x0010(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxPlayingFrameNumberOnStart;                      // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34F2[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAnomaliesSequenceClueConfig>   AnomaliesSequenceClues;                            // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AutoNavCustomData
// 0x0018 (0x0018 - 0x0000)
struct FAutoNavCustomData final
{
public:
	EAutoNavType                                  CustomType;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34F3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomData;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NavPathEffectParam
// 0x0078 (0x0078 - 0x0000)
struct FNavPathEffectParam final
{
public:
	class FString                                 DestLevelName;                                     // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        VehicleParkingArray;                               // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         NextParkingIndex;                                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34F4[0x1C];                                    // 0x0024(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AActor>                  GoalActor;                                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   SoftGoalActorClass;                                // 0x0048(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34F5[0x8];                                     // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GoodsData
// 0x0058 (0x0060 - 0x0008)
struct FGoodsData final : public FTableRowBase
{
public:
	class FName                                   OwnerShopID;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ItemID;                                            // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ItemName;                                          // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         MixAmount;                                         // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxAmount;                                         // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LimitAmount;                                       // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EShopRefresh                                  RefreshType;                                       // 0x0034(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34F6[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurrencyID;                                        // 0x0038(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Price;                                             // 0x0040(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UnlockId;                                          // 0x0044(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          LockHide;                                          // 0x004C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SellOutHide;                                       // 0x004D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34F7[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       CityShopExtensionData;                             // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RangeTargetDataArray
// 0x0020 (0x0020 - 0x0000)
struct FRangeTargetDataArray final
{
public:
	TArray<struct FRangeTargetData>               RangeTargetArray;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 BaseMap;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TrackGoalParam
// 0x01F8 (0x01F8 - 0x0000)
struct FTrackGoalParam final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                GoalLocation;                                      // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   GoalActorClass;                                    // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  GoalActor;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassEntityHandle                      GoalEntity;                                        // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                NextStepLocation;                                  // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   CurBoxActorClass;                                  // 0x0078(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  CurBoxActor;                                       // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedTips;                                         // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePath;                                          // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFromMinimapTrack;                               // 0x00AA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34F8[0x5];                                     // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UIParamsString;                                    // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableTrackMaxTime;                               // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFollowActor;                                      // 0x00C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34F9[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAutoNavCustomData                     AutoNavCustomData;                                 // 0x00C8(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bNeedCrossBox;                                     // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34FA[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                IndicatorLocationOffset;                           // 0x00E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETrackIconType                                IndicatorIcon;                                     // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EObjectiveType                                QuestObjType;                                      // 0x0101(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34FB[0x6];                                     // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        IndicatorMultiLocationArray;                       // 0x0108(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<ETrackIconType>                        IndicatorMultiLocationIconArray;                   // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRangeTargetData>               IndicatorMultiRangeLocationArray;                  // 0x0128(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIndicatorNeedClear;                               // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAzimuthIndicatorType                         IndicatorType;                                     // 0x0139(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAzimuthTreasureBoxType                       TreasureBoxType;                                   // 0x013A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34FC[0x1];                                     // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IndicatorAutoHideDistanceThreshold;                // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IndicatorAutoHideDistanceMax;                      // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TrackQuestID;                                      // 0x0144(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PathID;                                            // 0x014C(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34FD[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CustomIcon;                                        // 0x0158(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              CustomQualityPhoto;                                // 0x0180(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              MonsterTrackIcon;                                  // 0x01A8(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         MarkOwnerRoleid;                                   // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        VehicleParkingArray;                               // 0x01D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bNeedPassParking;                                  // 0x01E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowDist;                                         // 0x01E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowOutSideScreen;                                // 0x01EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34FE[0xD];                                     // 0x01EB(0x000D)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GuangLingXiangReactionExpendOneData
// 0x0008 (0x0020 - 0x0018)
struct FGuangLingXiangReactionExpendOneData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            SourceGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SettingOptionVolumnDataRow
// 0x0008 (0x0010 - 0x0008)
struct FSettingOptionVolumnDataRow final : public FTableRowBase
{
public:
	class FName                                   RTPC;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UsePathData
// 0x00D8 (0x00E0 - 0x0008)
struct FUsePathData final : public FTableRowBase
{
public:
	bool                                          bShowUI;                                           // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFindPath;                                         // 0x0009(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowMap;                                          // 0x000A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34FF[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GotoFormPath;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ActorLocation;                                     // 0x0020(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MapName;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FVector>           WorldLocationMap;                                  // 0x0048(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   ConfigID;                                          // 0x0098(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UnlockFuncID;                                      // 0x00A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   UnlockText;                                        // 0x00A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   PathName;                                          // 0x00B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   PathDesc;                                          // 0x00C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   TransferLevelName;                                 // 0x00D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AnHunReactionConfigData
// 0x0010 (0x0010 - 0x0000)
struct FAnHunReactionConfigData final
{
public:
	TSubclassOf<class UGameplayEffect>            SourceGEClass;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AnHunReactionExpendFourData
// 0x0010 (0x0028 - 0x0018)
struct FAnHunReactionExpendFourData final : public FReactinData
{
public:
	struct FAnHunReactionConfigData               AnHunReactionData;                                 // 0x0018(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EquipmentGeometryIcon
// 0x00F0 (0x00F0 - 0x0000)
struct FEquipmentGeometryIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              GreenIcon;                                         // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              WhiteIcon;                                         // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              TipsWhiteIcon;                                     // 0x0050(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EItemQuality, class FName>               EquipmentQulityIconMap;                            // 0x0078(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          InlayParticle;                                     // 0x00C8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MontageInfo
// 0x0010 (0x0010 - 0x0000)
struct FMontageInfo final
{
public:
	class FName                                   MontageId;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SectionName;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterPlayMontageInfo
// 0x0018 (0x0018 - 0x0000)
struct FCharacterPlayMontageInfo final
{
public:
	class FName                                   CharacterId;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMontageInfo                           MotageInfo;                                        // 0x0008(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterPassByAudioEvent
// 0x0050 (0x0058 - 0x0008)
struct FCharacterPassByAudioEvent final : public FTableRowBase
{
public:
	TSoftClassPtr<class UClass>                   NPCClass;                                          // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           AudioEvent;                                        // 0x0030(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterFileCondition
// 0x0010 (0x0010 - 0x0000)
struct FCharacterFileCondition final
{
public:
	int32                                         Firendly;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestId;                                           // 0x0004(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterFileBreakLevel;                           // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ForkRichTextImageMatchData
// 0x0020 (0x0020 - 0x0000)
struct FForkRichTextImageMatchData final
{
public:
	class FText                                   ActivatedContent;                                  // 0x0000(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FText                                   DeactivatedContent;                                // 0x0010(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ForkTypeData
// 0x0068 (0x0070 - 0x0008)
struct FForkTypeData final : public FTableRowBase
{
public:
	class FText                                   TypeName;                                          // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              TypeIcon;                                          // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Desc;                                              // 0x0040(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FForkRichTextImageMatchData            RTIMatchData;                                      // 0x0050(0x0020)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GameFeaturePlayerStateEntry
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FGameFeaturePlayerStateEntry
{
public:
	uint8                                         Pad_3500[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CharacterFileStruct
// 0x0060 (0x0060 - 0x0000)
struct FCharacterFileStruct final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Content;                                           // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           AudioEvent;                                        // 0x0028(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterFileCondition>        Conditions;                                        // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CVNameStruct
// 0x0018 (0x0018 - 0x0000)
struct FCVNameStruct final
{
public:
	EAudioCultureType                             AudioType;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3501[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CVName;                                            // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterFileData
// 0x0090 (0x0098 - 0x0008)
struct FCharacterFileData final : public FTableRowBase
{
public:
	TArray<struct FCVNameStruct>                  CVNameArr;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Birthday;                                          // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   HomePlace;                                         // 0x0028(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   AbilityName;                                       // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Introduction;                                      // 0x0048(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCharacterFileStruct>           DetailContent;                                     // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCharacterFileStruct>           DailyContent;                                      // 0x0068(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCharacterFileStruct>           BattleContent;                                     // 0x0078(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCharacterPassByAudioEvent>     CharacterPassByAudioEvents;                        // 0x0088(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AnHunZhouReactionExpendTwoData
// 0x0008 (0x0020 - 0x0018)
struct FAnHunZhouReactionExpendTwoData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoryDataBase
// 0x00E0 (0x00E0 - 0x0000)
struct FStoryDataBase
{
public:
	struct FMovieSceneSequencePlaybackSettings    Settings;                                          // 0x0000(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3502[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHTSequencePlaybackSettings            GameplaySettings;                                  // 0x0030(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuangLingXiangReactionExpendTwoData
// 0x0008 (0x0020 - 0x0018)
struct FGuangLingXiangReactionExpendTwoData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            SourceGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CameraAnimationSequenceData
// 0x0028 (0x0030 - 0x0008)
struct FCameraAnimationSequenceData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UCameraAnimationSequence> Sequence;                                          // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EquipmentLotteryStruct
// 0x0008 (0x0008 - 0x0000)
struct FEquipmentLotteryStruct final
{
public:
	EEquipmentGeometryType                        GeometryType;                                      // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3503[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterMontageStruct
// 0x0010 (0x0010 - 0x0000)
struct FCharacterMontageStruct final
{
public:
	class UAnimMontage*                           DealyPlayAnimMontageAsset;                         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CharacterId;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionKillCondition
// 0x0008 (0x0008 - 0x0000)
struct FVisionKillCondition final : public FVisionConditionBase
{
public:
	class FName                                   MonsterTag;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EquipmentLotteryBlueData
// 0x0008 (0x0010 - 0x0008)
struct FEquipmentLotteryBlueData final : public FTableRowBase
{
public:
	EEquipmentGeometryType                        GeometryType;                                      // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3504[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Weight;                                            // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FightPropLimitParam
// 0x0008 (0x0010 - 0x0008)
struct FFightPropLimitParam final : public FTableRowBase
{
public:
	float                                         LimitMin;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LimitMax;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TractionSpeedFormulaConfigParams
// 0x0028 (0x0030 - 0x0008)
struct FTractionSpeedFormulaConfigParams final : public FTableRowBase
{
public:
	float                                         OuterRadius;                                       // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InnerRadius;                                       // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceAttenuationCoeff;                          // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Strength;                                          // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSpeed;                                          // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFightPropLimitParam                   MassRange;                                         // 0x0020(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TractionSpeedFormulaGlobalParams
// 0x0010 (0x0010 - 0x0000)
struct FTractionSpeedFormulaGlobalParams final
{
public:
	float                                         K1;                                                // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K2;                                                // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K3;                                                // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K4;                                                // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TractionSpeedCalculator
// 0x0048 (0x0048 - 0x0000)
struct FTractionSpeedCalculator final
{
public:
	struct FTractionSpeedFormulaConfigParams      ConfigParams;                                      // 0x0000(0x0030)(NativeAccessSpecifierPublic)
	struct FTractionSpeedFormulaGlobalParams      GlobalParams;                                      // 0x0030(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
	float                                         TractionVelocityInterpSpeed;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInit;                                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3505[0x3];                                     // 0x0045(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DeformableBoneInfo
// 0x001C (0x001C - 0x0000)
struct FDeformableBoneInfo final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MorphTargetName;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDurability;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIndestructible;                                   // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3506[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurDurability;                                     // 0x0018(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ReactionExtendData
// 0x0030 (0x0038 - 0x0008)
struct FReactionExtendData final : public FTableRowBase
{
public:
	class FText                                   Name;                                              // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               ReactionDataArray;                                 // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Desc;                                              // 0x0028(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionMaskImageRenderData
// 0x0020 (0x0020 - 0x0000)
struct FVisionMaskImageRenderData final
{
public:
	struct FFloatRange                            WertheimerValueRange;                              // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       VisionImageRenderData;                             // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CitySampleMassContextualAnimTaskInstanceData
// 0x0018 (0x0018 - 0x0000)
struct FCitySampleMassContextualAnimTaskInstanceData final
{
public:
	struct FMassEntityHandle                      TargetEntity;                                      // 0x0000(0x0008)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ComputedDuration;                                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Time;                                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3507[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CitySampleMassContextualAnimTask
// 0x0028 (0x0050 - 0x0028)
struct FCitySampleMassContextualAnimTask final : public FMassStateTreeTaskBase
{
public:
	uint8                                         Pad_3508[0x20];                                    // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ContextualAnimName;                                // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct HTGame.AirFightHandData
// 0x0030 (0x0030 - 0x0000)
struct FAirFightHandData final
{
public:
	float                                         ExeTime;                                           // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CharacterId;                                       // 0x0004(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DamageGEID;                                        // 0x000C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GELevel;                                           // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AddGEID;                                           // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAirRelationType                              AddRelationType;                                   // 0x0020(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3509[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RemoveGEID;                                        // 0x0024(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAirRelationType                              RemoveRelationType;                                // 0x002C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_350A[0x3];                                     // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VisionAward
// 0x0008 (0x0008 - 0x0000)
struct FVisionAward final
{
public:
	class FName                                   DropID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ComboBoxSectionData
// 0x00B8 (0x00B8 - 0x0000)
struct FComboBoxSectionData final
{
public:
	class FName                                   SectionID;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ShowText;                                          // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FHTIconImageData                       IconImageData;                                     // 0x0018(0x00A0)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PhyMatHitEffectDecalParam
// 0x0048 (0x0048 - 0x0000)
struct FPhyMatHitEffectDecalParam final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      DecalMaterial;                                     // 0x0000(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                DecalSize;                                         // 0x0028(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LifeSpan;                                          // 0x0040(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_350B[0x4];                                     // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ComboBoxOptionData
// 0x0038 (0x0040 - 0x0008)
struct FComboBoxOptionData final : public FTableRowBase
{
public:
	class FText                                   OptionName;                                        // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              IconTexture;                                       // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CosmosNatureExtendDatas
// 0x0028 (0x0028 - 0x0000)
struct FCosmosNatureExtendDatas final
{
public:
	float                                         AdditionalDamageRange;                             // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_350C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            NewDamageGE;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AdditionalManagerCanExistNum;                      // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AdditionalFireCount;                               // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AdditionalSpiltCount;                              // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AdditionalBulletCount;                             // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FixFireCountDown;                                  // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldSpawnAttractionActor;                       // 0x0024(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_350D[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CrowdVisualizationDefinition
// 0x0010 (0x0010 - 0x0000)
struct FCrowdVisualizationDefinition final
{
public:
	class UAnimToTextureDataAsset*                AnimToTextureData;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ColorTag;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CrowdCharacterOptions
// 0x0008 (0x0008 - 0x0000)
struct FCrowdCharacterOptions final
{
public:
	uint8                                         HeadIndex;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         TopBodyIndex;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         BottomBodyIndex;                                   // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         HairColorIndex;                                    // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         TopClothingColorIndex;                             // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         BottomClothingColorIndex;                          // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         SkinColorIndex;                                    // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ScaleFactorIndex;                                  // 0x0007(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityStoryChatChapterInfo
// 0x0010 (0x0010 - 0x0000)
struct FLikeabilityStoryChatChapterInfo final
{
public:
	class FName                                   StartChatID;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EndChatID;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CrowdVisualizationID
// 0x0008 (0x0008 - 0x0000)
struct FCrowdVisualizationID final
{
public:
	int64                                         PackedData;                                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CrowdCharacterMassContextualAnimTask
// 0x0028 (0x0050 - 0x0028)
struct FCrowdCharacterMassContextualAnimTask final : public FMassStateTreeTaskBase
{
public:
	uint8                                         Pad_350E[0x20];                                    // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ContextualAnimName;                                // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct HTGame.CitySampleCrowdVisualizationFragment
// 0x0020 (0x0020 - 0x0000)
struct FCitySampleCrowdVisualizationFragment final : public FMassFragment
{
public:
	struct FCrowdVisualizationID                  VisualizationID;                                   // 0x0000(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         HairColorIndex;                                    // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TopClothingColorIndex;                             // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BottomClothingColorIndex;                          // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SkinColorIndex;                                    // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScaleFactor;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_350F[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.Var
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FVar final
{
public:
	uint8                                         Pad_3510[0x10];                                    // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CustomData
// 0x0018 (0x0018 - 0x0000)
struct FCustomData final
{
public:
	struct FVar                                   M_Data;                                            // 0x0000(0x0010)(SaveGame, NativeAccessSpecifierPrivate)
	class FName                                   M_Name;                                            // 0x0010(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct HTGame.AudioEventWithDelay
// 0x0058 (0x0058 - 0x0000)
struct FAudioEventWithDelay final
{
public:
	TSoftObjectPtr<class UAkAudioEvent>           AudioPlayEvent;                                    // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           AudioEndEvent;                                     // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                           SavedAkComponent;                                  // 0x0050(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DelegateMissionRPCQuestReport
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FDelegateMissionRPCQuestReport final
{
public:
	uint8                                         Pad_3511[0x18];                                    // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DelegateMissionRPCRoleQuestData
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FDelegateMissionRPCRoleQuestData final
{
public:
	uint8                                         Pad_3512[0x10];                                    // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTGuideStepDataBase
// 0x0050 (0x0050 - 0x0000)
struct FHTGuideStepDataBase
{
public:
	class FName                                   WidgetID;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Desc;                                              // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Context;                                           // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FRichTextBlockAction>           CurUIActions;                                      // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                           GuideTriggerEvents;                                // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         GuardTime;                                         // 0x0048(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3513[0x4];                                     // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ForceGuideStepData
// 0x0008 (0x0058 - 0x0050)
struct FForceGuideStepData final : public FHTGuideStepDataBase
{
public:
	bool                                          bGuard;                                            // 0x0050(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3514[0x7];                                     // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DelegateMissionRoleTendencyData
// 0x0020 (0x0028 - 0x0008)
struct FDelegateMissionRoleTendencyData final : public FTableRowBase
{
public:
	class FName                                   RoleId;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                   RoleTags;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bCannotDispatch;                                   // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3515[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DelegateMissionQuestData
// 0x00C8 (0x00D0 - 0x0008)
struct FDelegateMissionQuestData final : public FTableRowBase
{
public:
	class FName                                   MissionID;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CityID;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   MissionName;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              MissionImage;                                      // 0x0028(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              MissionBGImage;                                    // 0x0050(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                   MissionTags;                                       // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                   MissionDesc;                                       // 0x0088(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         MissionTimes;                                      // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BaseAward;                                         // 0x009C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ExtraAward;                                        // 0x00A4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AwardMailID;                                       // 0x00AC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ShowAward;                                         // 0x00B4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RequestRoleCnt;                                    // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Mandator;                                          // 0x00C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TimerClock
// 0x0030 (0x0030 - 0x0000)
struct FTimerClock final
{
public:
	class FString                                 TimerName;                                         // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              FromTime;                                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              TargetTime;                                        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              NearlyTime;                                        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3516[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LocalDataLayerStaticData
// 0x0028 (0x0030 - 0x0008)
struct FLocalDataLayerStaticData final : public FTableRowBase
{
public:
	class FName                                   BeginQuest;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EndQuest;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UDataLayerAsset>> DataLayerAssets;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bOnlyLoad;                                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyInVisibleActors;                              // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3517[0x6];                                     // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DelegateMissionCityData
// 0x0048 (0x0050 - 0x0008)
struct FDelegateMissionCityData final : public FTableRowBase
{
public:
	class FText                                   CityName;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              CityBg;                                            // 0x0018(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 PreinstallPointIndexArray;                         // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleSeat
// 0x0030 (0x0030 - 0x0000)
struct FVehicleSeat final
{
public:
	class FName                                   SeatSocket;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GetOnStartSocket;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GetOnEndSocket;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AHTPlayerCharacter*                     Passanger;                                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OwnerVehicle;                                      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAvailable;                                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3518[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DrumPointSaveData
// 0x0014 (0x0014 - 0x0000)
struct FDrumPointSaveData final
{
public:
	EDrumPointType                                PointType;                                         // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDrumEventType                                EventType;                                         // 0x0001(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDrumSlotType                                 DrumSlot;                                          // 0x0002(0x0001)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3519[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BeatIndex;                                         // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeatPercent;                                       // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeginTotalPercent;                                 // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTotalPercent;                                   // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionListData
// 0x0008 (0x0008 - 0x0000)
struct FVisionListData final
{
public:
	class FName                                   VisionID;                                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DrumSongSaveData
// 0x0028 (0x0028 - 0x0000)
struct FDrumSongSaveData final
{
public:
	class FName                                   SongID;                                            // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlaybackSpeed;                                     // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CountOfBeat;                                       // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OffsetOneOfSixteenBeat;                            // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LevelType;                                         // 0x0014(0x0004)(BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDrumPointSaveData>             PointArray;                                        // 0x0018(0x0010)(BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OfferPropNetData
// 0x0018 (0x0018 - 0x0000)
struct FOfferPropNetData final
{
public:
	class FName                                   PropID;                                            // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PropAmount;                                        // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PropDemand;                                        // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SlotIndex;                                         // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPropState                                    PropState;                                         // 0x0014(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351A[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DrumLevelData_Highest
// 0x0000 (0x0050 - 0x0050)
struct FDrumLevelData_Highest final : public FDrumLevelData_Base
{
};

// ScriptStruct HTGame.FootPrintShoe
// 0x00B8 (0x00C0 - 0x0008)
struct FFootPrintShoe final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              LeftFootPrintMask;                                 // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              LeftFootPrintNormal;                               // 0x0030(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              RightFootPrintMask;                                // 0x0058(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              RightFootPrintNormal;                              // 0x0080(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                FootPrintSize;                                     // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DrumSongListInfo
// 0x0118 (0x0118 - 0x0000)
struct FDrumSongListInfo final
{
public:
	class FName                                   SongID;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CollectNum;                                        // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FavoritNum;                                        // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         UpdateTime;                                        // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHTUserCache                           UserCache;                                         // 0x0018(0x0100)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.IntersectionLink
// 0x0008 (0x0008 - 0x0000)
struct FIntersectionLink final
{
public:
	int32                                         DestIndex;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Dist;                                              // 0x0004(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AISkillCoordinatedBase
// 0x0030 (0x0030 - 0x0000)
struct FAISkillCoordinatedBase final
{
public:
	TSoftClassPtr<class UClass>                   AbilityClass;                                      // 0x0000(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AISkillWeight;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351B[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.OfferResultMap
// 0x0018 (0x0018 - 0x0000)
struct FOfferResultMap final
{
public:
	TArray<struct FOfferInfoSet>                  InfoSets;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         Effect;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351C[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DrumSongData
// 0x00C0 (0x00C8 - 0x0008)
struct FDrumSongData final : public FTableRowBase
{
public:
	class FName                                   SongID;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BPM;                                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OffsetOneOfSixteenBeat;                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTime;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeatDistance;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MusicId;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0038(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              MedalIcon;                                         // 0x0060(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDrumSongActiveParam>           Requires;                                          // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFloatRange                            SpecialTimespan;                                   // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScoreTimes;                                        // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351D[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInstancedStruct>               LevelInfos;                                        // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_351E[0x8];                                     // 0x00C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DrumPointClassMap
// 0x0050 (0x0050 - 0x0000)
struct FDrumPointClassMap final
{
public:
	TMap<EDrumEventType, TSubclassOf<class UHTUserWidget>> PointClassMap;                                     // 0x0000(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTDynamicMontageParams
// 0x0020 (0x0020 - 0x0000)
struct FHTDynamicMontageParams final
{
public:
	class UAnimSequenceBase*                      AnimSequence;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendInTime;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendOutTime;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartTime;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RetriggerDelay;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351F[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PersistentActorData
// 0x00A0 (0x00A0 - 0x0000)
struct FPersistentActorData final
{
public:
	struct FSoftObjectPath                        ActorClass;                                        // 0x0000(0x0020)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ActorName;                                         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             Transform;                                         // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  PersistentGuid;                                    // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ArtDirection
// 0x0020 (0x0020 - 0x0000)
struct FArtDirection final
{
public:
	struct FLinearColor                           SkyLuminanceFactor;                                // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AerialPespectiveViewDistanceScale;                 // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeightFogContribution;                             // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TransmittanceMinLightElevationAngle;               // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AerialPerspectiveStartDepth;                       // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LightEffectBlend
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x04) FLightEffectBlend final
{
public:
	uint8                                         Pad_3520[0x58];                                    // 0x0000(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestId
// 0x0010 (0x0010 - 0x0000)
struct FQuestId final
{
public:
	class FName                                   BeginQuestID;                                      // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EndQuestID;                                        // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.WeatherLightOnOff
// 0x0010 (0x0010 - 0x0000)
struct FWeatherLightOnOff final
{
public:
	class UHottaPrimaryDataAsset*                 Weather;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartTime;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTime;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SunLight
// 0x0034 (0x0034 - 0x0000)
struct FSunLight final
{
public:
	float                                         LightDensity;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LightColor;                                        // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunAngle;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunInclination;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunVerticalOffset;                                 // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunRadius;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunSoftness;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunVolumetricScatteringIntensity;                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExtendDawnandDusk;                                 // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunDiskIntensity;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FogColor
// 0x0058 (0x0058 - 0x0000)
struct FFogColor final
{
public:
	float                                         FogColorIntensityScale;                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           FogInscatteringSun;                                // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           FogInscatteringMoon;                               // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           FogDirectionalInscattering;                        // 0x0024(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FoggyDesaturation;                                 // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OvercastDesaturation;                              // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OvercastBrightnessDay;                             // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OvercastBrightnessNight;                           // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           AllFogColorsMultiplier;                            // 0x0044(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseVolumetricFog;                                  // 0x0054(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3521[0x3];                                     // 0x0055(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SkyAtmosphereVolume
// 0x0064 (0x0064 - 0x0000)
struct FSkyAtmosphereVolume final
{
public:
	bool                                          ControlSkyAtmosphereSettings;                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3522[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RayleighScatteringColorDay;                        // 0x0004(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           RayleighScatteringColorDawnDusk;                   // 0x0014(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           RayleighScatteringColorNight;                      // 0x0024(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesaturateRayleighScatteringwhenCloudy;            // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BrightenRayleighScatteringWhenCloudy;              // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SunsetSunriseColorAbsorption;                      // 0x003C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunsetSunriseColorIntensityAbsorptionScale;        // 0x004C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TwilightColorAbsorption;                           // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TwilightColorIntensityAbsorptionScale;             // 0x0060(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BasicControls
// 0x001C (0x001C - 0x0000)
struct FBasicControls final
{
public:
	float                                         TimeOfDay;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CloudCoverage;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Fog;                                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverallIntensity;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Contrast;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Saturation;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirectionalBalance;                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AKEventWeightRow
// 0x0028 (0x0030 - 0x0008)
struct FAKEventWeightRow final : public FTableRowBase
{
public:
	class FString                                 ContainsString;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EventWeight;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3523[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Comments;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkyLightParam
// 0x0040 (0x0040 - 0x0000)
struct FSkyLightParam final
{
public:
	float                                         SkyLightIntensity;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SkyLightTemperature;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SkyLightColorMultiplierDay;                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SkyLightColorMultiplierDawnDusk;                   // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SkyLightColorMultiplierNight;                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DFAOMinOcclusion;                                  // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DFAOExponent;                                      // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AtmosphereMie
// 0x0030 (0x0030 - 0x0000)
struct FAtmosphereMie final
{
public:
	float                                         MieScatteringScale;                                // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MieScattering;                                     // 0x0004(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MieAbsorptionScale;                                // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MieAbsorption;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MieAnisotropy;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MieExponentialDistribution;                        // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AtmosphereAbsorption
// 0x0020 (0x0020 - 0x0000)
struct FAtmosphereAbsorption final
{
public:
	float                                         OtherAbsorptionScale;                              // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           OtherAbsorption;                                   // 0x0004(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTentDistribution                      OtherTentDistribution;                             // 0x0014(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkyAtomsphere
// 0x008C (0x008C - 0x0000)
struct FSkyAtomsphere final
{
public:
	struct FAtmosphereRayleigh                    AtmosphereRayleigh;                                // 0x0000(0x0018)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	struct FAtmosphereMie                         AtmosphereMie;                                     // 0x0018(0x0030)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	struct FAtmosphereAbsorption                  AtmosphereAbsorption;                              // 0x0048(0x0020)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	struct FArtDirection                          ArtDirection;                                      // 0x0068(0x0020)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3524[0x3];                                     // 0x0089(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.Shadows
// 0x00A0 (0x00A0 - 0x0000)
struct FShadows final
{
public:
	struct FVector4                               ColorSaturationShadows;                            // 0x0000(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorContrastShadows;                              // 0x0020(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorGammaShadows;                                 // 0x0040(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorGainShadows;                                  // 0x0060(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorOffsetShadows;                                // 0x0080(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ToonShadows
// 0x00A0 (0x00A0 - 0x0000)
struct FToonShadows final
{
public:
	struct FVector4                               ColorSaturationToonShadows;                        // 0x0000(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorContrastToonShadows;                          // 0x0020(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorGammaToonShadows;                             // 0x0040(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorGainToonShadows;                              // 0x0060(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorOffsetToonShadows;                            // 0x0080(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.Highlights
// 0x00A0 (0x00A0 - 0x0000)
struct FHighlights final
{
public:
	struct FVector4                               ColorSaturationHighlights;                         // 0x0000(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorContrastHighlights;                           // 0x0020(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorGammaHighlights;                              // 0x0040(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorGainHighlights;                               // 0x0060(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorOffsetHighlights;                             // 0x0080(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.Midtones
// 0x00A0 (0x00A0 - 0x0000)
struct FMidtones final
{
public:
	struct FVector4                               ColorSaturationMidtones;                           // 0x0000(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorContrastMidtones;                             // 0x0020(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorGammaMidtones;                                // 0x0040(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorGainMidtones;                                 // 0x0060(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ColorOffsetMidtones;                               // 0x0080(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CommonProgressBarConfig
// 0x0038 (0x0040 - 0x0008)
struct FCommonProgressBarConfig final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              IconResource;                                      // 0x0008(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxValue;                                          // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GreenValue;                                        // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         YellowValue;                                       // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RedValue;                                          // 0x003C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ColorGrading
// 0x0360 (0x0360 - 0x0000)
struct FColorGrading final
{
public:
	struct FTemperature                           Temperature;                                       // 0x0000(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3525[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGlobal                                Global;                                            // 0x0010(0x00A0)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FShadows                               Shadows;                                           // 0x00B0(0x00A0)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FToonShadows                           ToonShadows;                                       // 0x0150(0x00A0)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMidtones                              Midtones;                                          // 0x01F0(0x00A0)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FHighlights                            Highlights;                                        // 0x0290(0x00A0)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMisc                                  Misc;                                              // 0x0330(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3526[0x7];                                     // 0x0359(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTWorldTimeSecondsData
// 0x000C (0x000C - 0x0000)
struct FHTWorldTimeSecondsData final
{
public:
	uint8                                         Pad_3527[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ServerTimeDiff;                                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LocalExposure
// 0x000C (0x000C - 0x0000)
struct FLocalExposure final
{
public:
	float                                         LocalExposureHighlightContrastScale;               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LocalExposureShadowContrastScale;                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3528[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SubsurfaceEdgeBack
// 0x0020 (0x0020 - 0x0000)
struct FSubsurfaceEdgeBack final
{
public:
	float                                         EdgeHighlightIntensity;                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EdgeHighlightPower;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           EdgeHighlightColorMultiply;                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EdgeHighlightMaterialColorBlend;                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3529[0x3];                                     // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.BloomAdvanced
// 0x0080 (0x0080 - 0x0000)
struct FBloomAdvanced final
{
public:
	float                                         BloomSizeScale;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Bloom1Size;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Bloom2Size;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Bloom3Size;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Bloom4Size;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Bloom5Size;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Bloom6Size;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Bloom1Tint;                                        // 0x001C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Bloom2Tint;                                        // 0x002C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Bloom3Tint;                                        // 0x003C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Bloom4Tint;                                        // 0x004C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Bloom5Tint;                                        // 0x005C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Bloom6Tint;                                        // 0x006C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x007C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_352A[0x3];                                     // 0x007D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.Lens
// 0x0094 (0x0094 - 0x0000)
struct FLens final
{
public:
	struct FBloom                                 Bloom;                                             // 0x0000(0x0014)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBloomAdvanced                         BloomAdvanced;                                     // 0x0014(0x0080)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterFilm
// 0x0014 (0x0014 - 0x0000)
struct FCharacterFilm final
{
public:
	float                                         ToonFilmSlope;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ToonFilmToe;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ToonFilmShoulder;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ToonFilmBlackClip;                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ToonFilmWhiteClip;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RimLight
// 0x0050 (0x0050 - 0x0000)
struct FRimLight final
{
public:
	struct FLinearColor                           RimLightColor0;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           RimLightColor1;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RimLightWidth;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_352B[0xC];                                     // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               RimLightParams;                                    // 0x0030(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AmbientCubeMap
// 0x0028 (0x0028 - 0x0000)
struct FAmbientCubeMap final
{
public:
	struct FLinearColor                           Tint;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Intensity;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_352C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureCube*                           CubemapTexture;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_352D[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GlobalIllumination
// 0x0018 (0x0018 - 0x0000)
struct FGlobalIllumination final
{
public:
	float                                         LumenSceneLightingUpdateSpeed;                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LumenFinalGatherLightingUpdateSpeed;               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LumenDiffuseColorBoost;                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LumenSkylightLeaking;                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LumenFullSkylightLeakingDistance;                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0014(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_352E[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LocalDataLayerConditionBase
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FLocalDataLayerConditionBase
{
public:
	uint8                                         Pad_352F[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DataLayerVisionCondition
// 0x0010 (0x0018 - 0x0008)
struct FDataLayerVisionCondition final : public FLocalDataLayerConditionBase
{
public:
	class FName                                   VisionID;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedComplete;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3530[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PostProcess
// 0x0490 (0x0490 - 0x0000)
struct FPostProcess final
{
public:
	struct FLens                                  Lens;                                              // 0x0000(0x0094)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3531[0xC];                                     // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColorGrading                          ColorGrading;                                      // 0x00A0(0x0360)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFilm                                  Film;                                              // 0x0400(0x0014)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3532[0x4];                                     // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmbientCubeMap                        AmbientCubeMap;                                    // 0x0418(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FGlobalIllumination                    GlobalIllumination;                                // 0x0440(0x0018)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FLocalExposure                         LocalExposure;                                     // 0x0458(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FSubsurfaceEdgeBack                    SubsurfaceEdgeBack;                                // 0x0464(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0484(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3533[0xB];                                     // 0x0485(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ParticleColor
// 0x0010 (0x0010 - 0x0000)
struct FParticleColor final
{
public:
	float                                         ParticleColorScale;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StarrySkyOpcity;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StarCount;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StarCloudCount;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterPostProcess
// 0x0014 (0x0014 - 0x0000)
struct FCharacterPostProcess final
{
public:
	struct FCharacterFilm                         Film;                                              // 0x0000(0x0014)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraTask
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FHTCameraTask
{
public:
	uint8                                         Pad_3534[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraSetBlackboardValueTask
// 0x0008 (0x0010 - 0x0008)
struct FHTCameraSetBlackboardValueTask final : public FHTCameraTask
{
public:
	class FName                                   VariableName;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapTileImagesDrawData
// 0x0078 (0x0078 - 0x0000)
struct FMiniMapTileImagesDrawData final
{
public:
	struct FMiniMapImageTileData                  ImageTileData;                                     // 0x0000(0x0028)(NativeAccessSpecifierPublic)
	struct FVector2D                              DrawLeftTopLoc;                                    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              DrawRightBottomLoc;                                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              TextureLeftTopLocation;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              TextureRightBottomLocation;                        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBlendMode                                    BlendMode;                                         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3535[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ThumbnailImage;                                    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkyLightHTFB
// 0x0030 (0x0030 - 0x0000)
struct FSkyLightHTFB final
{
public:
	float                                         SkyLightIntensity;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CastsShadows;                                      // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3536[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SkyLightColor;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LowerHemisphereColor;                              // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UTextureCube>            SkyTextureCube;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StaticToolData
// 0x0018 (0x0020 - 0x0008)
struct FStaticToolData final : public FTableRowBase
{
public:
	EStaticToolType                               ToolType;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3537[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ToolValue;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.InstanceComponents
// 0x0010 (0x0010 - 0x0000)
struct FInstanceComponents final
{
public:
	TArray<class UActorComponent*>                InstanceDeleteComponents;                          // 0x0000(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EquipMeltPackData
// 0x0008 (0x0010 - 0x0008)
struct FEquipMeltPackData final : public FTableRowBase
{
public:
	class FName                                   ReturnItems;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GASForNet
// 0x0038 (0x0038 - 0x0000)
struct FGASForNet final
{
public:
	class UHTAbilitySystemComponent*              RelateAbilitySystemComp;                           // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterForNet                       CharacterForNet;                                   // 0x0008(0x002C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3538[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AutoHeadLightCondition
// 0x0008 (0x0008 - 0x0000)
struct FAutoHeadLightCondition final
{
public:
	float                                         StartTime;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTime;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SelfieCheckTargetState
// 0x0010 (0x0010 - 0x0000)
struct FSelfieCheckTargetState final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESelfieCheckActorState                        TargetState;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3539[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraValueProviderFunctionAbs
// 0x0010 (0x0018 - 0x0008)
struct FHTCameraValueProviderFunctionAbs final : public FHTCameraValueProvider
{
public:
	struct FInstancedStruct                       A;                                                 // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SubtitleItem
// 0x0018 (0x0018 - 0x0000)
struct FSubtitleItem final
{
public:
	int32                                         StartTime;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndTime;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BossAreaMusicData
// 0x0020 (0x0020 - 0x0000)
struct FBossAreaMusicData final
{
public:
	class FString                                 StateGroup;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NavPathOffCondition
// 0x000C (0x000C - 0x0000)
struct FNavPathOffCondition final
{
public:
	float                                         DistanceThreshold;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleThreshold;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeCheckInterval;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FriendConfig
// 0x0018 (0x0018 - 0x0000)
struct FFriendConfig final
{
public:
	int32                                         MaxFriendNum;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxBlacklistNum;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxRecentNum;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxInviterNum;                                     // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         RequestInterval;                                   // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SubNpcOverrideMaterialArray
// 0x0010 (0x0010 - 0x0000)
struct FSubNpcOverrideMaterialArray final
{
public:
	TArray<TSoftObjectPtr<class UMaterialInstance>> OverrideMaterials;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FunctionUnlockPlayerStateEventEntry
// 0x0020 (0x0028 - 0x0008)
struct FFunctionUnlockPlayerStateEventEntry final : public FFunctionUnlockPlayerStateEntry
{
public:
	class FName                                   FunctionName;                                      // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ParamList;                                         // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         bClient : 1;                                       // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bServer : 1;                                       // 0x0020(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_353A[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.UICloneSystemDetailMapAwardData
// 0x0028 (0x0028 - 0x0000)
struct FUICloneSystemDetailMapAwardData final
{
public:
	TArray<struct FAwardInfo>                     ItemAwardArray;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         TeamLevel;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_353B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CloneName;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ButtonInfo
// 0x00E0 (0x00E0 - 0x0000)
struct FButtonInfo final
{
public:
	struct FSlateBrush                            ButtonBrush;                                       // 0x0000(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   ID;                                                // 0x00D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_353C[0x8];                                     // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GamepadKeySettingParam
// 0x0038 (0x0038 - 0x0000)
struct FGamepadKeySettingParam final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   InputKey;                                          // 0x0008(0x0018)(Edit, BlueprintVisible, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   KeyName;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayerMappableKey;                              // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_353D[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CategoryName;                                      // 0x002C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_353E[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TeammateExtraData
// 0x0020 (0x0020 - 0x0000)
struct FTeammateExtraData final
{
public:
	class FString                                 KeyVal;                                            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Val;                                               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TeammateExtraDataArray
// 0x0010 (0x0010 - 0x0000)
struct FTeammateExtraDataArray final
{
public:
	TArray<struct FTeammateExtraData>             DataArray;                                         // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// ScriptStruct HTGame.TeammateInfo
// 0x00A0 (0x00A0 - 0x0000)
struct FTeammateInfo final
{
public:
	int32                                         TeammateDistrictId;                                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_353F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         TeammateRoleId;                                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TeammateName;                                      // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TeammateLevel;                                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TeammateFollowSocket;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TeammateAvatarId;                                  // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TeammateAvatarFrameId;                             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TeammateSuppressorLV;                              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                          TeammateOnline;                                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFTeammateReadyType                           ReadyFlag;                                         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFTeamCloneStateType                          TeammateCloneState;                                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3540[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeammateExtraDataArray                ExtraData;                                         // 0x0060(0x0010)(NativeAccessSpecifierPublic)
	int32                                         TeammateCareer;                                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TeammateMatchKey;                                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3541[0x8];                                     // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         TeammateFollowHeadUid;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int64>                                 TeammateFollowTailUid;                             // 0x0088(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int8                                          ShowTeammateType;                                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3542[0x7];                                     // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TeamInfo
// 0x00D8 (0x00D8 - 0x0000)
struct FTeamInfo final
{
public:
	class FString                                 TeamID;                                            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         LeaderRoleId;                                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         MaxPlayers;                                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3543[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TargetName;                                        // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinLevelLimit;                                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxLevelLimit;                                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3544[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTeammateInfo>                  Teammates;                                         // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   CloneMapName;                                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3545[0x4];                                     // 0x0048(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          PriorityMatchRookie;                               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoAgreeJoin;                                    // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3546[0x7A];                                    // 0x004E(0x007A)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExtraArgs;                                         // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GamepadNormalSettingParam
// 0x000C (0x000C - 0x0000)
struct FGamepadNormalSettingParam final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RowIndex;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuipmentMeshItem
// 0x0008 (0x0008 - 0x0000)
struct FQuipmentMeshItem final
{
public:
	TWeakObjectPtr<class USkeletalMesh>           SlotNewSkeletalMeshPtr;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RandomEquipmentCoreGroupDataStruct
// 0x000C (0x000C - 0x0000)
struct FRandomEquipmentCoreGroupDataStruct final
{
public:
	class FName                                   GroupId;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WeightValue;                                       // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RandomEquipmentCoreGroupStaticData
// 0x0010 (0x0018 - 0x0008)
struct FRandomEquipmentCoreGroupStaticData final : public FTableRowBase
{
public:
	TArray<struct FRandomEquipmentCoreGroupDataStruct> ModifyGroupData;                                   // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModulePropsData_SkeletalMesh
// 0x0058 (0x0058 - 0x0000)
struct FVehicleModulePropsData_SkeletalMesh final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>           PropValue;                                         // 0x0008(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimInstance>           AnimBP;                                            // 0x0030(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DialogueCameraSettings
// 0x0028 (0x02F8 - 0x02D0)
struct FDialogueCameraSettings final : public FCameraSettings
{
public:
	bool                                          bEnableTargetOffset;                               // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3547[0x3];                                     // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinCheckOverlapDistance;                           // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CheckYaw;                                          // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AdjustToYaw;                                       // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            CurveBiasFloatValue;                               // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                         FilterClass;                                       // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuideNPCRefreshRule
// 0x0020 (0x0020 - 0x0000)
struct FGuideNPCRefreshRule final
{
public:
	class FName                                   QuestID_Spawn;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID_Spawn;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestID_Destroy;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID_Destroy;                               // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EquipmentItemNetInfo
// 0x0014 (0x0014 - 0x0000)
struct FEquipmentItemNetInfo final
{
public:
	int32                                         StrengthenLevel;                                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CharacterId;                                       // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EXP;                                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLocked;                                          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3548[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTItemNetInfo
// 0x0148 (0x0148 - 0x0000)
struct FHTItemNetInfo final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHTItemNetID                           UniqueID;                                          // 0x0008(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	int64                                         Amount;                                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Durable;                                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3549[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CreateTime;                                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterItemNetInfo                  CharacterNetInfo;                                  // 0x0028(0x00C8)(NativeAccessSpecifierPublic)
	struct FForkItemNetInfo                       ForkNetInfo;                                       // 0x00F0(0x001C)(NoDestructor, NativeAccessSpecifierPublic)
	struct FEquipmentItemNetInfo                  EquipmentNetInfo;                                  // 0x010C(0x0014)(NoDestructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           RandomModifyBaseData;                              // 0x0120(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRandomModifyDataSaveStruct>    RandomModifyData;                                  // 0x0130(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         ShortcutUseTimer;                                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_354A[0x4];                                     // 0x0144(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HeadUpInfoConfig
// 0x0028 (0x0030 - 0x0008)
struct FHeadUpInfoConfig final : public FTableRowBase
{
public:
	EHeadUpInfoRelation                           Relation;                                          // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_354B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           HeadUpInfoColor;                                   // 0x000C(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           HpColor;                                           // 0x001C(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_354C[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HPBarColor
// 0x0024 (0x0024 - 0x0000)
struct FHPBarColor final
{
public:
	int32                                         Priority;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ForeColor;                                         // 0x0004(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           BackColor;                                         // 0x0014(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HPBarTagColorCfg
// 0x0078 (0x0080 - 0x0008)
struct FHPBarTagColorCfg final : public FTableRowBase
{
public:
	TMap<struct FGameplayTag, struct FHPBarColor> HPBarTagColorMap;                                  // 0x0008(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FHPBarColor                            DefaultHPBarColor;                                 // 0x0058(0x0024)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_354D[0x4];                                     // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SpecialBoxCameraSettings
// 0x0008 (0x02D8 - 0x02D0)
struct FSpecialBoxCameraSettings final : public FCameraSettings
{
public:
	float                                         DefaultPitch;                                      // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_354E[0x4];                                     // 0x02D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GamepadActivableLayerRow
// 0x0010 (0x0018 - 0x0008)
struct FGamepadActivableLayerRow final : public FTableRowBase
{
public:
	struct FGameplayTag                           Layer;                                             // 0x0008(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActivate;                                         // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_354F[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MonsterLevelTextColorInfo
// 0x0010 (0x0018 - 0x0008)
struct FMonsterLevelTextColorInfo final : public FTableRowBase
{
public:
	struct FLinearColor                           TextColor;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BasicControlsData
// 0x0018 (0x0018 - 0x0000)
struct FBasicControlsData final
{
public:
	float                                         CloudCoverage;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Fog;                                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverallIntensity;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Contrast;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Saturation;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirectionalBalance;                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LockTargetParam
// 0x00E0 (0x00E8 - 0x0008)
struct FLockTargetParam final : public FTableRowBase
{
public:
	class FName                                   SocketName;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ScreenXBias;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ScreenYBias;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EveryframeModifyPitch;                             // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PitchSpeed;                                        // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YawSpeed;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3550[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraInterpolationSetting            SprintingArmLength;                                // 0x0040(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            SocketOffsetY;                                     // 0x0060(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            SocketOffsetZ;                                     // 0x0080(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAdjustOtherParamSameTime;                         // 0x00A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAdjustBySocketOffset;                             // 0x00A1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3551[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EveryframeModifySockeyY;                           // 0x00A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EveryframeModifySockeyZ;                           // 0x00A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAdjustRotationWhenReturn;                         // 0x00AC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3552[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnSocketOffsetYSpeed;                          // 0x00B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3553[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ReturnSocketOffsetYSpeedCurveFloatValue;           // 0x00B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnSocketOffsetZSpeed;                          // 0x00C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3554[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ReturnSocketOffsetZSpeedCurveFloatValue;           // 0x00C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnTargetArmLengthSpeed;                        // 0x00D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3555[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ReturnTargetArmLengthSpeedCurveFloatValue;         // 0x00D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayShowUI;                                       // 0x00E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3556[0x4];                                     // 0x00E4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GamepadPlayerMappableKeyParam
// 0x0038 (0x0038 - 0x0000)
struct FGamepadPlayerMappableKeyParam final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   PrerequireKey;                                     // 0x0020(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PokemonGameMatchSpawnConfig
// 0x0088 (0x0090 - 0x0008)
struct FPokemonGameMatchSpawnConfig final : public FTableRowBase
{
public:
	TSoftClassPtr<class UClass>                   ActorToSpawn;                                      // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             TransformToSpawn;                                  // 0x0030(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PokemonGameConfig
// 0x00C8 (0x00D0 - 0x0008)
struct FPokemonGameConfig final : public FTableRowBase
{
public:
	struct FPokemonGameTrigger                    Trigger;                                           // 0x0008(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3557[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPokemonGameMatchSpawnConfig           PokemonMatchActor;                                 // 0x0020(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FPokemonGameMatchCharacterSpawnConfig> OwnCharacters;                                     // 0x00B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPokemonGameMatchCharacterSpawnConfig> EnemyCharacters;                                   // 0x00C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SpawnCmdSchedulerBase
// 0x00A0 (0x00A0 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x10) FSpawnCmdSchedulerBase
{
public:
	uint8                                         Pad_3558[0x98];                                    // 0x0000(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
#pragma pack(pop)

// ScriptStruct HTGame.HTCircleMatrixScheduler
// 0x0020 (0x00C0 - 0x00A0)
struct FHTCircleMatrixScheduler final : public FSpawnCmdSchedulerBase
{
public:
	float                                         Radius;                                            // 0x0098(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IncreaseRadiusFromFirst;                           // 0x009C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FirstAngleOffsetInDegree;                          // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleInDegreeBetweenEachActor;                     // 0x00A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnInterval;                                     // 0x00A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ActorNum;                                          // 0x00AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebug;                                            // 0x00B0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3559[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFindSpawnRotationObj*                  SpawnRotationObj;                                  // 0x00B8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PropMessageSlotDataTable
// 0x0008 (0x0010 - 0x0008)
struct FPropMessageSlotDataTable final : public FTableRowBase
{
public:
	TSubclassOf<class UHTUI_PropMessageSlotCommon> PropMessageSlot;                                   // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AIRandAnimEntry
// 0x0010 (0x0010 - 0x0000)
struct FAIRandAnimEntry final
{
public:
	class UAnimMontage*                           Anim;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_355A[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SetViewTargetParam
// 0x0060 (0x0060 - 0x0000)
struct FSetViewTargetParam final
{
public:
	uint8                                         Pad_355B[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HoldOnTime;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendInTime;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendOutTime;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PlayCameraFadeWhenBlendIn;                         // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_355C[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendInCameraFadeTime;                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendInCameraFadeOutTime;                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendInFromAlpha;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendInToAlpha;                                    // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           BlendInColor;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PlayCameraFadeWhenBlendOut;                        // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_355D[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendOutCameraFadeTime;                            // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendOutCameraFadeOutTime;                         // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendOutFromAlpha;                                 // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendOutToAlpha;                                   // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           BlendOutColor;                                     // 0x004C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnToPlayerWhenFinished;                        // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HidePlayer;                                        // 0x005D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HideAzimuth;                                       // 0x005E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_355E[0x1];                                     // 0x005F(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AreaNotifyInfo
// 0x0048 (0x0048 - 0x0000)
struct FAreaNotifyInfo final
{
public:
	uint8                                         Pad_355F[0x20];                                    // 0x0000(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          AreaParticleAsset;                                 // 0x0020(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMatrixPointGenerateInfo
// 0x0020 (0x0020 - 0x0000)
struct FHTMatrixPointGenerateInfo final
{
public:
	struct FVector                                LocationOffset;                                    // 0x0000(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayTime;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3560[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTModifierValueStruct
// 0x0050 (0x0050 - 0x0000)
struct FHTModifierValueStruct final
{
public:
	TMap<class FName, struct FHTModifierValue>    HTModifierValueMap;                                // 0x0000(0x0050)(NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMatrixScheduler
// 0x0030 (0x00D0 - 0x00A0)
struct FHTMatrixScheduler final : public FSpawnCmdSchedulerBase
{
public:
	TArray<struct FHTMatrixPointGenerateInfo>     PointsInfo;                                        // 0x0098(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFindSpawnRotationObj*                  SpawnRotationObj;                                  // 0x00A8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebug;                                            // 0x00B0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3561[0x1F];                                    // 0x00B1(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTAbilityActorFun_SpawnActors
// 0x0058 (0x0078 - 0x0020)
struct FHTAbilityActorFun_SpawnActors final : public FHTAbilityFuncExtensionStruct
{
public:
	struct FInstancedStruct                       SpawnCmdScheduler;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AHTAbilitySpawnActor>       SpawnActorClass;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   DamageTriggerConfigID;                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bNeedCheckFloor;                                   // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSpawnEvenIfFindFloorFailure;                      // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bClientPredictionSpawn;                            // 0x0042(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideEventTag;                                 // 0x0043(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           EventTag;                                          // 0x0044(0x0008)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideEffectContainer;                          // 0x004C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3562[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHTGameplayEffectContainer             EffectContainer;                                   // 0x0050(0x0028)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct HTGame.JSRequirement_MontagePosition
// 0x0010 (0x0018 - 0x0008)
struct FJSRequirement_MontagePosition final : public FJumpSectionRequirementBase
{
public:
	TArray<struct FFloatRange>                    MontagePositionRequirement;                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionHoleData
// 0x0010 (0x0010 - 0x0000)
struct FVisionHoleData final
{
public:
	uint8                                         Pad_3563[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             HoleTexture;                                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ExploreAreaWidgetData
// 0x0108 (0x0108 - 0x0000)
struct FExploreAreaWidgetData final
{
public:
	class UTextureRenderTarget2D*                 AreaRenderTexture;                                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHTUI_VisionAreaWidget*                 AreaWidget;                                        // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 AreaImageWidget;                                   // 0x0010(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               AreaDynamicMat;                                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 VisionHoleTexture;                                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3564[0x40];                                    // 0x0028(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FVisionHoleData>     CompleteVisionHoleData;                            // 0x0068(0x0050)(NativeAccessSpecifierPublic)
	TMap<class FName, struct FVisionHoleData>     IncompleteVisionHoleData;                          // 0x00B8(0x0050)(NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraCondition_Or
// 0x0010 (0x0018 - 0x0008)
struct FHTCameraCondition_Or final : public FHTCameraCondition
{
public:
	TArray<struct FInstancedStruct>               Conditions;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SleepRecoveryInfo
// 0x000C (0x000C - 0x0000)
struct FSleepRecoveryInfo final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoveryValue;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.JSRequirement_LogicOr
// 0x0020 (0x0028 - 0x0008)
struct FJSRequirement_LogicOr final : public FJumpSectionRequirementBase
{
public:
	struct FInstancedStruct                       RequirementA;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       RequirementB;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTGameplayEffectMessage
// 0x02A0 (0x02A0 - 0x0000)
struct FHTGameplayEffectMessage final
{
public:
	struct FGameplayEffectSpec                    GameplayEffectSpec;                                // 0x0000(0x0298)(NativeAccessSpecifierPublic)
	float                                         FModifyDuration;                                   // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPendingRemove;                                   // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3565[0x3];                                     // 0x029D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTGameplayeffectMessages
// 0x0028 (0x0028 - 0x0000)
struct FHTGameplayeffectMessages final
{
public:
	TArray<struct FHTGameplayEffectMessage>       GEMessageQueue;                                    // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FHTGameplayEffectMessage>       CacheGEMessageQueue;                               // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bInLoop;                                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3566[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.JSRequirementOperator
// 0x0018 (0x0020 - 0x0008)
struct FJSRequirementOperator final : public FJumpSectionRequirementBase
{
public:
	TArray<struct FInstancedStruct>               Requirements;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	EJSRequirementOperator                        Operator;                                          // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3567[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTStoreNPCPoint
// 0x0018 (0x0018 - 0x0000)
struct FHTStoreNPCPoint final
{
public:
	class FName                                   EventID;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AHTTargetPoint*>                 TargetPoints;                                      // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTSelfieActivityVolumeCameraOverrideConfigs
// 0x0080 (0x0080 - 0x0000)
struct FHTSelfieActivityVolumeCameraOverrideConfigs final
{
public:
	struct FRotator                               DefaultRotation;                                   // 0x0000(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               CameraMinRotation;                                 // 0x0018(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               CameraMaxRotation;                                 // 0x0030(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              LimitRangeMin;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              LimitRangeMax;                                     // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelfieActivityShowSelf;                           // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowPreviewPhoto;                                 // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3568[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraActor*                           PresetCamera;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePresetCamera;                                  // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3569[0x7];                                     // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.JSRequirement_HasMoveInput
// 0x0000 (0x0008 - 0x0008)
struct FJSRequirement_HasMoveInput final : public FJumpSectionRequirementBase
{
};

// ScriptStruct HTGame.HTGameplayModifierARInfo
// 0x0348 (0x0348 - 0x0000)
struct FHTGameplayModifierARInfo final
{
public:
	class FName                                   GEName;                                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayModifierInfo                  GameplayModifierInfo;                              // 0x0008(0x0338)(NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffectCustomApplicationRequirement> ApplicationRequirement;                            // 0x0340(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.JSRequirement_Falling
// 0x0000 (0x0008 - 0x0008)
struct FJSRequirement_Falling final : public FJumpSectionRequirementBase
{
};

// ScriptStruct HTGame.IdleLagSpeedAndMaxDistance
// 0x0018 (0x0020 - 0x0008)
struct FIdleLagSpeedAndMaxDistance final : public FTableRowBase
{
public:
	float                                         IdleTime;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_356A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            LagSpeedCurveFloatValue;                           // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            LagMaxDistanceCurveFloatValue;                     // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FurnitureAttributeCollectData
// 0x0038 (0x0040 - 0x0008)
struct FFurnitureAttributeCollectData final : public FTableRowBase
{
public:
	int32                                         Level;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DropGroupID;                                       // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              IconImage;                                         // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.JSRequirement_IsInSky
// 0x0000 (0x0008 - 0x0008)
struct FJSRequirement_IsInSky final : public FJumpSectionRequirementBase
{
};

// ScriptStruct HTGame.JSRequirement_Strength
// 0x0008 (0x0010 - 0x0008)
struct FJSRequirement_Strength final : public FJumpSectionRequirementBase
{
public:
	float                                         StrengthValToCompare;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bOnlyEqual : 1;                                    // 0x000C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bGreaterOrLess : 1;                                // 0x000C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIncludeEqual : 1;                                 // 0x000C(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_356B[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraCondition_Not
// 0x0010 (0x0018 - 0x0008)
struct FHTCameraCondition_Not final : public FHTCameraCondition
{
public:
	struct FInstancedStruct                       Condition;                                         // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconStateData
// 0x0050 (0x0050 - 0x0000)
struct FMiniMapIconStateData final
{
public:
	TMap<EMiniMapIconState, struct FInstancedStruct> IconRenderData;                                    // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconScaleData
// 0x0020 (0x0020 - 0x0000)
struct FMiniMapIconScaleData final
{
public:
	struct FFloatRange                            MapScaleRange;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            IconScaleRange;                                    // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconDrawData
// 0x0008 (0x0008 - 0x0000)
struct FMiniMapIconDrawData final
{
public:
	bool                                          ShowAtEdgeWhenOutOfView;                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_356C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShowAtEdgeDistance;                                // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconData
// 0x0318 (0x0320 - 0x0008)
struct FMiniMapIconData final : public FTableRowBase
{
public:
	class FString                                 Comment;                                           // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMiniMapIconStateData                  IconRenderStateData;                               // 0x0018(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<EMiniMapType, struct FMiniMapIconStateData> IconRenderStateDataTypeOverride;                   // 0x0068(0x0050)(Edit, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   ShowAnimation;                                     // 0x00B8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   HideAnimation;                                     // 0x00E0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   LoopAnimation;                                     // 0x0108(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ZOrder;                                            // 0x0130(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_356D[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   IconName;                                          // 0x0138(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FText                                   IconDesc;                                          // 0x0148(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FText                                   TypeName;                                          // 0x0158(0x0010)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class UHTMiniMapIcon>             MiniMapIconClass;                                  // 0x0168(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowHeightDirect;                                 // 0x0170(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_356E[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShowDistance;                                      // 0x0174(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            ShowMapScaleRange;                                 // 0x0178(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMiniMapIconDrawData                   DefaultIconDrawData;                               // 0x0188(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TMap<EMiniMapType, struct FMiniMapIconDrawData> IconDrawDataOverride;                              // 0x0190(0x0050)(Edit, NativeAccessSpecifierPublic)
	bool                                          CanTrace;                                          // 0x01E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMiniMapIconTraceDrawType                     TraceDrawType;                                     // 0x01E1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_356F[0x6];                                     // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TraceCategory;                                     // 0x01E8(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TraceIconID;                                       // 0x01F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTraceInWorld;                                     // 0x0200(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3570[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              TraceIconInWorld;                                  // 0x0208(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceHideDistance;                                 // 0x0230(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EdgeArrowIconID;                                   // 0x0234(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3571[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMiniMapIconScaleData>          IconScaleData;                                     // 0x0240(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          CanClick;                                          // 0x0250(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3572[0x3];                                     // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ClickPriority;                                     // 0x0254(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CanChoose;                                         // 0x0258(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3573[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              ListIcon;                                          // 0x0260(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           ClickSound;                                        // 0x0288(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowIconDetails;                                   // 0x02B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsTeleport;                                        // 0x02B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3574[0x2];                                     // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DetailsWidgetExtensionID;                          // 0x02B4(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3575[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              DetailsIcon;                                       // 0x02C0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              DetailsBackImage;                                  // 0x02E8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PreviewAwardDropID;                                // 0x0310(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMiniMapIconDetailsFunc                       DetailsFuncType;                                   // 0x0318(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3576[0x7];                                     // 0x0319(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.JSRequirement_OnDamaged
// 0x0000 (0x0008 - 0x0008)
struct FJSRequirement_OnDamaged final : public FJumpSectionRequirementBase
{
};

// ScriptStruct HTGame.JSRequirement_InputPressed
// 0x0000 (0x0008 - 0x0008)
struct FJSRequirement_InputPressed final : public FJumpSectionRequirementBase
{
};

// ScriptStruct HTGame.StoreData
// 0x0448 (0x0450 - 0x0008)
struct FStoreData final : public FTableRowBase
{
public:
	class FName                                   StoreUnqiueID;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BelongLevel;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ShortAddressDes;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   LongAddressDes;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EHTStoreType                                  StoreType;                                         // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3577[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              StoreHeadIcon;                                     // 0x0040(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              StoreSucessHeadIcon;                               // 0x0068(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              StoreAppearanceIcon;                               // 0x0090(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StoreCurrencyID;                                   // 0x00B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StoreArea;                                         // 0x00C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PassengerFlowVolume;                               // 0x00C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SellingPrice;                                      // 0x00C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3578[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   StorePropDes;                                      // 0x00D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FStorePropertyNode>             StorePropertyNodes;                                // 0x00E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ULevelSequence>          OpenStoreLevelSequence;                            // 0x00F0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3579[0x8];                                     // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LevelSequenceOriginTransform;                      // 0x0120(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             StoreBigWorldTransform;                            // 0x0180(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTrackGoalParam                        TrackGoalParam;                                    // 0x01E0(0x01F8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_357A[0x8];                                     // 0x03D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             StoreTransform;                                    // 0x03E0(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MapIconID;                                         // 0x0440(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MapPointId;                                        // 0x0448(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTForceFeedbackParameters
// 0x0018 (0x0018 - 0x0000)
struct FHTForceFeedbackParameters final
{
public:
	bool                                          bOverride;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_357B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IndexToPlay;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLooping;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_357C[0xF];                                     // 0x0009(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTVehicleGamepadFeedbackEffectParams
// 0x0024 (0x0024 - 0x0000)
struct FHTVehicleGamepadFeedbackEffectParams final
{
public:
	float                                         AccelerationEffectValue;                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHTForceFeedbackParameters             ForceFeedbackParameters;                           // 0x0004(0x0018)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   FeedbackEffectName;                                // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraPropertyValueEvaluator
// 0x0030 (0x0030 - 0x0000)
struct FHTCameraPropertyValueEvaluator final
{
public:
	struct FInstancedStruct                       TargetValueProvider;                               // 0x0000(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       DeltaTimeModifier;                                 // 0x0010(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               Transitions;                                       // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraConditionalPropertyEvaluators
// 0x0060 (0x0060 - 0x0000)
struct FHTCameraConditionalPropertyEvaluators final
{
public:
	struct FInstancedStruct                       Condition;                                         // 0x0000(0x0010)(Edit, NativeAccessSpecifierPublic)
	TMap<EHTCameraPropertyType, struct FHTCameraPropertyValueEvaluator> PropertyValueEvaluators;                           // 0x0010(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.JSRequirement_HoldOrReleaseHold
// 0x0008 (0x0010 - 0x0008)
struct FJSRequirement_HoldOrReleaseHold final : public FJumpSectionRequirementBase
{
public:
	float                                         RequireHoldTime;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHoldCheck;                                        // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_357D[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.JSRequirement_TimeSince
// 0x0008 (0x0010 - 0x0008)
struct FJSRequirement_TimeSince final : public FJumpSectionRequirementBase
{
public:
	float                                         RequireTimeSinceTriggerPress;                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RequireTimeSinceLastJumpSection;                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModifyListInfo
// 0x0030 (0x0030 - 0x0000)
struct FVehicleModifyListInfo final
{
public:
	class FName                                   ModuleID;                                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsNew;                                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_357E[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AddCurrency;                                       // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_357F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         AddCost;                                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ModifyCurrency;                                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ModifyCost;                                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraCondition_Equal
// 0x0020 (0x0028 - 0x0008)
struct FHTCameraCondition_Equal final : public FHTCameraCondition
{
public:
	struct FInstancedStruct                       A;                                                 // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       B;                                                 // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.JSRequirement_IsTargetingActor
// 0x0000 (0x0008 - 0x0008)
struct FJSRequirement_IsTargetingActor final : public FJumpSectionRequirementBase
{
};

// ScriptStruct HTGame.HTAbilityJumpSectionSpec
// 0x0038 (0x0038 - 0x0000)
struct FHTAbilityJumpSectionSpec final
{
public:
	uint8                                         Pad_3580[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       AnimatingAbility;                                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Montage;                                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3581[0x20];                                    // 0x0018(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoreBrandIntervalModel
// 0x0010 (0x0018 - 0x0008)
struct FStoreBrandIntervalModel final : public FTableRowBase
{
public:
	TArray<struct FDateInfo>                      BrandIntervals;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CloneOverviewRow
// 0x0070 (0x0078 - 0x0008)
struct FCloneOverviewRow final : public FTableRowBase
{
public:
	class FText                                   TypeText;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<ECloneType>                            CloneType;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0038(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECloneType                                    Type;                                              // 0x0060(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3582[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Desc;                                              // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ApplyTractionForceParams
// 0x0338 (0x0338 - 0x0000)
struct FApplyTractionForceParams final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HalfYawAngleRange;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HalfPitchAngleRange;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForceMagnitude;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3583[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     DistanceFallOff;                                   // 0x0018(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     HalfYawAngleFallOff;                               // 0x00A0(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     HalfPitchAngleFallOff;                             // 0x0128(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     DistanceYawAngleRange;                             // 0x01B0(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     DistancePitchAngleRange;                           // 0x0238(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                BoxExtent;                                         // 0x02D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHTGamePlayEffect>          TractionGE;                                        // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHTGamePlayEffect>          DamageGE;                                          // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebug;                                            // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3584[0x3];                                     // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ParticleMaxSpeed;                                  // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CenterLocationOffset;                              // 0x0300(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               CenterRotationOffset;                              // 0x0318(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         MaxTraceNum;                                       // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3585[0x4];                                     // 0x0334(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TractionInnerBoxParams
// 0x0030 (0x0030 - 0x0000)
struct FTractionInnerBoxParams final
{
public:
	struct FVector                                SwallowBoxHalfSize;                                // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SwallowBoxOffset;                                  // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisualSpawnedStatus
// 0x0014 (0x0014 - 0x0000)
struct FVisualSpawnedStatus final
{
public:
	bool                                          bHarvested;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDestroyed;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3586[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AActor>                  SpawnedActor;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVisualSpawnerResetType                       ResetType;                                         // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3587[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastRandomPointIndex;                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FootDecalWithTagsRequirement
// 0x0158 (0x0160 - 0x0008)
struct alignas(0x10) FFootDecalWithTagsRequirement final : public FCustomFootPrint
{
public:
	struct FGameplayTagRequirements               TagRequirements;                                   // 0x0008(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     WarningMaterial;                                   // 0x0090(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MaterialParameterName;                             // 0x0098(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            MaterialParameterCurve;                            // 0x00A0(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                DecalSize;                                         // 0x00A8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               DecalRotation;                                     // 0x00C0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                SpawnLocationOffset;                               // 0x00D8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpanDuration;                                      // 0x00F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3588[0x6C];                                    // 0x00F4(0x006C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraPropertyValueTransition
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FHTCameraPropertyValueTransition
{
public:
	uint8                                         Pad_3589[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraPropertyValueLinearTransition
// 0x0018 (0x0020 - 0x0008)
struct FHTCameraPropertyValueLinearTransition final : public FHTCameraPropertyValueTransition
{
public:
	struct FInstancedStruct                       DeltaPerSecondProvider;                            // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	float                                         Tolerance;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_358A[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.WaitOverlapActorInfo
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FWaitOverlapActorInfo final
{
public:
	uint8                                         Pad_358B[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MassTrafficTrainStationInfoFragment
// 0x00F0 (0x00F0 - 0x0000)
struct FMassTrafficTrainStationInfoFragment final : public FMassFragment
{
public:
	struct FZoneGraphLaneLocation                 StationLocation;                                   // 0x0000(0x0070)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_358C[0x4];                                     // 0x0070(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceToStation;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastStationDistance;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RouteIndex;                                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeginSlowDownDistance;                             // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TrainSpeedLimitMPH;                                // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TrainAcceralation;                                 // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TrainSpeedLimitCms;                                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ETrainState, float>                      TrainPeriodTime;                                   // 0x0090(0x0050)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_358D[0x10];                                    // 0x00E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ActivityData
// 0x0060 (0x0068 - 0x0008)
struct FActivityData final : public FTableRowBase
{
public:
	EActivityType                                 ActivityType;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_358E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ActivityName;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ThumImage;                                         // 0x0020(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ActUIId;                                           // 0x0048(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHTDataAsset*                           ActPrimaryDataAsset;                               // 0x0050(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHTActivityHandleBase>      ActHandleClass;                                    // 0x0058(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SortPriority;                                      // 0x0060(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_358F[0x4];                                     // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ActivityRPCInfo
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FActivityRPCInfo final
{
public:
	uint8                                         Pad_3590[0x18];                                    // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StaticItemDataExpandableAttribute
// 0x0018 (0x0018 - 0x0000)
struct FStaticItemDataExpandableAttribute final
{
public:
	class FName                                   AttributeName;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Attribute;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StaticItemDataExpandable
// 0x0010 (0x0010 - 0x0000)
struct FStaticItemDataExpandable final
{
public:
	TArray<struct FStaticItemDataExpandableAttribute> ExpandedAttributes;                                // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StaticItemData
// 0x0140 (0x0148 - 0x0008)
struct FStaticItemData final : public FTableRowBase
{
public:
	EItemType                                     ItemType;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3591[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ItemTags;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ItemIcon;                                          // 0x0020(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ItemIconSmall;                                     // 0x0048(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ItemName;                                          // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int64                                         MaxAmount;                                         // 0x0080(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemQuality                                  ItemQuality;                                       // 0x0088(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3592[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ItemCD;                                            // 0x008C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemEffectType                               ItemEffectType;                                    // 0x0090(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3593[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   UseContext;                                        // 0x0098(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x00A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               ToolDatas;                                         // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         bAutoUseWhenAdd : 1;                               // 0x00C8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	bool                                          bDisplayedWhenObtain;                              // 0x00C9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUndisplayFirstAddMessageTips;                     // 0x00CA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUndisplayCommonAddMessageTips;                    // 0x00CB(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAddMessageTips;                                // 0x00CC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3594[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BagFunctions;                                      // 0x00D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CanDestory;                                        // 0x00D4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3595[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MeltPackID;                                        // 0x00D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ActiveBoxItemID;                                   // 0x00E0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OutputSourceID;                                    // 0x00E8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStaticItemDataExpandable              ExpandableAttributes;                              // 0x00F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       ExtensionData;                                     // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       ElementData;                                       // 0x0110(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       SubstituteData;                                    // 0x0120(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bCanAddToQuickBar;                                 // 0x0130(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoAddToQuickBar;                                // 0x0131(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsShowAmount;                                     // 0x0132(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3596[0x5];                                     // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCharacterTagConfig>            PlayerViewTagArray;                                // 0x0138(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapTileRenderScaleData
// 0x0008 (0x0008 - 0x0000)
struct FMiniMapTileRenderScaleData final
{
public:
	float                                         MinViewFieldWidth;                                 // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxViewFieldWidth;                                 // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapRenderData
// 0x0078 (0x0078 - 0x0000)
struct FMiniMapRenderData final
{
public:
	struct FMiniMapTileRenderData                 TileRenderData;                                    // 0x0000(0x0070)(Edit, NativeAccessSpecifierPublic)
	struct FMiniMapTileRenderScaleData            RenderScaleData;                                   // 0x0070(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraValueProviderFunctionMin
// 0x0020 (0x0028 - 0x0008)
struct FHTCameraValueProviderFunctionMin final : public FHTCameraValueProvider
{
public:
	struct FInstancedStruct                       A;                                                 // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       B;                                                 // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAdventureManualBossActiveRequire
// 0x0010 (0x0010 - 0x0000)
struct FHTAdventureManualBossActiveRequire final
{
public:
	EAdventureManualBossActivateType              ActivateType;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3597[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Number;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ID;                                                // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAdventureManualBossRow
// 0x0128 (0x0130 - 0x0008)
struct alignas(0x10) FHTAdventureManualBossRow final : public FTableRowBase
{
public:
	class FName                                   ID;                                                // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   BossName;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_3598[0x8];                                     // 0x0020(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RewardDropId;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              IconActivated;                                     // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3599[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayAreaActivated;                              // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         VitalityActivated;                                 // 0x0070(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_359A[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHTAdventureManualBossActiveRequire> ActiveRequires;                                    // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                   DescriptionDeactivated;                            // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ActiveRequireDescription;                          // 0x0098(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              IconDeactivated;                                   // 0x00A8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_359B[0x60];                                    // 0x00D0(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ReplicatedTrafficParkedVehicleAgent
// 0x0020 (0x0048 - 0x0028)
struct FReplicatedTrafficParkedVehicleAgent final : public FReplicatedAgentBase
{
public:
	struct FVector                                Position;                                          // 0x0028(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Yaw;                                               // 0x0040(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_359C[0x4];                                     // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TrafficParkedVehicleFastArrayItem
// 0x0048 (0x0058 - 0x0010)
struct FTrafficParkedVehicleFastArrayItem final : public FMassFastArrayItemBase
{
public:
	struct FReplicatedTrafficParkedVehicleAgent   Agent;                                             // 0x0010(0x0048)(NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassTrafficParkedVehicleClientBubbleSerializer
// 0x0218 (0x0350 - 0x0138)
struct FMassTrafficParkedVehicleClientBubbleSerializer final : public FMassClientBubbleSerializerBase
{
public:
	uint8                                         Pad_359D[0x208];                                   // 0x0138(0x0208)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTrafficParkedVehicleFastArrayItem> TrafficParkedVehicleList;                          // 0x0340(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct HTGame.QuestNode
// 0x0010 (0x0010 - 0x0000)
struct FQuestNode final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestObjectiveID;                                  // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAdventureManualDailyChapterRewardItems
// 0x0018 (0x0018 - 0x0000)
struct FHTAdventureManualDailyChapterRewardItems final
{
public:
	int32                                         ActivationValue;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_359E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHTCommonIdNumber>              RewardItems;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AwakenIconStruct
// 0x0050 (0x0050 - 0x0000)
struct FAwakenIconStruct final
{
public:
	TSoftObjectPtr<class UTexture2D>              HeadIcon;                                          // 0x0000(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              MaskIcon;                                          // 0x0028(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DrumScoreRecordData
// 0x0048 (0x0048 - 0x0000)
struct FDrumScoreRecordData final
{
public:
	class FName                                   SongID;                                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LevelType;                                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Score;                                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EasySocre;                                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NoramlSocre;                                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HardSocre;                                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HardestSocre;                                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitRate;                                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EasyHitRate;                                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalHitRate;                                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HardHitRate;                                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HardestHitRate;                                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NoteNum;                                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalNoteNum;                                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_359F[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         UpgradeTime;                                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ShopData
// 0x0068 (0x0070 - 0x0008)
struct FShopData final : public FTableRowBase
{
public:
	EShopType                                     ShopType;                                          // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35A0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CurrencyID;                                        // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   UnlockId;                                          // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESwitchType                                   SwitchType;                                        // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35A1[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CanBuyDistance;                                    // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UIClass;                                           // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ShopName;                                          // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ShopIcon;                                          // 0x0048(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAdventureManualTypeRow
// 0x0068 (0x0070 - 0x0008)
struct FHTAdventureManualTypeRow : public FTableRowBase
{
public:
	class FName                                   TypeId;                                            // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHTCommonIdNumber>              Items;                                             // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_35A2[0x50];                                    // 0x0020(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RedPointConditionEquipmentInlay
// 0x0000 (0x0008 - 0x0008)
struct FRedPointConditionEquipmentInlay final : public FRedPointCondition
{
};

// ScriptStruct HTGame.HTAdventureManualDailyChapterConfig
// 0x0050 (0x00C0 - 0x0070)
struct FHTAdventureManualDailyChapterConfig final : public FHTAdventureManualTypeRow
{
public:
	class FName                                   UnlockQuestId;                                     // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ChapterDisplayName;                                // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0088(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHTAdventureManualDailyChapterRewardItems> ChapterRewardItems;                                // 0x00B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointIDSelector
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FRedPointIDSelector
{
public:
	uint8                                         Pad_35A3[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraValueProviderFunctionMultiply
// 0x0020 (0x0028 - 0x0008)
struct FHTCameraValueProviderFunctionMultiply final : public FHTCameraValueProvider
{
public:
	struct FInstancedStruct                       A;                                                 // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       B;                                                 // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTSystematicComponentDefinitionRow
// 0x0030 (0x0038 - 0x0008)
struct FHTSystematicComponentDefinitionRow final : public FTableRowBase
{
public:
	TSoftClassPtr<class UClass>                   Component;                                         // 0x0008(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTSystematicComponentCreatePolicy            CreatePolicy;                                      // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35A4[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTAdventureManualEssentialFields
// 0x0098 (0x00A0 - 0x0008)
struct FHTAdventureManualEssentialFields : public FTableRowBase
{
public:
	uint8                                         Pad_35A5[0x50];                                    // 0x0008(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   QuestDisplayName;                                  // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   QuestId;                                           // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAdventureManualQuestType                     QuestType;                                         // 0x0070(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35A6[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxValue;                                          // 0x0074(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSpecifiedId;                                    // 0x0078(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35A7[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SpecifyId;                                         // 0x007C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35A8[0x1C];                                    // 0x0084(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTAdventureManualDailyTypeRow
// 0x0058 (0x00F8 - 0x00A0)
struct FHTAdventureManualDailyTypeRow final : public FHTAdventureManualEssentialFields
{
public:
	TSoftObjectPtr<class UTexture2D>              QuestIcon;                                         // 0x00A0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHTCommonIdNumber>              RewardItems;                                       // 0x00C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EDailyQuestLabel                              DailyQuestLabel;                                   // 0x00D8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsJumpable;                                       // 0x00D9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35A9[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UINameToOpen;                                      // 0x00E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UIExtendParameter;                                 // 0x00F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ReactionConfigData
// 0x0018 (0x0020 - 0x0008)
struct FReactionConfigData final : public FTableRowBase
{
public:
	EReactionResultType                           ReactionResult;                                    // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterElementType                         CharacterElementType1;                             // 0x0009(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterElementType                         CharacterElementType2;                             // 0x000A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35AA[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReactionDisplayText;                               // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PendingRecordAdventureParam
// 0x0018 (0x0018 - 0x0000)
struct FPendingRecordAdventureParam final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35AB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Timestamp;                                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassTrafficVehicleVisualizationFragment
// 0x0004 (0x0004 - 0x0000)
struct FMassTrafficVehicleVisualizationFragment final : public FMassFragment
{
public:
	float                                         VehicleColorIndex;                                 // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraValueProviderConditional
// 0x0030 (0x0038 - 0x0008)
struct FHTCameraValueProviderConditional final : public FHTCameraValueProvider
{
public:
	struct FInstancedStruct                       Condition;                                         // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       TrueValue;                                         // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       FalseValue;                                        // 0x0028(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAdventureManualWizardChapterConfig
// 0x0020 (0x0090 - 0x0070)
struct FHTAdventureManualWizardChapterConfig final : public FHTAdventureManualTypeRow
{
public:
	class FText                                   ChapterDisplayName;                                // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         ChapterID;                                         // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestId;                                           // 0x0084(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35AC[0x4];                                     // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ForkStarBuff
// 0x0030 (0x0030 - 0x0000)
struct FForkStarBuff final
{
public:
	TSoftClassPtr<class UClass>                   BuffObject;                                        // 0x0000(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsGlobal;                                          // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35AD[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StaticForkUpgradeStarData
// 0x0040 (0x0048 - 0x0008)
struct FStaticForkUpgradeStarData final : public FTableRowBase
{
public:
	TArray<struct FForkStarBuff>                  Buffs;                                             // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                 NeedGolds;                                         // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAdventureManualWizardTypeRow
// 0x0060 (0x0100 - 0x00A0)
struct FHTAdventureManualWizardTypeRow final : public FHTAdventureManualEssentialFields
{
public:
	TSoftObjectPtr<class UTexture2D>              QuestIcon;                                         // 0x00A0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableValue2;                                     // 0x00C8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35AE[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value2;                                            // 0x00CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChapterIndex;                                      // 0x00D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAdventureManualWizardMainType                QuestMainType;                                     // 0x00D4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35AF[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UINameToOpen;                                      // 0x00D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UIExtendParameter;                                 // 0x00E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHTCommonIdNumber>              RewardItems;                                       // 0x00F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HPPercentageTrigger
// 0x0008 (0x0008 - 0x0000)
struct FHPPercentageTrigger final
{
public:
	float                                         Percentage;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggered;                                        // 0x0004(0x0001)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35B0[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RedPointQuestEvent
// 0x0008 (0x0018 - 0x0010)
struct FRedPointQuestEvent final : public FRedPointEvent
{
public:
	uint8                                         Pad_35B1[0x8];                                     // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_Wertheimer
// 0x0010 (0x0018 - 0x0008)
struct FItemToolData_Wertheimer final : public FItemToolDataBase
{
public:
	class FName                                   TowerID;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WertheimerValue;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35B2[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ServerAISpawnInfo
// 0x001C (0x001C - 0x0000)
struct alignas(0x04) FServerAISpawnInfo final
{
public:
	uint8                                         Pad_35B3[0x1C];                                    // 0x0000(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MovementModeAnimOverride
// 0x0010 (0x0010 - 0x0000)
struct FMovementModeAnimOverride final
{
public:
	class UAnimSequence*                          StationaryAnimSequence;                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                            MoveBlendSpace;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ElementParticleParams
// 0x0080 (0x0080 - 0x0000)
struct FElementParticleParams final
{
public:
	class UNiagaraSystem*                         ElementParticles[0x9];                             // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LocationOffset;                                    // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Scale;                                             // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BossStageCondition
// 0x000C (0x000C - 0x0000)
struct FBossStageCondition final
{
public:
	EBossStageCond                                StageCondType;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePercent;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35B4[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHTCmpCond                             CmpCondition;                                      // 0x0004(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BossStageEntry
// 0x0088 (0x0088 - 0x0000)
struct FBossStageEntry final
{
public:
	EWeaponSlotType                               WeaponSlot;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35B5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HPThreshold;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bHPThresholdIsPercentage : 1;                      // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_35B6[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ActiveAfterBattleTime;                             // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StageTimeBeforeEnteringNewStage;                   // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewStageIndexAfterStageTime;                       // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageTakenThreshold;                              // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewStageIndexAfterTakingDamage;                    // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           StageBeginAnim;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           StageEndAnim;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>    StageBuffs;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bRemoveBuffWhenStageEnded;                         // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35B7[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AHTAICharacter>          OwnerCharacter;                                    // 0x0044(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanBreakPoint;                                    // 0x004C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStageEnabled;                                     // 0x004D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnterNeedWaitMontageEnd;                          // 0x004E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35B8[0x1];                                     // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 OnlyAvailableAtCertainStages;                      // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	EBossStage                                    BossStageType;                                     // 0x0060(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35B9[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBossStageCondition>            BossStageConditions;                               // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_35BA[0x10];                                    // 0x0078(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTRedPointConfig
// 0x0010 (0x0010 - 0x0000)
struct FHTRedPointConfig final
{
public:
	TArray<class FName>                           SubRedPointTypeArray;                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CityShopBrandData
// 0x0078 (0x0080 - 0x0008)
struct FCityShopBrandData final : public FTableRowBase
{
public:
	class FName                                   BrandUnqiueID;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   BrandName;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   VipItemID;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   VipItemDes;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              VipItemIcon;                                       // 0x0038(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CurrencyItemID;                                    // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowIntegral;                                     // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35BB[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   VipLevelTips;                                      // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointConditionCharacterBreakthrough
// 0x0000 (0x0008 - 0x0008)
struct FRedPointConditionCharacterBreakthrough final : public FRedPointCondition
{
};

// ScriptStruct HTGame.VisionCompletedRecordContentData
// 0x0028 (0x0028 - 0x0000)
struct FVisionCompletedRecordContentData final
{
public:
	int32                                         Days;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35BC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVisionRecordContentData               RecordContent;                                     // 0x0008(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ShieldRainDelayTime
// 0x0008 (0x0008 - 0x0000)
struct FShieldRainDelayTime final
{
public:
	float                                         Min;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Max;                                               // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CloneSystemExtensionData
// 0x0050 (0x0050 - 0x0000)
struct FCloneSystemExtensionData final
{
public:
	class FString                                 CloneMainFormSlot;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EnterCloneTipsUI;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CloneChallengeResultUI;                            // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CloneChallengeResultFailedUI;                      // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CloneAwardUI;                                      // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ShieldRainRandAnimEntry
// 0x0010 (0x0010 - 0x0000)
struct FShieldRainRandAnimEntry final
{
public:
	class UAnimMontage*                           Anim;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35BD[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_Music
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_Music final : public FItemToolDataBase
{
public:
	class FName                                   MusicId;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NetFightInfoContainer
// 0x0060 (0x0060 - 0x0000)
struct alignas(0x08) FNetFightInfoContainer final
{
public:
	uint8                                         Pad_35BE[0x60];                                    // 0x0000(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ThreatenLookTargetTime
// 0x0008 (0x0008 - 0x0000)
struct FThreatenLookTargetTime final
{
public:
	float                                         Min;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Max;                                               // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AggroEngry
// 0x0014 (0x0014 - 0x0000)
struct FAggroEngry final
{
public:
	TWeakObjectPtr<class AActor>                  Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AggroValue;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35BF[0x8];                                     // 0x000C(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_ActiveLikeability
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_ActiveLikeability final : public FItemToolDataBase
{
public:
	class FName                                   LikeabilityID;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTClientActiveGE
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x04) FHTClientActiveGE final
{
public:
	uint8                                         Pad_35C0[0x10];                                    // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AIBattleIdleBehaviorCondition
// 0x0001 (0x0001 - 0x0000)
struct FAIBattleIdleBehaviorCondition final
{
public:
	EAIBattleIdleBehaviorConditionType            ConditionType;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ModifyDataStruct
// 0x0014 (0x0014 - 0x0000)
struct FModifyDataStruct final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PropValue;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModifyModOp                                  ModifierOp;                                        // 0x000C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35C1[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SortKey;                                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AIBattleIdleBehavior
// 0x0028 (0x0028 - 0x0000)
struct FAIBattleIdleBehavior final
{
public:
	class UBehaviorTree*                          BehaviorTree;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIBattleIdleBehaviorCondition         BehaviorCondition;                                 // 0x0008(0x0001)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_35C2[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           MontageToPlay;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CoolDownTime;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35C3[0x8];                                     // 0x0020(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTChaosRange
// 0x00D0 (0x00D0 - 0x0000)
struct FHTChaosRange final
{
public:
	struct FVector                                BoxExtent;                                         // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35C4[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BoxTransform;                                      // 0x0020(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HalfYawAngleRange;                                 // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HalfPitchAngleRange;                               // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35C5[0x44];                                    // 0x008C(0x0044)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PhysicsFloatingEffectParams
// 0x0180 (0x0180 - 0x0000)
struct FPhysicsFloatingEffectParams final
{
public:
	struct FHTChaosRange                          Range;                                             // 0x0000(0x00D0)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                         FloatingHeightFromBoxBottom;                       // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatingHalfRange;                                 // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DisableGravity;                                    // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35C6[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HorizontalMaxSpeed;                                // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAngularSpeed;                                   // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35C7[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     LocalZ_Speed_Curve;                                // 0x00E8(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x0170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxMassCanFloat;                                   // 0x0174(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35C8[0x8];                                     // 0x0178(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SkillReleaseConditionParam
// 0x0140 (0x0140 - 0x0000)
struct FSkillReleaseConditionParam final
{
public:
	float                                         MinDistanceToRelease;                              // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDistanceToRelease;                              // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDistanceZToRelease;                             // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDistanceZToRelease;                             // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyAllowAboveTarget;                             // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyAllowBelowTarget;                             // 0x0011(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomAngleRange;                              // 0x0012(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35C9[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxAngleOffset;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinAngleOffset;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAISkillDirectionLimit                        DirectionLimit;                                    // 0x001C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35CA[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFloatRange>                    CustomAngleRanges;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bCantReleaseWhenTurningInPlace;                    // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCantReleaseWhenTargetInDeepWater;                 // 0x0031(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35CB[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CoolDownTime;                                      // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                FireLocationOffset;                                // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 AvailableBossStages;                               // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<int32, float>                            AvailableAfterStageTime;                           // 0x0060(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bCantReleaseWhenArmorShieldOpened;                 // 0x00B0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReleaseOnlyWhenChannelingFinsished;               // 0x00B1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedDetectObstacles;                              // 0x00B2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35CC[0xD];                                     // 0x00B3(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ObstaclesDetectTrans;                              // 0x00C0(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ObstaclesDetectBoxHalfSize;                        // 0x0120(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReleaseOnlyWhenRageFull;                          // 0x0138(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35CD[0x7];                                     // 0x0139(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TriggerFunctionUnlock
// 0x0008 (0x0020 - 0x0018)
struct FTriggerFunctionUnlock final : public FTriggerTypeCondition
{
public:
	class FName                                   FunctionID;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TenacityBreakCameraSettings
// 0x0058 (0x0328 - 0x02D0)
struct FTenacityBreakCameraSettings final : public FCameraSettings
{
public:
	float                                         TenacityBreakInTime;                               // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35CE[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraInterpolationSetting            TenacityBreakInArmLengthSetting;                   // 0x02D8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         TenacityBreakOutTime;                              // 0x02F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35CF[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraInterpolationSetting            TenacityBreakOutArmLengthSetting;                  // 0x0300(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnToOrginArmLength;                            // 0x0320(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35D0[0x7];                                     // 0x0321(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CharacterAttributeActivateData
// 0x0078 (0x0078 - 0x0000)
struct FCharacterAttributeActivateData final
{
public:
	class FName                                   AttributeID;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Name;                                              // 0x0030(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RequireTupoLevel;                                  // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CapitalId;                                         // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         CostMoney;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHTCommonIdNumber>              ActivateCostItems;                                 // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HottaQueryAIAggro
// 0x000C (0x000C - 0x0000)
struct FHottaQueryAIAggro final
{
public:
	class FName                                   AggroTargetName;                                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AggroValue;                                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EquipmentCoreRandomAttributeData
// 0x0010 (0x0018 - 0x0008)
struct FEquipmentCoreRandomAttributeData final : public FTableRowBase
{
public:
	class FText                                   Content;                                           // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModule_Suspension
// 0x0020 (0x0020 - 0x0000)
struct FVehicleModule_Suspension final : public FVehicleModule_Base
{
public:
	float                                         MaxRaise_Front;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDrop_Front;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamingRatio_Front;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpringRate_Front;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRaise_Rear;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDrop_Rear;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamingRatio_Rear;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpringRate_Rear;                                   // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PlayerCloneData
// 0x0038 (0x0038 - 0x0000)
struct FPlayerCloneData final
{
public:
	int64                                         PlayerRoleID;                                      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsChallengingClone;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35D1[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChallengeSingleCloneRemainingTime;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCloneChallengeSucess;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsReceiveCloneAward;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35D2[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CloneUniqueID;                                     // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsReChallenge;                                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35D3[0xF];                                     // 0x0029(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HottaQueryAIData
// 0x0020 (0x0020 - 0x0000)
struct FHottaQueryAIData final
{
public:
	float                                         DistToSpawnPoint;                                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistToTarget;                                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChaseRange;                                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeaveBattleRange;                                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHottaQueryAIAggro>             AggroList;                                         // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModulePropsData_Particle
// 0x0030 (0x0030 - 0x0000)
struct FVehicleModulePropsData_Particle final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          PropValue;                                         // 0x0008(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LoadingCameraSettings
// 0x0010 (0x02E0 - 0x02D0)
struct FLoadingCameraSettings final : public FCameraSettings
{
public:
	float                                         InitialTargetArmLength;                            // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EveryFrameTargetArmLength;                         // 0x02D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialSocketOffsetZ;                              // 0x02D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EveryFrameSocketOffsetZ;                           // 0x02DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AIIdleStateConditionEntry
// 0x0020 (0x0020 - 0x0000)
struct FAIIdleStateConditionEntry final
{
public:
	EAIIdleStateConditionType                     ConditionType;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35D4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CondtionParam;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReverseCondition;                                 // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35D5[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoreItemRepertoryInfo
// 0x0014 (0x0014 - 0x0000)
struct alignas(0x04) FStoreItemRepertoryInfo final
{
public:
	uint8                                         Pad_35D6[0x14];                                    // 0x0000(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AIIdleStateConditionConfig
// 0x0018 (0x0018 - 0x0000)
struct FAIIdleStateConditionConfig final
{
public:
	EConditionResultsOperation                    ReturnValueOperation;                              // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35D7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAIIdleStateConditionEntry>     ConditionEntries;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.InstancedStructTest2
// 0x0007 (0x0008 - 0x0001)
struct FInstancedStructTest2 final : public FInstancedStructTestBase
{
public:
	uint8                                         Pad_35D8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FloatVaue;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UICharacterAbilityUpgradeCostItem
// 0x0010 (0x0010 - 0x0000)
struct FUICharacterAbilityUpgradeCostItem final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ItemCount;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UICharacterAbilityUpgradeLevelCostItem
// 0x0030 (0x0030 - 0x0000)
struct FUICharacterAbilityUpgradeLevelCostItem final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CapitalId;                                         // 0x0004(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35D9[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CostMoney;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RequireTupoLevel;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35DA[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUICharacterAbilityUpgradeCostItem> CostItems;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AIIdleStateConditionContainer
// 0x0018 (0x0018 - 0x0000)
struct FAIIdleStateConditionContainer final
{
public:
	EConditionResultsOperation                    ReturnValueOperation;                              // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35DB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAIIdleStateConditionConfig>    ConditionConfigs;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ReactionData
// 0x000C (0x000C - 0x0000)
struct FReactionData final
{
public:
	EReactionResultType                           ReactionFinalResult;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35DC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ReactionPlayerCharacterID;                         // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TrackAreaParams
// 0x0100 (0x0100 - 0x0000)
struct alignas(0x08) FTrackAreaParams final
{
public:
	uint8                                         Pad_35DD[0x100];                                   // 0x0000(0x0100)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AIIdleStateStartAnimEntry
// 0x0010 (0x0010 - 0x0000)
struct FAIIdleStateStartAnimEntry final
{
public:
	TSubclassOf<class UHTAIIdleStateBase>         PreviousState;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Anim;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisualSpawnEntry
// 0x0098 (0x0098 - 0x0000)
struct FVisualSpawnEntry final
{
public:
	TSoftClassPtr<class UClass>                   VisualTemplate;                                    // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35DE[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     SpawnTransformPointsOverride;                      // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	float                                         SpawnProbability;                                  // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerNearbyCheckRadius;                           // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, class FName>                      SpawnPointsName;                                   // 0x0048(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DataRegistryAcquireItem
// 0x0038 (0x0038 - 0x0000)
struct FDataRegistryAcquireItem final
{
public:
	struct FDataRegistryId                        ItemID;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataRegistryLookup                    ResolvedLookup;                                    // 0x0010(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDataRegistryAcquireStatus                    Status;                                            // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35DF[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AIGuardReaction
// 0x00C0 (0x00C0 - 0x0000)
struct FAIGuardReaction final
{
public:
	int32                                         NumMin;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35E0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomAnimEntry                       AnimEntry;                                         // 0x0008(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>    Buffs;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bTeleportPlayer;                                   // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35E1[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TeleportDelayTime;                                 // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             TeleportTrans;                                     // 0x0040(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   BlackScreenTxt;                                    // 0x00A0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         BlackScreenDuration;                               // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35E2[0xC];                                     // 0x00B4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VehicleModulePropsData_StaticMesh
// 0x0030 (0x0030 - 0x0000)
struct FVehicleModulePropsData_StaticMesh final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             PropValue;                                         // 0x0008(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModule_BodyKit
// 0x0038 (0x0038 - 0x0000)
struct FVehicleModule_BodyKit final : public FVehicleModule_Base
{
public:
	struct FVehicleModulePropsData_StaticMesh     KitMesh;                                           // 0x0000(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   TargetSocket;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CrowdAttentionLocation
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FCrowdAttentionLocation final
{
public:
	uint8                                         Pad_35E3[0x28];                                    // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ClientRepRecoverData
// 0x0030 (0x0030 - 0x0000)
struct FClientRepRecoverData final
{
public:
	struct FCharacterForNet                       NetTarget;                                         // 0x0000(0x002C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FCurHealth;                                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OptimalAzimuthData
// 0x01B0 (0x01B0 - 0x0000)
struct alignas(0x08) FOptimalAzimuthData final
{
public:
	uint8                                         Pad_35E4[0x1B0];                                   // 0x0000(0x01B0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AISpawnerChangeConfig
// 0x0010 (0x0018 - 0x0008)
struct FAISpawnerChangeConfig final : public FTableRowBase
{
public:
	TArray<struct FAISpawnEntry>                  SpawnEntries;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AISpawnerChangeAllConfig
// 0x0010 (0x0018 - 0x0008)
struct FAISpawnerChangeAllConfig final : public FTableRowBase
{
public:
	TArray<struct FAISpawnWaveEntry>              SpawnWaveEntriesOverride;                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCrowdMassLookAtAttentionTask
// 0x0010 (0x0038 - 0x0028)
struct FHTCrowdMassLookAtAttentionTask final : public FMassStateTreeTaskBase
{
public:
	uint8                                         Pad_35E5[0x10];                                    // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SettingComboBoxOptionData_Base
// 0x0000 (0x0000 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x01) FSettingComboBoxOptionData_Base
{
};
#pragma pack(pop)

// ScriptStruct HTGame.SettingComboBoxOptionData_RT
// 0x0001 (0x0001 - 0x0000)
struct FSettingComboBoxOptionData_RT final : public FSettingComboBoxOptionData_Base
{
public:
	ERTQuality                                    RTQuality;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AISpawnVolumeRandom
// 0x0018 (0x0018 - 0x0000)
struct FAISpawnVolumeRandom final
{
public:
	class AHTAISpawnVolume*                       SpawnVolume;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomCountMax;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomizedCount;                                   // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35E6[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AISpawnTimespanQuantum
// 0x0008 (0x0008 - 0x0000)
struct FAISpawnTimespanQuantum final
{
public:
	float                                         StartTime;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTime;                                           // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DescriptionContent_Base
// 0x0000 (0x0000 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x01) FDescriptionContent_Base
{
};
#pragma pack(pop)

// ScriptStruct HTGame.ReplicatedTrafficLightAgent
// 0x0010 (0x0038 - 0x0028)
struct FReplicatedTrafficLightAgent final : public FReplicatedAgentBase
{
public:
	TArray<struct FMassTrafficLight>              TrafficLights;                                     // 0x0028(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct HTGame.TrafficLightFastArrayItem
// 0x0038 (0x0048 - 0x0010)
struct FTrafficLightFastArrayItem final : public FMassFastArrayItemBase
{
public:
	struct FReplicatedTrafficLightAgent           Agent;                                             // 0x0010(0x0038)(NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DivinationTalentAddData
// 0x0020 (0x0020 - 0x0000)
struct FDivinationTalentAddData final
{
public:
	class FName                                   DataID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETalentDataType                               DataType;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35E7[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AddValue;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DataDesc;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AkEventArray
// 0x0010 (0x0010 - 0x0000)
struct FAkEventArray final
{
public:
	TArray<class UAkAudioEvent*>                  AkEvents;                                          // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModuleData
// 0x00C0 (0x00C8 - 0x0008)
struct FVehicleModuleData final : public FTableRowBase
{
public:
	class FName                                   ModuleID;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VehicleID;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ModuleName;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       ModuleProps;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EVehicleModuleType                            ModuleType;                                        // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasDefault;                                       // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35E8[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurrencyID;                                        // 0x004C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ModulePrice;                                       // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ModifyCostId;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ModifyPrice;                                       // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35E9[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              UnLockNormalIcon;                                  // 0x0068(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              UnLockSelectedIcon;                                // 0x0090(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       CityShopExtensionData;                             // 0x00B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DivinationAbilitySub
// 0x0038 (0x0088 - 0x0050)
struct FDivinationAbilitySub final : public FDivinationSubBase
{
public:
	class FText                                   BufferName;                                        // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   GameplayEffectClass;                               // 0x0060(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.KNNDataPoint
// 0x0020 (0x0020 - 0x0000)
struct FKNNDataPoint final
{
public:
	TArray<float>                                 Features;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 TargetValues;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCrowdCharacterMassStandTask
// 0x0030 (0x0058 - 0x0028)
struct FHTCrowdCharacterMassStandTask final : public FMassStateTreeTaskBase
{
public:
	uint8                                         Pad_35EA[0x30];                                    // 0x0028(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CollectFootLandDistanceData
// 0x0048 (0x0048 - 0x0000)
struct FCollectFootLandDistanceData final
{
public:
	float                                         FootLDistance;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootRDistance;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bCanFootLLandZ;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bCanFootRLandZ;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootLLandZ;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootRLandZ;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanFootLLand;                                     // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanFootRLand;                                     // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35EB[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFootLandDistanceDT>            FootLandDistanceLDatas;                            // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFootLandDistanceDT>            FootLandDistanceRDatas;                            // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         DataIndex;                                         // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35EC[0x4];                                     // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CollectFootLandDistanceDT
// 0x01B8 (0x01C0 - 0x0008)
struct FCollectFootLandDistanceDT final : public FTableRowBase
{
public:
	bool                                          bIsFootL;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35ED[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFootLandDistanceDT                    FootLandDistanceData;                              // 0x0010(0x01A0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         FootLandDisntance;                                 // 0x01B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35EE[0xC];                                     // 0x01B4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SettingOptionSliderDataRow
// 0x0008 (0x0010 - 0x0008)
struct FSettingOptionSliderDataRow final : public FTableRowBase
{
public:
	int32                                         DefaultValue;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35EF[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTAnimLayerBaseProxy
// 0x0000 (0x0740 - 0x0740)
struct FHTAnimLayerBaseProxy final : public FAnimInstanceProxy
{
};

// ScriptStruct HTGame.PreviewLightSetting
// 0x0030 (0x0030 - 0x0000)
struct FPreviewLightSetting final
{
public:
	float                                         AmbientBrightness;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 AmbientLightColor;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTextureCube>            AmbientCubeMap;                                    // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TrafficVehicleSoundActivatedTag
// 0x0000 (0x0001 - 0x0001)
struct FTrafficVehicleSoundActivatedTag final : public FMassTag
{
};

// ScriptStruct HTGame.DynamicMusicVolumeData
// 0x0020 (0x0020 - 0x0000)
struct FDynamicMusicVolumeData final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class AHTDynamicMusicVolumeActor> HottaDynamicAreaMusicClass;                        // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAnimNode_BlendListByCurve
// 0x0008 (0x0050 - 0x0048)
struct FHTAnimNode_BlendListByCurve final : public FAnimNode_BlendListBase
{
public:
	bool                                          bActiveValue;                                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_35F0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MassStreetLampTypeData
// 0x00A0 (0x00A0 - 0x0000)
struct FMassStreetLampTypeData final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35F1[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStaticMeshInstanceVisualizationDesc   StaticMeshInstanceDesc;                            // 0x0010(0x0080)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FMassStreetLampUnitData>        StreetLampUnits;                                   // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DivinationTalent
// 0x0088 (0x0090 - 0x0008)
struct FDivinationTalent final : public FTableRowBase
{
public:
	class FText                                   Desc;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FDivinationTalentAddData>       DataInfo;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSet<class FName>                             PreTalentIDs;                                      // 0x0028(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   LevelUpTalentID;                                   // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TalentLevel;                                       // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxLevel;                                          // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DisplayPosition;                                   // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Cost;                                              // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAnimNode_OrientationWarping
// 0x0030 (0x0250 - 0x0220)
struct FHTAnimNode_OrientationWarping final : public FAnimNode_OrientationWarping
{
public:
	TArray<class FName>                           HTSpineBonesNames;                                 // 0x0220(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   HTIKFootRootBone;                                  // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           HTIKFootBones;                                     // 0x0238(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_35F2[0x8];                                     // 0x0248(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RandomModifyDataStruct
// 0x000C (0x000C - 0x0000)
struct FRandomModifyDataStruct final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WeightValue;                                       // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RandomModifyStaticData
// 0x0010 (0x0018 - 0x0008)
struct FRandomModifyStaticData final : public FTableRowBase
{
public:
	TArray<struct FRandomModifyDataStruct>        ModifyData;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TrajectoryData
// 0x00A0 (0x00A0 - 0x0000)
struct FTrajectoryData final
{
public:
	bool                                          HideMesh;                                          // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35F3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UseTime;                                           // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          PSTemplate;                                        // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             PSTemplateOffset;                                  // 0x0030(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PSTemplateAttachWeaponSocketName;                  // 0x0090(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                        NewAnimToPlay;                                     // 0x0098(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DivinationTreasureSub
// 0x0008 (0x0058 - 0x0050)
struct FDivinationTreasureSub final : public FDivinationSubBase
{
public:
	class FName                                   TreasureID;                                        // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SettingComboBoxOptionLimitOptionData
// 0x0020 (0x0020 - 0x0000)
struct FSettingComboBoxOptionLimitOptionData final
{
public:
	struct FInt32Range                            LimitOptionIndexRange;                             // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 LimitOptionIndexes;                                // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SettingOptionComboBoxData
// 0x0080 (0x0080 - 0x0000)
struct FSettingOptionComboBoxData final
{
public:
	class FText                                   OptionShowName;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                 OptionData;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FSettingComboBoxOptionLimitOptionData> LimitOptionData;                                   // 0x0020(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       OptionInstancedData;                               // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SettingComboBoxOptionLimitInfo
// 0x0020 (0x0020 - 0x0000)
struct FSettingComboBoxOptionLimitInfo final
{
public:
	TArray<int32>                                 LimitOptionIndexes;                                // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSettingOptionComboBoxData>     LimitOptionDatas;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AnimSharingSequences
// 0x0008 (0x0008 - 0x0000)
struct FAnimSharingSequences final
{
public:
	class UAnimSequence*                          Idle;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BossMusicVolumeData
// 0x0020 (0x0020 - 0x0000)
struct FBossMusicVolumeData final
{
public:
	struct FRotator                               VolumeRotator;                                     // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class AHTBossMusicVolumeActor>    HTBossMusicVolumeClass;                            // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AnHunZhouConfigDataStruct
// 0x0024 (0x0024 - 0x0000)
struct FAnHunZhouConfigDataStruct final
{
public:
	float                                         UnbalRatio;                                        // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReactionUnbalCoeff_1;                              // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReactionUnbalCoeff_2;                              // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReactionUnbalCoeff_3;                              // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ConfigUnbalValue;                                  // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ConfigUnbalFixCoe;                                 // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GreaterPlayerLevelCoe;                             // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NGreaterPlayerLevelValue;                          // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GreaterPlayerLevelValueCoe;                        // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTInstanceComponents
// 0x0010 (0x0010 - 0x0000)
struct FHTInstanceComponents final
{
public:
	TArray<class UActorComponent*>                InstanceDeleteComponents;                          // 0x0000(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TempCustomTimeDilationParams
// 0x00E8 (0x00E8 - 0x0000)
struct FTempCustomTimeDilationParams final
{
public:
	bool                                          bBlendNewDilation;                                 // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35F4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NewDilation;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAlphaBlend                            DilationBlend;                                     // 0x0008(0x0030)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35F5[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DilationCurve;                                     // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     DilationFloatCurve;                                // 0x0048(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bResetOnComplete;                                  // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECustomTimeDilationType                       DilationType;                                      // 0x00D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecoverExisting;                                  // 0x00D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReplicate;                                        // 0x00D3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsedParticle;                                     // 0x00D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35F6[0x13];                                    // 0x00D5(0x0013)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RunningCameraSettings
// 0x00F0 (0x03C0 - 0x02D0)
struct FRunningCameraSettings final : public FCameraSettings
{
public:
	struct FCameraInterpolationSetting            SprintingArmLength;                                // 0x02D0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            SprintingLagMaxDistance;                           // 0x02F0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            SprintingLagSpeed;                                 // 0x0310(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            JumpingLagMaxDistance;                             // 0x0330(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         MinPlayerInput;                                    // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35F7[0x4];                                     // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           SprintingLagMaxdistanceCurveVectorValue;           // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LagMaxdistanceBiasEnableYawDiff;                   // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35F8[0x4];                                     // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            LagMaxdistanceBiasCurveFloatValue;                 // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                           LagMaxdistanceBiasControllerPitchCurveVectorValue; // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            EnterRunningLagSpeed;                              // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            ExitRunningLagSpeed;                               // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EnterCameraLagMaxDistanceSpeed;                    // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExitLagSpeedSpeed;                                 // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EnterActivedYawDiff;                               // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActiveNewSetting;                                 // 0x0394(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35F9[0x3];                                     // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           NewMaxLagDistance;                                 // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                           NewGaitWalkMaxLagDistance;                         // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTestLag;                                          // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewVersionRunning;                                // 0x03A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35FA[0x6];                                     // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           NewVersionMaxLagDistance;                          // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                           NewVersionLagSpeed;                                // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SumHeterochromeData
// 0x0018 (0x0018 - 0x0000)
struct FSumHeterochromeData final
{
public:
	float                                         SumCosmosMax;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SumNatureMax;                                      // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SumIncantationMax;                                 // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SumChaosMax;                                       // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SumPsycheMax;                                      // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SumLakshanaMax;                                    // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LockingTargetCameraSettings
// 0x0008 (0x02D8 - 0x02D0)
struct FLockingTargetCameraSettings final : public FCameraSettings
{
public:
	float                                         EveryframeModifyPitch;                             // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35FB[0x4];                                     // 0x02D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.JumpCameraSettings
// 0x0008 (0x02D8 - 0x02D0)
struct FJumpCameraSettings final : public FCameraSettings
{
public:
	float                                         AdditionalTargetArmLength;                         // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTargetArmLength;                                // 0x02D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TimeClockCameraSettings
// 0x0008 (0x02D8 - 0x02D0)
struct FTimeClockCameraSettings final : public FCameraSettings
{
public:
	float                                         TargeOffsetZSpeed;                                 // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CheckRadius;                                       // 0x02D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTActiveGameplayEffectSingleTimeHandle
// 0x0014 (0x0014 - 0x0000)
struct FHTActiveGameplayEffectSingleTimeHandle final
{
public:
	struct FActiveGameplayEffectHandle            ActiveGameplayEffectHandle;                        // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SingleAddStartTime;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SingleDurationTime;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsValid;                                          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35FC[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ActiveGameplayEffectSingleTimeArray
// 0x0018 (0x0018 - 0x0000)
struct FActiveGameplayEffectSingleTimeArray final
{
public:
	TArray<struct FHTActiveGameplayEffectSingleTimeHandle> ActiveGameplayEffectSingleTimeHandles;             // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReplicationID;                                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35FD[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CarThirdPersonCameraSettings
// 0x0010 (0x02E0 - 0x02D0)
struct FCarThirdPersonCameraSettings final : public FCameraSettings
{
public:
	float                                         AutoAdjustRotationTime;                            // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TriggerInputThreshold;                             // 0x02D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoAdjustRotationVelocity;                        // 0x02D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35FE[0x4];                                     // 0x02DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CacheAbilityInputInfo
// 0x0010 (0x0010 - 0x0000)
struct FCacheAbilityInputInfo final
{
public:
	double                                        TriggerGameTime;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPressOrRelease;                                   // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35FF[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CacheAbilityInputHistory
// 0x0018 (0x0018 - 0x0000)
struct FCacheAbilityInputHistory final
{
public:
	TArray<struct FCacheAbilityInputInfo>         AbilityInputHistory;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         TailIdx;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3600[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.InstancedStructTest1
// 0x0007 (0x0008 - 0x0001)
struct FInstancedStructTest1 final : public FInstancedStructTestBase
{
public:
	uint8                                         Pad_3601[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IntVaue;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BossCameraSettings
// 0x0008 (0x02D8 - 0x02D0)
struct FBossCameraSettings final : public FCameraSettings
{
public:
	float                                         AdjustYawMaxDistance;                              // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForceEnterDistance;                                // 0x02D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ClimbCameraSettings
// 0x0000 (0x02D0 - 0x02D0)
struct FClimbCameraSettings final : public FCameraSettings
{
};

// ScriptStruct HTGame.AkComponentData
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FAkComponentData final
{
public:
	uint8                                         Pad_3602[0x38];                                    // 0x0000(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AkComponentDataInfo
// 0x0010 (0x0010 - 0x0000)
struct FAkComponentDataInfo final
{
public:
	TArray<struct FAkComponentData>               AKDatas;                                           // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LockNpcCameraSettings
// 0x0008 (0x02D8 - 0x02D0)
struct FLockNpcCameraSettings final : public FCameraSettings
{
public:
	float                                         ReturnPitchSpeed;                                  // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3603[0x4];                                     // 0x02D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CameraCollision
// 0x000C (0x000C - 0x0000)
struct alignas(0x04) FCameraCollision final
{
public:
	uint8                                         Pad_3604[0xC];                                     // 0x0000(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SingleSelfSetting
// 0x0040 (0x0040 - 0x0000)
struct FSingleSelfSetting final
{
public:
	struct FGameplayTagContainer                  Tag;                                               // 0x0000(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FCameraInterpolationSetting            CameraSetting;                                     // 0x0020(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HitPauseData
// 0x0018 (0x0018 - 0x0000)
struct FHitPauseData final
{
public:
	float                                         DelayTime;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AttackDilationTime;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AttackDilationRate;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForcePlay;                                        // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3605[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            RateCurve;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HitPauseDelayData
// 0x0020 (0x0020 - 0x0000)
struct FHitPauseDelayData final
{
public:
	class AHTAbilityCharacter*                    TriggerCharacer;                                   // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitPauseData                          HitPauseData;                                      // 0x0008(0x0018)(NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTSelfieCameraConfigs
// 0x0110 (0x0110 - 0x0000)
struct FHTSelfieCameraConfigs final
{
public:
	uint8                                         Pad_3606[0x18];                                    // 0x0000(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ResetYawSpeed;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResetPitchSpeed;                                   // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RightSpeed;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FowardSpeed;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TouchYawSpeed;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TouchPitchSpeed;                                   // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadYawSpeed;                                   // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GamepadPitchSpeed;                                 // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               CameraMinRotation;                                 // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               CameraMaxRotation;                                 // 0x0050(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         FOVSpeed;                                          // 0x0068(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceSpeed;                                     // 0x006C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScrollSpeed;                                       // 0x0070(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResetSelfieRotatorSpeed;                           // 0x0074(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResetSelfieRotatorTolerance;                       // 0x0078(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3607[0x24];                                    // 0x007C(0x0024)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SearchEffectActorClass;                            // 0x00A0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   ForbiddenEffectActorClass;                         // 0x00C8(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelfieActivityShowSelf;                           // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelfieActivityShowFriendNpc;                      // 0x00F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelfieActivityShowMonster;                        // 0x00F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelfieActivityShowWeapon;                         // 0x00F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelfieActivityOpenDof;                            // 0x00F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelfieActivityCameraVirtual;                      // 0x00F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelfieActivityShowWatermark;                      // 0x00F6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelfieActivityFaceToCamera;                       // 0x00F7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3608[0x4];                                     // 0x00F8(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ZoomOutCoefficient;                                // 0x00FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomInCoefficient;                                 // 0x0100(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomInMaxDistance;                                 // 0x0104(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomOutMaxDistance;                                // 0x0108(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomInMaxFov;                                      // 0x010C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraCondition_And
// 0x0010 (0x0018 - 0x0008)
struct FHTCameraCondition_And final : public FHTCameraCondition
{
public:
	TArray<struct FInstancedStruct>               Conditions;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HitSuppressParam
// 0x0050 (0x0050 - 0x0000)
struct FHitSuppressParam final
{
public:
	struct FScalableFloat                         Duration;                                          // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   SuppressStartSection;                              // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SuppressLoopSection;                               // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SuppressHitSection;                                // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SuppressEndSection;                                // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DownAccSpeedScale;                                 // 0x0048(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3609[0x4];                                     // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.UnbalBreakStaticParam
// 0x0030 (0x0030 - 0x0000)
struct FUnbalBreakStaticParam final
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>    UnbalGameplayEffects;                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            UnbalGameplayEffectDamage;                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UnbalLevelCurveName;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalMaxCoef;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalIntensityCoef1;                               // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalIntensityCoef2;                               // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalIntensityCoef3;                               // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTSelfieWeather
// 0x0050 (0x0050 - 0x0000)
struct FHTSelfieWeather final
{
public:
	TSoftObjectPtr<class UTexture2D>              WeatherIcon;                                       // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              UnSelectedWeatherIcon;                             // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTSelfieFilter
// 0x0910 (0x0910 - 0x0000)
struct FHTSelfieFilter final
{
public:
	TSoftObjectPtr<class UTexture2D>              FilterIcon;                                        // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_360A[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   FilterSetting;                                     // 0x0030(0x08E0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTSelfie
// 0x0060 (0x0068 - 0x0008)
struct FHTSelfie final : public FTableRowBase
{
public:
	TArray<struct FHTSelfiePose>                  PoseArray;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FHTSelfieWeather>               WeatherArray;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UTexture2D>>      TextboxArray;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UTexture2D>>      PictureArray;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UTexture2D>>      BorderArray;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FHTSelfieFilter>                FilterArray;                                       // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraCarAutoAdjustRotationTask
// 0x0000 (0x0008 - 0x0008)
struct FHTCameraCarAutoAdjustRotationTask final : public FHTCameraTask
{
};

// ScriptStruct HTGame.RestrainUnbalWeakTypes
// 0x0018 (0x0020 - 0x0008)
struct FRestrainUnbalWeakTypes final : public FTableRowBase
{
public:
	EUnbalBarType                                 UnbalType;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_360B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EExecutionDamageTypeEX>                WeakDamageTypesArray;                              // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraValueProviderFunctionDivide
// 0x0020 (0x0028 - 0x0008)
struct FHTCameraValueProviderFunctionDivide final : public FHTCameraValueProvider
{
public:
	struct FInstancedStruct                       A;                                                 // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       B;                                                 // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StrengthConsumeData
// 0x0008 (0x0008 - 0x0000)
struct FStrengthConsumeData final
{
public:
	float                                         XYAxisConsume;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZAxisConsume;                                      // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCameraValueProviderFunctionMax
// 0x0020 (0x0028 - 0x0008)
struct FHTCameraValueProviderFunctionMax final : public FHTCameraValueProvider
{
public:
	struct FInstancedStruct                       A;                                                 // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       B;                                                 // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AirFightMonsterTable
// 0x0040 (0x0048 - 0x0008)
struct FAirFightMonsterTable final : public FTableRowBase
{
public:
	class FName                                   MonsterID;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   SapwnMonsterClass;                                 // 0x0010(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MonsterLevel;                                      // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MonsterPackID;                                     // 0x003C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_360C[0x4];                                     // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCameraValueProviderBlackboard
// 0x0000 (0x0008 - 0x0008)
struct FHTCameraValueProviderBlackboard final : public FHTCameraValueProvider
{
};

// ScriptStruct HTGame.AITimeConfig
// 0x0008 (0x0008 - 0x0000)
struct FAITimeConfig final
{
public:
	float                                         StartTime;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTime;                                           // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CityShopLevelData
// 0x0040 (0x0048 - 0x0008)
struct FCityShopLevelData final : public FTableRowBase
{
public:
	class FName                                   BrandUnqiueID;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   NewBrandName;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         CityShopLevel;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalExp;                                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAwardInfo>                     AwardInfos;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   FriendlyTips;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CityShopQuestData
// 0x0060 (0x0068 - 0x0008)
struct FCityShopQuestData final : public FTableRowBase
{
public:
	class FName                                   CityUnqiueID;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   NewCityName;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   BrandUnqiueID;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   NewBrandName;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   QuestId;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   QuestDes;                                          // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         VipLevelMin;                                       // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VipLevelMax;                                       // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Integral;                                          // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AddExp;                                            // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_360D[0x4];                                     // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GuangXiangReactionExpendOneData
// 0x0008 (0x0020 - 0x0018)
struct FGuangXiangReactionExpendOneData final : public FReactinData
{
public:
	float                                         RecoveSpeedMult;                                   // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_360E[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GECustomModifierData
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FGECustomModifierData final
{
public:
	uint8                                         Pad_360F[0x50];                                    // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestMusicData
// 0x0058 (0x0060 - 0x0008)
struct FQuestMusicData final : public FTableRowBase
{
public:
	class FName                                   BeginQuestID;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EndQuestID;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           MusicEvent;                                        // 0x0018(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MusicStateGroup;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MusicState;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Desc;                                              // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AttackerAbilityInfo
// 0x0070 (0x0070 - 0x0000)
struct alignas(0x08) FAttackerAbilityInfo final
{
public:
	uint8                                         Pad_3610[0x70];                                    // 0x0000(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GreetRandomNPCMsgEntry
// 0x0010 (0x0010 - 0x0000)
struct FGreetRandomNPCMsgEntry final
{
public:
	TArray<struct FNPCMsgID>                      MsgSequence;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NPCGreetMsgContainer
// 0x0010 (0x0010 - 0x0000)
struct FNPCGreetMsgContainer final
{
public:
	TArray<struct FGreetRandomNPCMsgEntry>        NPCMsgEntries;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NPCGreetConfig
// 0x0060 (0x0060 - 0x0000)
struct FNPCGreetConfig final
{
public:
	bool                                          bUseGreet;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGreetNeedTurn;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3611[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           GreetAnim;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GreetInterval;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3612[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class AHottaCharacter>>    GreetTargetObjectTypes;                            // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         GreetAngleLimit;                                   // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GreetFocusProbability;                             // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GreetFocusInterval;                                // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GreetFocusCD;                                      // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           GreetTags;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bGreetShowBubble;                                  // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGreetShowBubbleRandom;                            // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENpcBubbleResetType                           BubbleResetType;                                   // 0x004A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3613[0x1];                                     // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BubbleMsgCD;                                       // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNPCGreetMsgContainer                  GreetMsgContainer;                                 // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DamageExecutionInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x04) FDamageExecutionInfo final
{
public:
	uint8                                         Pad_3614[0x38];                                    // 0x0000(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RecoverHPExecutionInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x04) FRecoverHPExecutionInfo final
{
public:
	uint8                                         Pad_3615[0x10];                                    // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RedPointConditionSysNotice
// 0x0000 (0x0008 - 0x0008)
struct FRedPointConditionSysNotice final : public FRedPointCondition
{
};

// ScriptStruct HTGame.NetFightInfoBase
// 0x01F8 (0x01F8 - 0x0000)
struct FNetFightInfoBase
{
public:
	uint8                                         Pad_3616[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParameterWrapperArray                 ParameterWrapperArray;                             // 0x0008(0x0018)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FParameterWrapperArray                 ParameterWrapperArray2;                            // 0x0020(0x0018)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FParameterWrapperArray                 ParameterWrapperArray3;                            // 0x0038(0x0018)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3617[0x1A8];                                   // 0x0050(0x01A8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GuangLingReactionExpendTwoData
// 0x0008 (0x0020 - 0x0018)
struct FGuangLingReactionExpendTwoData final : public FReactinData
{
public:
	int32                                         AdditionalManagerCanExistNum;                      // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3618[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ServerReplicatedReduceHpInfo
// 0x0060 (0x0258 - 0x01F8)
struct FServerReplicatedReduceHpInfo final : public FNetFightInfoBase
{
public:
	uint8                                         Pad_3619[0x60];                                    // 0x01F8(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_OpenUI
// 0x0030 (0x0038 - 0x0008)
struct FItemToolData_OpenUI final : public FItemToolDataBase
{
public:
	class FString                                 UIClass;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         CloseUIClasses;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FString>                         Parameters;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ClientRepExtraDamageInfo
// 0x0034 (0x0034 - 0x0000)
struct FClientRepExtraDamageInfo final
{
public:
	struct FCharacterForNet                       NetTarget;                                         // 0x0000(0x002C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeadState;                                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FCurHealth;                                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ClientRepFightData
// 0x0058 (0x0058 - 0x0000)
struct FClientRepFightData final
{
public:
	struct FCharacterForNet                       NetTarget;                                         // 0x0000(0x002C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FCurHealth;                                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeadState;                                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FShieldDamage;                                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LockTarget;                                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_361A[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParameterWrapperArray                 DamageTextInfoArray;                               // 0x0040(0x0018)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ClientReplicatedTargetDataContainer
// 0x0080 (0x0080 - 0x0000)
struct FClientReplicatedTargetDataContainer final
{
public:
	int64                                         MsgIndex;                                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterForNet                       NetSourceActor;                                    // 0x0008(0x002C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_361B[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FClientRepFightData>            ClientFightDataArray;                              // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FClientRepExtraDamageInfo>      ClientExtraDamageInfos;                            // 0x0048(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FClientRepRecoverData>          ClientRecoverDataArray;                            // 0x0058(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	double                                        TimesStamp;                                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FReactionData                          NetReactionData;                                   // 0x0070(0x000C)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_361C[0x4];                                     // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ServerReplicatedRecoverHpInfo
// 0x0020 (0x0218 - 0x01F8)
struct FServerReplicatedRecoverHpInfo final : public FNetFightInfoBase
{
public:
	uint8                                         Pad_361D[0x20];                                    // 0x01F8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SkillRootMotionForRepParam
// 0x0048 (0x0048 - 0x0000)
struct FSkillRootMotionForRepParam final
{
public:
	ERootMotionTaskType                           RootMotionTaskType;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_361E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TriggerBeginTime;                                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WorldDirection;                                    // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 TargetActor;                                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         JumpDistance;                                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_361F[0x4];                                     // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCommonIdNumber11
// 0x0010 (0x0018 - 0x0008)
struct FHTCommonIdNumber11 final : public FTableRowBase
{
public:
	class FName                                   ID;                                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Number;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3620[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestTriggerSpawnEntry
// 0x0020 (0x0020 - 0x0000)
struct FQuestTriggerSpawnEntry final
{
public:
	class FName                                   QuestID_Spawn;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID_Spawn;                                 // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestID_Destroy;                                   // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID_Destroy;                               // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCrowdCharacterMassStandTaskInstanceData
// 0x0018 (0x0018 - 0x0000)
struct FHTCrowdCharacterMassStandTaskInstanceData final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3621[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMassEntityHandle                      HitEntity;                                         // 0x0008(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         LimitLookAtYaw;                                    // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PlayAnimateNeedSyncTransform;                      // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3622[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time;                                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCrowdMassLookAtAttentionTaskInstanceData
// 0x0028 (0x0028 - 0x0000)
struct FHTCrowdMassLookAtAttentionTaskInstanceData final
{
public:
	struct FVector                                AttentionLocation;                                 // 0x0000(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassEntityHandle                      AttentionEntity;                                   // 0x0018(0x0008)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PassedTime;                                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ActivedOwner
// 0x0010 (0x0010 - 0x0000)
struct FActivedOwner final
{
public:
	TArray<class AActor*>                         Owner;                                             // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkillEffectMutex
// 0x0050 (0x0050 - 0x0000)
struct FSkillEffectMutex final
{
public:
	TMap<ESkillEffectType, EMutexEffectType>      EffectMutex;                                       // 0x0000(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkillEffectMutexsData
// 0x0058 (0x0060 - 0x0008)
struct FSkillEffectMutexsData final : public FTableRowBase
{
public:
	ESkillEffectType                              NewEffectType;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3623[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillEffectMutex                      SkillEffectMutex;                                  // 0x0010(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuangXiangReactionExpendFiveData
// 0x0010 (0x0028 - 0x0018)
struct FGuangXiangReactionExpendFiveData final : public FReactinData
{
public:
	float                                         ResistLessSpeedMult;                               // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3624[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            DamageTargetGEClass;                               // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DivinationAbility
// 0x0010 (0x0018 - 0x0008)
struct FDivinationAbility final : public FTableRowBase
{
public:
	TArray<struct FDivinationAbilitySub>          GameplayEffectClassArray;                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DivinationTreasure
// 0x0010 (0x0018 - 0x0008)
struct FDivinationTreasure final : public FTableRowBase
{
public:
	TArray<struct FDivinationTreasureSub>         TreasureArray;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AnHunZhouReactionExpendOneData
// 0x0008 (0x0020 - 0x0018)
struct FAnHunZhouReactionExpendOneData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DivinationArcaneStone
// 0x0060 (0x0068 - 0x0008)
struct FDivinationArcaneStone final : public FTableRowBase
{
public:
	class FName                                   DivinationId;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Desc;                                              // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         Level;                                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NeedNum;                                           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Masterpiece;                                       // 0x0038(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RewardId;                                          // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DrumIconData
// 0x0090 (0x0098 - 0x0008)
struct FDrumIconData final : public FTableRowBase
{
public:
	class FText                                   TabName;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              NormalIcon;                                        // 0x0018(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              SelectedIcon;                                      // 0x0040(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHide;                                             // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3625[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   ModuleUIClass;                                     // 0x0070(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ManualLockParams
// 0x0020 (0x0020 - 0x0000)
struct FManualLockParams final
{
public:
	TSubclassOf<class UHTGATargetType>            ManualLockTargetTrace;                             // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FMaxManualLockDistance;                            // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistancePriorityAngle;                             // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FUpdateInputTolerance;                             // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FTriggerUpdateLockTargetThreshold;                 // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RestCacheSelectedActorTime;                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3626[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ElevatorDoorTimelinePos
// 0x0030 (0x0030 - 0x0000)
struct FElevatorDoorTimelinePos final
{
public:
	struct FVector                                StartLocation;                                     // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                EndLocation;                                       // 0x0018(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TractionSpeedFormulaDynamicParams
// 0x0088 (0x0088 - 0x0000)
struct FTractionSpeedFormulaDynamicParams final
{
public:
	struct FVector                                CenterLocation;                                    // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CurrentLocation;                                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ToCenter;                                          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LastVelocity;                                      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CenterVelocity;                                    // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceToCenter;                                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Mass;                                              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetLastVelocity;                                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetCenterVelocity;                                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3627[0x6];                                     // 0x0082(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.FloatingEffectData
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FFloatingEffectData final
{
public:
	uint8                                         Pad_3628[0x30];                                    // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.OffsetLocationParam
// 0x0020 (0x0020 - 0x0000)
struct FOffsetLocationParam final
{
public:
	struct FVector                                OffSetLocation;                                    // 0x0000(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceHeight;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFaceTarget;                                       // 0x001C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFindFloor;                                        // 0x001D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3629[0x2];                                     // 0x001E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AdventureManualQuestData
// 0x0048 (0x0048 - 0x0000)
struct FAdventureManualQuestData final
{
public:
	TSoftObjectPtr<class UTexture2D>              QuestIcon;                                         // 0x0000(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   QuestDisplayName;                                  // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          Acceptable_Random;                                 // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_362A[0xF];                                     // 0x0039(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CampAttitude
// 0x0005 (0x0005 - 0x0000)
struct FCampAttitude final
{
public:
	ETeamAttitude                                 Attitudes[0x5];                                    // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GamepadMenusTableRow
// 0x0060 (0x0068 - 0x0008)
struct FGamepadMenusTableRow final : public FTableRowBase
{
public:
	class FString                                 LevelName;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   GamepadQuickMenu;                                  // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   GamepadListMenu;                                   // 0x0040(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.KeyboardMenusTableRow
// 0x0038 (0x0040 - 0x0008)
struct FKeyboardMenusTableRow final : public FTableRowBase
{
public:
	class FString                                 LevelName;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   QuickMenu;                                         // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointIDSelectorGetCharacterItems
// 0x0000 (0x0008 - 0x0008)
struct FRedPointIDSelectorGetCharacterItems final : public FRedPointIDSelector
{
};

// ScriptStruct HTGame.HTGameplayEffectContainerSpec
// 0x0038 (0x0038 - 0x0000)
struct FHTGameplayEffectContainerSpec final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FGameplayEffectSpecHandle>      TargetGameplayEffectSpecs;                         // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EidtPlayerInfoBaseConfig
// 0x0038 (0x0040 - 0x0008)
struct FEidtPlayerInfoBaseConfig final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              DefaultHeadIcon;                                   // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SignLimit;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PlayerShowNum;                                     // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MedalShowNum;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChangeNameCoolDown;                                // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTGameplayEffectContext
// 0x0030 (0x00B0 - 0x0080)
struct FHTGameplayEffectContext final : public FGameplayEffectContext
{
public:
	TWeakObjectPtr<class AActor>                  Target;                                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_362B[0x28];                                    // 0x0088(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HottaServerDateTime
// 0x0010 (0x0010 - 0x0000)
struct FHottaServerDateTime final
{
public:
	int64                                         Now;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         UtcNow;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointConditionFunctionUnlock
// 0x0000 (0x0008 - 0x0008)
struct FRedPointConditionFunctionUnlock final : public FRedPointCondition
{
};

// ScriptStruct HTGame.HTUIClassData
// 0x0060 (0x0068 - 0x0008)
struct FHTUIClassData final : public FTableRowBase
{
public:
	TSoftClassPtr<class UClass>                   UIClass;                                           // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowBySequence;                                   // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_362C[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           LayerName;                                         // 0x0034(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreWhenPlayingDeadMontage;                     // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_362D[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ELevelSceneType>                       ForbidOpenUISceneTypes;                            // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         ForbidOpenUIClone;                                 // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIgnoreInput;                                      // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_362E[0x7];                                     // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTSequenceUIData
// 0x00B0 (0x00B0 - 0x0000)
struct alignas(0x10) FHTSequenceUIData final
{
public:
	TSoftClassPtr<class UClass>                   WidgetClass;                                       // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_362F[0x58];                                    // 0x0028(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParameterWrapperArray                 Params;                                            // 0x0080(0x0018)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStreamed;                                         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3630[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           LayerTag;                                          // 0x009C(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3631[0xC];                                     // 0x00A4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTSequenceUIQueueData
// 0x0010 (0x0010 - 0x0000)
struct FHTSequenceUIQueueData final
{
public:
	TArray<struct FHTSequenceUIData>              Queue;                                             // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PlayerInVolumes
// 0x0020 (0x0020 - 0x0000)
struct FPlayerInVolumes final
{
public:
	TArray<TWeakObjectPtr<class AHTRoomVolume>>   RoomList;                                          // 0x0000(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class AHTRoomVolume*                          PriorityRoom;                                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3632[0x8];                                     // 0x0018(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.InventoryData
// 0x0010 (0x0010 - 0x0000)
struct FInventoryData final
{
public:
	TArray<class UHTItem*>                        InventoryItems;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ReactionDamageTextureMap
// 0x0050 (0x0050 - 0x0000)
struct FReactionDamageTextureMap final
{
public:
	TMap<EExecutionDamageTypeEX, class FString>   DamageTypeMap;                                     // 0x0000(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.InventoryAddReturn
// 0x000C (0x000C - 0x0000)
struct FInventoryAddReturn final
{
public:
	TWeakObjectPtr<class UHTItem>                 TheItem;                                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRet;                                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3633[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CacheHitLocTime
// 0x0020 (0x0020 - 0x0000)
struct FCacheHitLocTime final
{
public:
	struct FVector                                HitLoc;                                            // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitTime;                                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3634[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SpawnHTSummonAIParams
// 0x0080 (0x0080 - 0x0000)
struct FSpawnHTSummonAIParams final
{
public:
	bool                                          bPet;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESummonedAIAttackMode                         AttackMode;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3635[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AICharacterLevel;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESummonAIAttachType                           AttachType;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3636[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             AttachOffset;                                      // 0x0010(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttachAtSocket;                                    // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3637[0x8];                                     // 0x0078(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LevelInstanceLoadData
// 0x0008 (0x0008 - 0x0000)
struct FLevelInstanceLoadData final
{
public:
	bool                                          bState;                                            // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3638[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CheckCount;                                        // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LimitTriggerQuest
// 0x0010 (0x0010 - 0x0000)
struct FLimitTriggerQuest final
{
public:
	class FName                                   BeginQuest;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EndQuest;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LotteryMessageTips
// 0x0030 (0x0030 - 0x0000)
struct FLotteryMessageTips final
{
public:
	class FName                                   ShowItemID;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemCount;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3639[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TextMessageTipsTitle;                              // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   TextMessageTipsContent;                            // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointConditionData
// 0x0020 (0x0020 - 0x0000)
struct FRedPointConditionData final
{
public:
	struct FInstancedStruct                       IDSelector;                                        // 0x0000(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       Condition;                                         // 0x0010(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TriggerTypeConditionData
// 0x0010 (0x0010 - 0x0000)
struct FTriggerTypeConditionData final
{
public:
	struct FInstancedStruct                       Condition;                                         // 0x0000(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointDataConfig
// 0x0040 (0x0048 - 0x0008)
struct FRedPointDataConfig final : public FTableRowBase
{
public:
	struct FGameplayTag                           RedPointTag;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTriggerTypeConditionData>      TriggerTypeArray;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FRedPointConditionData                 RedPointCondition;                                 // 0x0020(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	ERedPointSaveType                             SaveType;                                          // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPermanent;                                       // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsImportConfigID;                                  // 0x0042(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsOnlyOneMessage;                                  // 0x0043(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsCombinationType;                                 // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_363A[0x3];                                     // 0x0045(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LotteryPortraitData
// 0x0028 (0x0030 - 0x0008)
struct FLotteryPortraitData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              ItemIcon;                                          // 0x0008(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LotteryProbabilityItemData
// 0x0030 (0x0038 - 0x0008)
struct FLotteryProbabilityItemData final : public FTableRowBase
{
public:
	TArray<struct FLotteryProbabilityItem>        SSRItems;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FLotteryProbabilityItem>        SRItems;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FLotteryProbabilityItem>        RItems;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.UIMessageData
// 0x0018 (0x0018 - 0x0000)
struct FUIMessageData final
{
public:
	class FText                                   MessageText;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EUIMessageEffectType                          EffectType;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_363B[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LotteryAdditionalAward_Item
// 0x001C (0x001C - 0x0000)
struct FLotteryAdditionalAward_Item final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAdditionalAwardNumType                       AdditionalNumType;                                 // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_363C[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Time;                                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinTime;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxTime;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Amount;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LotteryAdditionalAwardInfo
// 0x0018 (0x0018 - 0x0000)
struct FLotteryAdditionalAwardInfo final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLotteryAdditionalAward_Item>   AwardItems;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HitBackParam
// 0x0070 (0x0070 - 0x0000)
struct FHitBackParam final
{
public:
	bool                                          UseMontageRootMotion;                              // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_363D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NormalSpeed;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDistance;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProtectDistance;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseIgnoreZAccumulate;                             // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHitBackDirectionType                         HitBackDirectionType;                              // 0x0011(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_363E[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               HitBackDirectionOffSet;                            // 0x0018(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   SectionName;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DownHitSectionName;                                // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HitCallBack;                                       // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceHitBack;                                     // 0x0041(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_363F[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   HitCallBackEffect;                                 // 0x0048(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LotteryItem
// 0x000C (0x000C - 0x0000)
struct FLotteryItem final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemCount;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuaranteeItem
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FGuaranteeItem final
{
public:
	uint8                                         Pad_3640[0x18];                                    // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LotteryCostItem
// 0x000C (0x000C - 0x0000)
struct alignas(0x04) FLotteryCostItem final
{
public:
	uint8                                         Pad_3641[0xC];                                     // 0x0000(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PreQuest
// 0x0010 (0x0010 - 0x0000)
struct FPreQuest final
{
public:
	class FName                                   PreQuestName;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LotteryItemList
// 0x0018 (0x0018 - 0x0000)
struct FLotteryItemList final
{
public:
	struct FDateTime                              LotteryTime;                                       // 0x0000(0x0008)(ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLotteryItem>                   ItemList;                                          // 0x0008(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemOutputSource
// 0x0068 (0x0070 - 0x0008)
struct FItemOutputSource final : public FTableRowBase
{
public:
	class FText                                   Name;                                              // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          HasPostfixName;                                    // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3642[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0020(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   UIClass;                                           // 0x0048(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LotteryAward
// 0x0020 (0x0020 - 0x0000)
struct FLotteryAward final
{
public:
	struct FLotteryItem                           AwardItem;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3643[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLotteryItem>                   DecomposeList;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTLotteryExtractConfig
// 0x0018 (0x0018 - 0x0000)
struct FHTLotteryExtractConfig final
{
public:
	TArray<struct FLotteryItem>                   CostItemList;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   DropGroupID;                                       // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ShowCaseCycle
// 0x0008 (0x0010 - 0x0008)
struct FShowCaseCycle final : public FTableRowBase
{
public:
	class FName                                   DropID;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTLotteryUIConfig
// 0x0038 (0x0038 - 0x0000)
struct FHTLotteryUIConfig final
{
public:
	TSoftObjectPtr<class UTexture2D>              SlotBackTexture2D;                                 // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   SlotNameText;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PendingIdFXPair
// 0x0010 (0x0010 - 0x0000)
struct FPendingIdFXPair final
{
public:
	uint8                                         Pad_3644[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      FxComponent;                                       // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PendingScaleInstanceBoxes
// 0x0028 (0x0028 - 0x0000)
struct FPendingScaleInstanceBoxes final
{
public:
	class UInstancedStaticMeshComponent*          InstancedMeshComponent;                            // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 CacheScales;                                       // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPendingIdFXPair>               PendingIds;                                        // 0x0018(0x0010)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.WaitOverlapTargetTaskParams
// 0x0024 (0x0024 - 0x0000)
struct FWaitOverlapTargetTaskParams final
{
public:
	bool                                          bMultiDamage;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3645[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Period;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFirstOverlapTriggered;                            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHostileTarget;                                    // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3646[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CollisionTag;                                      // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OpenDebugRange;                                    // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3647[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           TriggerEventTag;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMailInfo
// 0x00A0 (0x00A0 - 0x0000)
struct FHTMailInfo final
{
public:
	class FString                                 MailUnqiueID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTMailType                                   MailType;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTMailSubType                                MailSubType;                                       // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3648[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MailTitle;                                         // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MailSubTitle;                                      // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MailContent;                                       // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MailParams;                                        // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MailSender;                                        // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MailAttachStr;                                     // 0x0068(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MailConditions;                                    // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         MailSendTime;                                      // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         MailExpiryTime;                                    // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MailPath;                                          // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsStarTag;                                        // 0x009C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRead;                                           // 0x009D(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsReceive;                                        // 0x009E(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTMailState                                  MailState;                                         // 0x009F(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMailConfig
// 0x0008 (0x0008 - 0x0000)
struct FHTMailConfig final
{
public:
	int32                                         MailCapacity;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CheckNewMailIntervalTime;                          // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CrowdWeatherFragment
// 0x0068 (0x0068 - 0x0000)
struct FCrowdWeatherFragment final : public FObjectWrapperFragment
{
public:
	uint8                                         Pad_3649[0x10];                                    // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 UmbrellaActor;                                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_364A[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RainTimeOut;                                       // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassMovementStyleRef                  RainMovementStyle;                                 // 0x0028(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         RainSpeedScale;                                    // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RainProbability;                                   // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UmbrellaProbability;                               // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassMovementStyleRef                  DefaultMovementStyle;                              // 0x004C(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DefaultSpeedScale;                                 // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemToolData_RentalVehicle
// 0x0010 (0x0018 - 0x0008)
struct FItemToolData_RentalVehicle final : public FItemToolDataBase
{
public:
	class FName                                   RentalID;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RentalTime;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_364B[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CrowdInactivedFragment
// 0x0001 (0x0001 - 0x0000)
struct FCrowdInactivedFragment final : public FMassFragment
{
public:
	uint8                                         Pad_364C[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.IntroductionData
// 0x0038 (0x0040 - 0x0008)
struct FIntroductionData final : public FTableRowBase
{
public:
	TSoftClassPtr<class UClass>                   IntroductionTemplate;                              // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   IntroductionText;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CrowdFrightenFragment
// 0x0001 (0x0001 - 0x0000)
struct FCrowdFrightenFragment final : public FMassFragment
{
public:
	uint8                                         Pad_364D[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTMassCrowdQuickPassIntersectionFragment
// 0x001C (0x001C - 0x0000)
struct FHTMassCrowdQuickPassIntersectionFragment final : public FMassFragment
{
public:
	struct FMassMovementStyleRef                  YellowLightMovementStyle;                          // 0x0000(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         YellowLightSpeedScale;                             // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AcceptQuestTipsData
// 0x0038 (0x0040 - 0x0008)
struct FAcceptQuestTipsData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              QuestTypeBgImage;                                  // 0x0008(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           FontColor;                                         // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCrowdAdditionalMesh
// 0x0020 (0x0020 - 0x0000)
struct FHTCrowdAdditionalMesh final
{
public:
	class UStaticMesh*                            StaticMesh;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             MaterialOverrides;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         MinLODSignificance;                                // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxLODSignificance;                                // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCrowdAdditionalTypeData
// 0x0028 (0x0028 - 0x0000)
struct FHTCrowdAdditionalTypeData final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHTCrowdAdditionalMesh>         Meshes;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAnimToTextureDataAsset*                AnimationData;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_364E[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TriggerItemType
// 0x0010 (0x0028 - 0x0018)
struct FTriggerItemType final : public FTriggerTypeCondition
{
public:
	TArray<EItemType>                             ItemTypeArray;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCrowdAdditionalParametersSharedFragment
// 0x0080 (0x0080 - 0x0000)
struct FHTCrowdAdditionalParametersSharedFragment final : public FMassSharedFragment
{
public:
	class UHTCrowdAdditionalTypesDataAsset*       CrowdAdditionalTypesData;                          // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_364F[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CrowdAdditionalOffset;                             // 0x0010(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStaticMeshInstanceVisualizationDescHandle> CrowdAdditionalTypesStaticMeshDescHandle;          // 0x0070(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAbilityInputRow
// 0x0068 (0x0070 - 0x0008)
struct FHTAbilityInputRow final : public FTableRowBase
{
public:
	ESkillInputIDType                             InputID;                                           // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3650[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           InputAction;                                       // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3651[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AbilityName;                                       // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldBind;                                       // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3652[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param;                                             // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3653[0x40];                                    // 0x0030(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MassStreetLampIntersectionTag
// 0x0000 (0x0001 - 0x0001)
struct FMassStreetLampIntersectionTag final : public FMassTag
{
};

// ScriptStruct HTGame.HTCrowdAdditionalVisualizationFragment
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FHTCrowdAdditionalVisualizationFragment final : public FMassFragment
{
public:
	uint8                                         Pad_3654[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCrowdThreatenFragment
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FHTCrowdThreatenFragment final : public FMassFragment
{
public:
	float                                         VehicleObserveDistance;                            // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VehicleRunDistance;                                // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VehicleDodgeDistance;                              // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WatchObserveDistance;                              // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WatchRunDistance;                                  // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WatchDodgeDistance;                                // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WatchCDTime;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WatchPlayTime;                                     // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WatchProbability;                                  // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3655[0x14];                                    // 0x0024(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTMailModel
// 0x0088 (0x0090 - 0x0008)
struct FHTMailModel final : public FTableRowBase
{
public:
	EHTMailType                                   MailType;                                          // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTMailSubType                                MailSubType;                                       // 0x0009(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3656[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MailTitle;                                         // 0x0010(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   MailSubTitle;                                      // 0x0020(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   MailContent;                                       // 0x0030(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                 MailParams;                                        // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   MailSender;                                        // 0x0050(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                 MailAttachStr;                                     // 0x0060(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MailConditions;                                    // 0x0070(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         MailExpiryTimeDays;                                // 0x0080(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MailPath;                                          // 0x0088(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3657[0x4];                                     // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCrowdVehicleThreatenTag
// 0x0000 (0x0001 - 0x0001)
struct FHTCrowdVehicleThreatenTag final : public FMassTag
{
};

// ScriptStruct HTGame.ItemTipsTagData
// 0x0038 (0x0040 - 0x0008)
struct FItemTipsTagData final : public FTableRowBase
{
public:
	class FText                                   TagName;                                           // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              TagBgImage;                                        // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCrowdThreatenWatchTag
// 0x0000 (0x0001 - 0x0001)
struct FHTCrowdThreatenWatchTag final : public FMassTag
{
};

// ScriptStruct HTGame.HTCrowdAnimationSnycFragment
// 0x0028 (0x0028 - 0x0000)
struct FHTCrowdAnimationSnycFragment final : public FMassFragment
{
public:
	uint8                                         Pad_3658[0x18];                                    // 0x0000(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          SyncAnimSequence;                                  // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3659[0x8];                                     // 0x0020(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HitMaterialEffectData
// 0x00F0 (0x00F8 - 0x0008)
struct FHitMaterialEffectData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          VehicleHitParticleEffect;                          // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          PlayerHitParticleEffect;                           // 0x0030(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           PlayerHitAudio;                                    // 0x0058(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          BrokenItemHitParticleEffect;                       // 0x0080(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           BrokenItemHitAudio;                                // 0x00A8(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          BulletHitParticleEffect;                           // 0x00D0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCrowdPauseMassTransformToActorTag
// 0x0000 (0x0001 - 0x0001)
struct FHTCrowdPauseMassTransformToActorTag final : public FMassTag
{
};

// ScriptStruct HTGame.HTCrowdHideTag
// 0x0000 (0x0001 - 0x0001)
struct FHTCrowdHideTag final : public FMassTag
{
};

// ScriptStruct HTGame.FormationCharacterRotator
// 0x0010 (0x0010 - 0x0000)
struct FFormationCharacterRotator final
{
public:
	TArray<struct FRotator>                       RotatorArr;                                        // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTCrowdTransformOffsetFragment
// 0x0020 (0x0020 - 0x0000)
struct FHTCrowdTransformOffsetFragment final : public FMassFragment
{
public:
	struct FVector                                OffSetLocation;                                    // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CacheZ;                                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_365A[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MassCrowdSpawnPointInfo
// 0x0070 (0x0070 - 0x0000)
struct alignas(0x10) FMassCrowdSpawnPointInfo final
{
public:
	uint8                                         Pad_365B[0x70];                                    // 0x0000(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTMassThreatenResult
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FHTMassThreatenResult final
{
public:
	uint8                                         Pad_365C[0x58];                                    // 0x0000(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StaticTransformData
// 0x00B8 (0x00C0 - 0x0008)
struct FStaticTransformData final : public FTableRowBase
{
public:
	uint8                                         Pad_365D[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BelongLevelName;                                   // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               CameraRotation;                                    // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bKeepPlayerRotation;                               // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_365E[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       TransformLoadingData;                              // 0x00A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          TransferWithVehicle;                               // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisablePlayVoice;                                 // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_365F[0xE];                                     // 0x00B2(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTCrowdTransformCopyToMassTag
// 0x0000 (0x0001 - 0x0001)
struct FHTCrowdTransformCopyToMassTag final : public FMassTag
{
};

// ScriptStruct HTGame.HTMassTransformCopyToActorTag
// 0x0000 (0x0001 - 0x0001)
struct FHTMassTransformCopyToActorTag final : public FMassTag
{
};

// ScriptStruct HTGame.HTStateTreeFrightenStateEvaluator
// 0x0008 (0x0028 - 0x0020)
struct FHTStateTreeFrightenStateEvaluator final : public FMassStateTreeEvaluatorBase
{
public:
	uint8                                         Pad_3660[0x8];                                     // 0x0020(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestWeatherLock
// 0x0001 (0x0001 - 0x0000)
struct FQuestWeatherLock final
{
public:
	EWeatherIndex                                 LockWeatherIndex;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMassThreatenTag
// 0x0000 (0x0001 - 0x0001)
struct FHTMassThreatenTag final : public FMassTag
{
};

// ScriptStruct HTGame.HTStateTreeStateIntanceData
// 0x0088 (0x0088 - 0x0000)
struct FHTStateTreeStateIntanceData final
{
public:
	bool                                          bCrowdInactived;                                   // 0x0000(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bThreaten;                                         // 0x0001(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTCrowdThreatenType                          ThreatenType;                                      // 0x0002(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3661[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AttentionLocation;                                 // 0x0008(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassEntityHandle                      AttentionEntityHandle;                             // 0x0020(0x0008)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedScale;                                        // 0x0028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SkipPathFollowEqualOne;                            // 0x002C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassMovementStyleRef                  MovementStyle;                                     // 0x0030(0x0018)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                ThreatenTargetLocation;                            // 0x0048(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ThreatenAnimBeginLocation;                         // 0x0060(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassEntityHandle                      ThreatenEntityHandle;                              // 0x0078(0x0008)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVehicleThreatenStateType                     VehicleThreatenState;                              // 0x0080(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3662[0x7];                                     // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTStateTreeStateEvaluator
// 0x0030 (0x0050 - 0x0020)
struct FHTStateTreeStateEvaluator final : public FMassStateTreeEvaluatorBase
{
public:
	uint8                                         Pad_3663[0x30];                                    // 0x0020(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RedPointMultiConditionAnd
// 0x0010 (0x0018 - 0x0008)
struct FRedPointMultiConditionAnd final : public FRedPointCondition
{
public:
	TArray<struct FInstancedStruct>               SubConditions;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMassStateTreeVisualDebugEvaluatorInstanceData
// 0x0001 (0x0001 - 0x0000)
struct FHTMassStateTreeVisualDebugEvaluatorInstanceData final
{
public:
	bool                                          bShowInfo;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterVoiceDataBase
// 0x0010 (0x0010 - 0x0000)
struct FCharacterVoiceDataBase final
{
public:
	TArray<TSoftObjectPtr<class UAkAudioEvent>>   Voices;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMassStateTreeVisualDebugEvaluator
// 0x0000 (0x0020 - 0x0020)
struct FHTMassStateTreeVisualDebugEvaluator final : public FMassStateTreeEvaluatorBase
{
};

// ScriptStruct HTGame.AISpawnChangeAllRowID
// 0x0018 (0x0018 - 0x0000)
struct FAISpawnChangeAllRowID final
{
public:
	struct FGuid                                  SpawnGuid;                                         // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ChangeSpawnID;                                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMassTickTask
// 0x0008 (0x0030 - 0x0028)
struct FHTMassTickTask final : public FMassStateTreeTaskBase
{
public:
	uint8                                         Pad_3664[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MassTrafficBusFakePassengerParamSharedFragment
// 0x0028 (0x0028 - 0x0000)
struct FMassTrafficBusFakePassengerParamSharedFragment final : public FMassSharedFragment
{
public:
	TArray<class FName>                           SeatSocketNameArray;                               // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         RandomNumMin;                                      // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomNumMax;                                      // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                    PassengerStaticMeshArray;                          // 0x0018(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassTrafficBusPassengerDataFragment
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FMassTrafficBusPassengerDataFragment final : public FMassFragment
{
public:
	uint8                                         Pad_3665[0x50];                                    // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MassTrafficQuestBusPassengerConfig
// 0x0010 (0x0010 - 0x0000)
struct FMassTrafficQuestBusPassengerConfig final
{
public:
	TSubclassOf<class AHTNPCCharacter>            PassengerNPCTemplate;                              // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SeatIndex;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDefaultShow;                                      // 0x000C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3666[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VehicleSpawnPointData
// 0x0080 (0x0080 - 0x0000)
struct alignas(0x08) FVehicleSpawnPointData final
{
public:
	uint8                                         Pad_3667[0x80];                                    // 0x0000(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SpawnParticleEffectExtraData
// 0x0050 (0x0050 - 0x0000)
struct FSpawnParticleEffectExtraData final
{
public:
	TMap<class FName, int32>                      NiagaraParameters;                                 // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassEntitySpawnDataGeneratorResultWrapper
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FMassEntitySpawnDataGeneratorResultWrapper final
{
public:
	uint8                                         Pad_3668[0x40];                                    // 0x0000(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VehicleForkConfig
// 0x0120 (0x0120 - 0x0000)
struct FVehicleForkConfig final
{
public:
	class FName                                   VehicleID;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NPriority;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3669[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          LightEffect;                                       // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FrontLeftLightSocket;                              // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FrontRightLightSocket;                             // 0x0040(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BackLeftLightSocket;                               // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BackRightLightSocket;                              // 0x0050(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          WheelEffect;                                       // 0x0058(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          WheelTailEffect;                                   // 0x0080(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          BackLightTailEffect;                               // 0x00A8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          VehicleTailEffect;                                 // 0x00D0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           VehicleForkBgm;                                    // 0x00F8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StaticForkVehicleEffectData
// 0x0018 (0x0020 - 0x0008)
struct FStaticForkVehicleEffectData final : public FTableRowBase
{
public:
	struct FGameplayTag                           VehicleForkTag;                                    // 0x0008(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVehicleForkConfig>             VehicleForkEffectDatas;                            // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassVehicleTmpData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FMassVehicleTmpData final
{
public:
	uint8                                         Pad_366A[0x20];                                    // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SubAreaData
// 0x0010 (0x0010 - 0x0000)
struct FSubAreaData final
{
public:
	class AHTTrackVolume*                         SubArea;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EnterFixIconId;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMassWaitSecondsTaskInstanceData
// 0x0008 (0x0008 - 0x0000)
struct FHTMassWaitSecondsTaskInstanceData final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Time;                                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RoleLevelData
// 0x0060 (0x0068 - 0x0008)
struct FRoleLevelData final : public FTableRowBase
{
public:
	bool                                          bNeedShow;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_366B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UpgradeExp;                                        // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UpgradeWorldLevel;                                 // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UpgradeLevelLimit;                                 // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UpgradeWorldLevelLimit;                            // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BrokenQuestID;                                     // 0x001C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_366C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           DescArray;                                         // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           BrokenDescArray;                                   // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   AwardDropID;                                       // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BrokenAwardDropID;                                 // 0x0050(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInt32Range                            RecommendLevel;                                    // 0x0058(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMassWaitSecondsTask
// 0x0008 (0x0030 - 0x0028)
struct FHTMassWaitSecondsTask final : public FMassStateTreeTaskBase
{
public:
	uint8                                         Pad_366D[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTMassZoneGraphAnnotationEvaluatorInstanceData
// 0x0028 (0x0028 - 0x0000)
struct FHTMassZoneGraphAnnotationEvaluatorInstanceData final
{
public:
	struct FZoneGraphTagMask                      AnnotationTags;                                    // 0x0000(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OpenWatch;                                         // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_366E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WatchLocation;                                     // 0x0008(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassEntityHandle                      WatchEntityHandle;                                 // 0x0020(0x0008)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FormulaParameter
// 0x0118 (0x0118 - 0x0000)
struct FFormulaParameter final
{
public:
	struct FScalableFloat                         Param1;                                            // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Param2;                                            // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Param3;                                            // 0x0050(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Param4;                                            // 0x0078(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Param5;                                            // 0x00A0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Param6;                                            // 0x00C8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Param7;                                            // 0x00F0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMassZoneGraphAnnotationEvaluator
// 0x0020 (0x0040 - 0x0020)
struct FHTMassZoneGraphAnnotationEvaluator final : public FMassStateTreeEvaluatorBase
{
public:
	uint8                                         Pad_366F[0x20];                                    // 0x0020(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTMassZoneGraphPathFollowTaskInstanceData
// 0x0030 (0x0030 - 0x0000)
struct FHTMassZoneGraphPathFollowTaskInstanceData final
{
public:
	struct FStateTreeStructRef                    TargetLocation;                                    // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMassMovementStyleRef                  MovementStyle;                                     // 0x0010(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         SpeedScale;                                        // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3670[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTMassZoneGraphPathFollowTask
// 0x0038 (0x0060 - 0x0028)
struct FHTMassZoneGraphPathFollowTask final : public FMassStateTreeTaskBase
{
public:
	uint8                                         Pad_3671[0x38];                                    // 0x0028(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.WorldCameraShakeParam
// 0x0018 (0x0018 - 0x0000)
struct FWorldCameraShakeParam final
{
public:
	TSubclassOf<class UCameraShakeBase>           CameraShake;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InnerRadius;                                       // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OuterRadius;                                       // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Falloff;                                           // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DurationPercentCanPlayNextShake;                   // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MediaSourceInfo
// 0x0028 (0x0028 - 0x0000)
struct FMediaSourceInfo final
{
public:
	EPlayerStatus                                 PlayerStatus;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3672[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMediaPlayer*                           MediaPlayer;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFileMediaSource*                       FileMediaSource;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FileSourcePath;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAchievementViewSetupParam
// 0x0020 (0x0020 - 0x0000)
struct FHTAchievementViewSetupParam final
{
public:
	class FText                                   AchievementTypeName;                               // 0x0000(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         Pad_3673[0x4];                                     // 0x0010(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TypeId;                                            // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3674[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.BlendParams
// 0x000C (0x000C - 0x0000)
struct FBlendParams final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EViewTargetBlendFunction                      BlendFunc;                                         // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3675[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendExp;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RoleSexData
// 0x0008 (0x0010 - 0x0008)
struct FRoleSexData final : public FTableRowBase
{
public:
	class FName                                   CharacterId;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HtMovementInt32Attribute
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FHtMovementInt32Attribute final
{
public:
	uint8                                         Pad_3676[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bOverride;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3677[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct HTGame.SettingServerInfo
// 0x00C0 (0x00C0 - 0x0000)
struct FSettingServerInfo final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Map;                                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SessionName;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ClusterName;                                       // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ServiceGateWay;                                    // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ServerId;                                          // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ServerRegion;                                      // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PVersion;                                          // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CVersion;                                          // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GameMode;                                          // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PingMs;                                            // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxPlayers;                                        // 0x0080(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumPlayers;                                        // 0x0084(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TestFlag;                                          // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Status;                                            // 0x008C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ServerIndexInList;                                 // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3678[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              ServerOpenTimespan;                                // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRecommand;                                      // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3679[0x1F];                                    // 0x00A1(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTWheeledVehicleDefinition
// 0x0008 (0x0008 - 0x0000)
struct FHTWheeledVehicleDefinition final
{
public:
	int32                                         VehicleColorNum;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VehicleColorIndex;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HtMovementFloatAttribute
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FHtMovementFloatAttribute final
{
public:
	uint8                                         Pad_367A[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bOverride;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_367B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct HTGame.HtMovementRotatorAttribute
// 0x0028 (0x0028 - 0x0000)
struct FHtMovementRotatorAttribute final
{
public:
	uint8                                         Pad_367C[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bOverride;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_367D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Value;                                             // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct HTGame.FallDamageStaticParam
// 0x0018 (0x0018 - 0x0000)
struct FFallDamageStaticParam final
{
public:
	float                                         PlayerFallDamageMaxPer;                            // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NonPlayerFallDamageMaxPer;                         // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FallDamageCoefficient;                             // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FallDamageMinHeight;                               // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            FallDamageGEClass;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HtMovementVectorAttribute
// 0x0028 (0x0028 - 0x0000)
struct FHtMovementVectorAttribute final
{
public:
	uint8                                         Pad_367E[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bOverride;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_367F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Value;                                             // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct HTGame.HTMassNavMeshMoveTag
// 0x0000 (0x0001 - 0x0001)
struct FHTMassNavMeshMoveTag final : public FMassTag
{
};

// ScriptStruct HTGame.GameplayEffectConfigModifyData
// 0x0050 (0x0050 - 0x0000)
struct FGameplayEffectConfigModifyData final
{
public:
	struct FScalableFloat                         AddValue;                                          // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MultValue;                                         // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMassNavMeshPathFollowTaskInstanceData
// 0x0038 (0x0038 - 0x0000)
struct FHTMassNavMeshPathFollowTaskInstanceData final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassMovementStyleRef                  MovementStyle;                                     // 0x0018(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         SpeedScale;                                        // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3680[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTMassNavMeshPathFollowTask
// 0x0020 (0x0048 - 0x0028)
struct FHTMassNavMeshPathFollowTask final : public FMassStateTreeTaskBase
{
public:
	uint8                                         Pad_3681[0x20];                                    // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LoginCameraConfig
// 0x0018 (0x0018 - 0x0000)
struct FLoginCameraConfig final
{
public:
	class FName                                   CameraTags;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInt32Range>                    HourRange;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CloneDesInfo
// 0x0020 (0x0020 - 0x0000)
struct FCloneDesInfo final
{
public:
	class FText                                   CloneDesTitle;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CloneDesBody;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CloneAttrIcon
// 0x0058 (0x0058 - 0x0000)
struct FCloneAttrIcon final
{
public:
	ECharacterElementType                         AttrType;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3682[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              LightTextureIcon;                                  // 0x0008(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              GreyTextureIcon;                                   // 0x0030(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CloneSystemSubNodeData
// 0x00B8 (0x00B8 - 0x0000)
struct FCloneSystemSubNodeData final
{
public:
	class FText                                   Cloneintroduce;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCloneDesInfo>                  CloneDesArray;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCloneDesInfo>                  EnterSceneCloneDesArray;                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCloneAttrIcon>                 NewAttrIconArray;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              SceneIcon;                                         // 0x0040(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StaminaCount;                                      // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DropID;                                            // 0x006C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DifficultyLevel;                                   // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TeamLevel;                                         // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         KillMonsterTimeLimit;                              // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                           ChallengeFailRoleTexts;                            // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FText>                           ChallengeFailSpecialTexts;                         // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   SpawnID;                                           // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UDataLayerAsset>> CloneDataLayerAssets;                              // 0x00A8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CloneSystemData
// 0x01D8 (0x01E0 - 0x0008)
struct FCloneSystemData final : public FTableRowBase
{
public:
	class FName                                   CloneID;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LevelName;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   CloneOutPut;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CloneName;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	ECloneMode                                    CloneMode;                                         // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECloneType                                    CloneType;                                         // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3683[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCloneSystemSubNodeData>        CloneSystemSubNodes;                               // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCloneSystemExtensionData              CloneUIxtensionData;                               // 0x0050(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   KillMonsterLimitDes;                               // 0x00A0(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   LimitDes;                                          // 0x00B0(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              BGIcon;                                            // 0x00C0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3684[0x8];                                     // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnStart;                                        // 0x00F0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   CloneAwardTemplate;                                // 0x0150(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3685[0x8];                                     // 0x0178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CloneAwardStartTransform;                          // 0x0180(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMassFindNavMeshPathWanderTargetInRadius
// 0x0010 (0x0038 - 0x0028)
struct FHTMassFindNavMeshPathWanderTargetInRadius final : public FMassStateTreeTaskBase
{
public:
	float                                         Radius;                                            // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3686[0xC];                                     // 0x002C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTMassFindThreatenWatchLocationTask
// 0x0010 (0x0038 - 0x0028)
struct FHTMassFindThreatenWatchLocationTask final : public FMassStateTreeTaskBase
{
public:
	float                                         Radius;                                            // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3687[0xC];                                     // 0x002C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DarkAreaLightInfo
// 0x0030 (0x0030 - 0x0000)
struct FDarkAreaLightInfo final
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>    LightGE;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         LightGECd;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightExpend;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightRadius;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LightColor;                                        // 0x001C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3688[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ObjCompletedTeleport
// 0x0058 (0x0058 - 0x0000)
struct FObjCompletedTeleport final
{
public:
	struct FVector                                CompletedTeleportPosition;                         // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               CompletedRotation;                                 // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	ETransferLoadingUIType                        LoadingUIType;                                     // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3689[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CameraRotation;                                    // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bKeepPlayerRotation;                               // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_368A[0x7];                                     // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestConditionState
// 0x0014 (0x0014 - 0x0000)
struct FQuestConditionState final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ObjectiveState : 1;                                // 0x0010(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_368B[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestStateConditionConfig
// 0x0018 (0x0018 - 0x0000)
struct FQuestStateConditionConfig final
{
public:
	TArray<struct FQuestConditionState>           ConditionStates;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bReverseCondition;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_368C[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestStateConditionContainer
// 0x0018 (0x0018 - 0x0000)
struct FQuestStateConditionContainer final
{
public:
	bool                                          bNeedSatisfyAllCondition;                          // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_368D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FQuestStateConditionConfig>     ConditionConfigs;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ObjCompletedCameraRotation
// 0x0020 (0x0020 - 0x0000)
struct FObjCompletedCameraRotation final
{
public:
	struct FRotator                               CompletedCameraRotation;                           // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bKeepPlayerRotation;                               // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_368E[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ObjIntroduce
// 0x0018 (0x0018 - 0x0000)
struct FObjIntroduce final
{
public:
	bool                                          bNeedBeginIntroduce;                               // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_368F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           BeginIntroduceArray;                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ObjTrack
// 0x0080 (0x0080 - 0x0000)
struct FObjTrack final
{
public:
	bool                                          bForceTrackLocation;                               // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3690[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TrackLocation;                                     // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FRange;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowCenter;                                        // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3691[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        MulTrackLocationArray;                             // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                                TrackOffLocation;                                  // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TrackMapName;                                      // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedCrossBox;                                     // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTrackGoalEnable;                                  // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedPassParking;                                  // 0x0062(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3692[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        VehicleParkingArray;                               // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          AzimuthIndicatorable;                              // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNavigationPath;                                   // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3693[0x6];                                     // 0x007A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ObjCompleteDistance
// 0x0020 (0x0020 - 0x0000)
struct FObjCompleteDistance final
{
public:
	struct FVector                                CenterLocation;                                    // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SafeRange;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3694[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CharacterVoiceDataStruct
// 0x0008 (0x0008 - 0x0000)
struct FCharacterVoiceDataStruct final
{
public:
	float                                         TriggerCD;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TriggerChance;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OpenUIObjective
// 0x0010 (0x0128 - 0x0118)
struct FOpenUIObjective final : public FObjectiveData
{
public:
	class FName                                   UIName;                                            // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UIExtendParameter;                                 // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ChatEndObjective
// 0x0008 (0x0120 - 0x0118)
struct FChatEndObjective final : public FObjectiveData
{
public:
	class FName                                   ChatItemID;                                        // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestRangeNode
// 0x0014 (0x0014 - 0x0000)
struct FQuestRangeNode final
{
public:
	class FName                                   BeginQuest;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EndQuest;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedInRange;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3695[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.KillObjective
// 0x0018 (0x0130 - 0x0118)
struct FKillObjective final : public FObjectiveData
{
public:
	TArray<class FName>                           MonsterTagList;                                    // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bNeedShowKillMark;                                 // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3696[0x7];                                     // 0x0129(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ConvoyObjective
// 0x0020 (0x0138 - 0x0118)
struct FConvoyObjective final : public FObjectiveData
{
public:
	float                                         ConvoyProtectTime;                                 // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3697[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ConvoyLocation;                                    // 0x0120(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestTitleInfo
// 0x0060 (0x0060 - 0x0000)
struct FQuestTitleInfo final
{
public:
	TSoftObjectPtr<class UTexture2D>              IconSource;                                        // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              BackSource;                                        // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   TitleName;                                         // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AddItemObjective
// 0x0018 (0x0130 - 0x0118)
struct FAddItemObjective final : public FObjectiveData
{
public:
	bool                                          bNeedItemsByType;                                  // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemType                                     ItemType;                                          // 0x0119(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedNewAdd;                                       // 0x011A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseItem;                                          // 0x011B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3698[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ItemIDArray;                                       // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ShopObjective
// 0x0020 (0x0138 - 0x0118)
struct FShopObjective final : public FObjectiveData
{
public:
	class FName                                   ItemID;                                            // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           Shops;                                             // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bCityShop;                                         // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3699[0x7];                                     // 0x0131(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HitGlobalEffectParam
// 0x0088 (0x0088 - 0x0000)
struct FHitGlobalEffectParam final
{
public:
	TSoftClassPtr<class UClass>                   GlobalEffectTemplate;                              // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LocationOffset;                                    // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RotationOffset;                                    // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Scale;                                             // 0x0058(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Attached : 1;                                      // 0x0070(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_369A[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0074(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Density;                                           // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_369B[0x4];                                     // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SequenceObjective
// 0x0020 (0x0138 - 0x0118)
struct FSequenceObjective final : public FObjectiveData
{
public:
	class FName                                   StorySequenceID;                                   // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedPlaySequenceEnd;                              // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedInTargetMap;                                  // 0x0121(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_369C[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TargetMap;                                         // 0x0128(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ChaseObjective
// 0x0010 (0x0128 - 0x0118)
struct FChaseObjective final : public FObjectiveData
{
public:
	bool                                          bClearChaseProgress;                               // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_369D[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IncreasingInterval;                                // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IncreasingValue;                                   // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_369E[0x4];                                     // 0x0124(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestInfoNode
// 0x0010 (0x0010 - 0x0000)
struct FQuestInfoNode final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Objid;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ChangeTimeObjective
// 0x0008 (0x0120 - 0x0118)
struct FChangeTimeObjective final : public FObjectiveData
{
public:
	float                                         BeginTime;                                         // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTime;                                           // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ComponentInfo
// 0x0020 (0x0020 - 0x0000)
struct FComponentInfo final
{
public:
	class FName                                   ComponentName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActorComponent*                        ComponentTemplate;                                 // 0x0008(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParentComponentName;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BlueprintGeneratedActorInfo
// 0x0018 (0x0018 - 0x0000)
struct FBlueprintGeneratedActorInfo final
{
public:
	class FName                                   RootComponentName;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FComponentInfo>                 ComponentInfoArray;                                // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RoleLevelObjective
// 0x0008 (0x0120 - 0x0118)
struct FRoleLevelObjective final : public FObjectiveData
{
public:
	int32                                         NeedLevel;                                         // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_369F[0x4];                                     // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SubQuestObjective
// 0x0010 (0x0128 - 0x0118)
struct FSubQuestObjective final : public FObjectiveData
{
public:
	TArray<class FName>                           SubQuests;                                         // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OpActivityPushCond
// 0x0028 (0x0028 - 0x0000)
struct FOpActivityPushCond final
{
public:
	EOpActivityPushCondType                       CondType;                                          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36A0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ValueFrom;                                         // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ValueTo;                                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DelegateMissionObjective
// 0x0008 (0x0120 - 0x0118)
struct FDelegateMissionObjective final : public FObjectiveData
{
public:
	bool                                          bNeedSubmit;                                       // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36A1[0x7];                                     // 0x0119(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AbilityUsedObjective
// 0x0010 (0x0128 - 0x0118)
struct FAbilityUsedObjective final : public FObjectiveData
{
public:
	TArray<struct FGameplayTag>                   GameplayTags;                                      // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SubRoleReviewQuestData
// 0x0090 (0x0098 - 0x0008)
struct FSubRoleReviewQuestData final : public FTableRowBase
{
public:
	class FText                                   QuestSectionDes;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   TitleDes;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   PlotDes;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         RoleIndex;                                         // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UnlockQuestId;                                     // 0x003C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36A2[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              SectionImage;                                      // 0x0048(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ImageIcon;                                         // 0x0070(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemLevelObjective
// 0x0008 (0x0120 - 0x0118)
struct FItemLevelObjective final : public FObjectiveData
{
public:
	ENotifyItemType                               NotifyItemType;                                    // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36A3[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Level;                                             // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ActiveTeleportObjective
// 0x0008 (0x0120 - 0x0118)
struct FActiveTeleportObjective final : public FObjectiveData
{
public:
	class FName                                   MapIconID;                                         // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityLevelObjective
// 0x0008 (0x0120 - 0x0118)
struct FLikeabilityLevelObjective final : public FObjectiveData
{
public:
	int32                                         Level;                                             // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36A4[0x4];                                     // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RedPointConditionHasWearForkItem
// 0x0000 (0x0008 - 0x0008)
struct FRedPointConditionHasWearForkItem final : public FRedPointCondition
{
};

// ScriptStruct HTGame.CloneCompletedObjective
// 0x0010 (0x0128 - 0x0118)
struct FCloneCompletedObjective final : public FObjectiveData
{
public:
	TArray<class FName>                           CloneIDArray;                                      // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapAreaData
// 0x0060 (0x0068 - 0x0008)
struct FMiniMapAreaData final : public FTableRowBase
{
public:
	class FText                                   AreaName;                                          // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FString                                 MapName;                                           // 0x0018(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BelongsRegionID;                                   // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MapAreaCenterLocation;                             // 0x0030(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FogID;                                             // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TowerID;                                           // 0x0050(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       RealEstateMapRenderData;                           // 0x0058(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DivinationLevelObjective
// 0x0008 (0x0120 - 0x0118)
struct FDivinationLevelObjective final : public FObjectiveData
{
public:
	int32                                         DivinationLevel;                                   // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36A5[0x4];                                     // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VisionCompletedObjective
// 0x0010 (0x0128 - 0x0118)
struct FVisionCompletedObjective final : public FObjectiveData
{
public:
	TArray<class FName>                           VisionIDArray;                                     // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GameBackendShopCond
// 0x0028 (0x0028 - 0x0000)
struct FGameBackendShopCond final
{
public:
	EGameBackendShopCondType                      Type;                                              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36A6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FromValue;                                         // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ToValue;                                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GameBackendShopGoodInfo
// 0x00A0 (0x00A0 - 0x0000)
struct FGameBackendShopGoodInfo final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name;                                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Desc;                                              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Tag;                                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGameBackendShopResetType                     ResetType;                                         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36A7[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAwardInfo>                     Items;                                             // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         LimitAmount;                                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Discount;                                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsCharge;                                          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36A8[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ProductId;                                         // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Price;                                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36A9[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Currency;                                          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameBackendShopCond>           Conditions;                                        // 0x0080(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int64                                         UtcStartTime;                                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         UtcEndTime;                                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PortalTargetInfo
// 0x0030 (0x0030 - 0x0000)
struct FPortalTargetInfo final
{
public:
	class AHTVisualActor*                         AutoDoor;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PointLoc;                                          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxOccDistance;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinOccValue;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxOccValue;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36AA[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PassPermitConfig
// 0x0020 (0x0028 - 0x0008)
struct FPassPermitConfig final : public FTableRowBase
{
public:
	int32                                         Level;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RequireExp;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NormalAwardDropID;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AdvancedAwardDropID;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBigAward;                                         // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36AB[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SubTraceRoomData
// 0x0010 (0x0010 - 0x0000)
struct FSubTraceRoomData final
{
public:
	class AHTRoomVolume*                          SubArea;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EnterFixIconId;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RequestCheckAppInfo
// 0x0038 (0x0038 - 0x0000)
struct FRequestCheckAppInfo final
{
public:
	class FString                                 Content;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Force;                                             // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HasUpdate;                                         // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36AC[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 URL;                                               // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Version;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TrackInfo
// 0x0040 (0x0040 - 0x0000)
struct FTrackInfo final
{
public:
	class AActor*                                 ReplicateTrackActor;                               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                 TrackLocation;                                     // 0x0008(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                 ReplicateLocation;                                 // 0x0020(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHitPlayer;                                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36AD[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AbilityCoolDownData
// 0x0048 (0x0048 - 0x0000)
struct FAbilityCoolDownData final
{
public:
	struct FScalableFloat                         CooldownDuration;                                  // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  CooldownTags;                                      // 0x0028(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VirtualBoneStruct
// 0x0018 (0x0018 - 0x0000)
struct FVirtualBoneStruct final
{
public:
	class FName                                   SourceBoneName;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetBoneName;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VirtualBoneName;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OpActivitySaveDataBase
// 0x0018 (0x0018 - 0x0000)
struct FOpActivitySaveDataBase
{
public:
	int32                                         Version;                                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36AE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 GotRewards;                                        // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OpActivitySaveData_SignIn
// 0x0010 (0x0028 - 0x0018)
struct FOpActivitySaveData_SignIn final : public FOpActivitySaveDataBase
{
public:
	int32                                         SignInCount;                                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36AF[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              LastSignInTime;                                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestIntervalStruct
// 0x0010 (0x0010 - 0x0000)
struct FQuestIntervalStruct final
{
public:
	class FName                                   BeginQuestID;                                      // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EndQuestID;                                        // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FootLandDistanceData
// 0x00D0 (0x00D0 - 0x0000)
struct FFootLandDistanceData final
{
public:
	struct FTransform                             FootLTransform;                                    // 0x0000(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             FootRTransform;                                    // 0x0060(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Speed;                                             // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootLandDisntance;                                 // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36B0[0x8];                                     // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTPredictionFootLandAnimNode
// 0x0078 (0x0140 - 0x00C8)
struct FHTPredictionFootLandAnimNode final : public FHTAnimNodeSkeletalControlBase
{
public:
	class UDataTable*                             FootLandData;                                      // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FootLDistanceLandCurve;                            // 0x00D0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FootRDistanceLandCurve;                            // 0x00D8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SpeedCurveXY;                                      // 0x00E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Foot_l;                                            // 0x00E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Foot_r;                                            // 0x00F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         BoneFoot_L;                                        // 0x00F8(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         BoneFoot_R;                                        // 0x0108(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_36B1[0x10];                                    // 0x0118(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         KDTree_K;                                          // 0x0128(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36B2[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 OwningComponent;                                   // 0x0130(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHTPlayerAnimInstance*                  HTPlayerAnimInstance;                              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BezierControlPointParam
// 0x0030 (0x0030 - 0x0000)
struct FBezierControlPointParam final
{
public:
	struct FVector2D                              LocationRange;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              OffLineRange;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              RandAngleAround;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AutoAcceptQuestInfo
// 0x0028 (0x0028 - 0x0000)
struct FAutoAcceptQuestInfo final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftTime;                                          // 0x0008(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsNotSatisfy;                                     // 0x000C(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HasAccept;                                         // 0x000D(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36B3[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNetObjectiveProgress>          ObjectiveProgress;                                 // 0x0010(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	bool                                          bNeedRpc;                                          // 0x0020(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36B4[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LikeabilityData
// 0x0010 (0x0010 - 0x0000)
struct FLikeabilityData final
{
public:
	class FName                                   ActiveChatItemID;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AcceptChatItemID;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionDisplayData
// 0x0050 (0x0050 - 0x0000)
struct FVisionDisplayData final
{
public:
	TSoftObjectPtr<class UTexture2D>              VisionDraw;                                        // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              VisionThumbnail;                                   // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionData
// 0x0220 (0x0228 - 0x0008)
struct FVisionData final : public FTableRowBase
{
public:
	class FText                                   VisionName;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   VisionCode;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                 BelongsLevel;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BelongsAreaID;                                     // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Difficulty;                                        // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36B5[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       ActiveCondition;                                   // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          ShowInList;                                        // 0x0058(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsQuestVision;                                     // 0x0059(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36B6[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AddWertheimerValue;                                // 0x005C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVisionDisplayData                     DisplayData;                                       // 0x0060(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       CompletedDisplayDataOverride;                      // 0x00B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FString                                 VisionCategory;                                    // 0x00C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVisionCompletedRecordContentData> CompletedRecordContents;                           // 0x00D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                VisionLocation;                                    // 0x00E0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                VisionTraceLocation;                               // 0x00F8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       VisionShowMapIconLocation;                         // 0x0110(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector                                VisionHoleCenterLocation;                          // 0x0120(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VisionHoleRange;                                   // 0x0138(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36B7[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              VisionHoleTexture;                                 // 0x0140(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              VisionHoleTextureDrawSize;                         // 0x0168(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VisionShowMapIconDistance;                         // 0x0178(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VisionShowMapIconID;                               // 0x017C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36B8[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              VisionShowMapIconDrawRange;                        // 0x0188(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VisionRadarDimensionDistance;                      // 0x0198(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceHideDistance;                                 // 0x019C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTraceActor;                                       // 0x01A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36B9[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TraceActorDistance;                                // 0x01A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       VisionTraceImageRenderData;                        // 0x01A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FVisionMaskImageRenderData>     VisionMaskImageRenderData;                         // 0x01B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	EVisionType                                   VisionType;                                        // 0x01C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36BA[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       VisionCondition;                                   // 0x01D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       VisionAward;                                       // 0x01E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         VisionAwardUIDelayTime;                            // 0x01F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VisionSoulID;                                      // 0x01F4(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36BB[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              VisionIcon;                                        // 0x0200(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestAwardData
// 0x0020 (0x0020 - 0x0000)
struct FQuestAwardData final
{
public:
	class FName                                   AwardGroupID;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAwardInfo>                     SimpleAwards;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bShowAwardWindow;                                  // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36BC[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestTimeLock
// 0x000C (0x000C - 0x0000)
struct FQuestTimeLock final
{
public:
	float                                         LockTime;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TransitionSpeed;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProtectTimeSeconds;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestFailedData
// 0x0098 (0x0098 - 0x0000)
struct FQuestFailedData final
{
public:
	bool                                          bNeedOffLineFail;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36BD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   QuestFailedDescription;                            // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   RollbackQuestID;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                FailRollbackLocation;                              // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               FailRollbackRotation;                              // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          AutoRollback;                                      // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AutoTeleport;                                      // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36BE[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FailedTrackLocation;                               // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   FailedTrackTarget;                                 // 0x0070(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionRadarData
// 0x0020 (0x0020 - 0x0000)
struct FVisionRadarData final
{
public:
	struct FFloatRange                            DistanceRange;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AkSwitchState;                                     // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DisplayMapNameDetailData
// 0x0010 (0x0018 - 0x0008)
struct FDisplayMapNameDetailData final : public FTableRowBase
{
public:
	TArray<class FText>                           Locations;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BodyType
// 0x0060 (0x0068 - 0x0008)
struct FBodyType final : public FTableRowBase
{
public:
	EBodyType                                     BodyType;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36BF[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BodyHeight;                                        // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WalkSpeed;                                         // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RunSpeed;                                          // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SprintSpeed;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NoTriggerVaultHeight;                              // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTriggerSlowLowStepUpHeight;                     // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTriggerSlowMiddleStepUpHeight;                  // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTriggerSlowHighStepUpHeight;                    // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTriggerFastLowStepUpHeight;                     // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTriggerFastMiddleStepUpHeight;                  // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTriggerFastHighStepUpHeight;                    // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTriggerFastHighVaultHeight;                     // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTriggerVaultObstacleWeight;                     // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PreLowStepUpCheckOffset;                           // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PreMiddleStepUpCheckOffset;                        // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PreHighStepUpCheckOffset;                          // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PreHighVaultCheckOffset;                           // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FastHighVaultMoveOffset;                           // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAirToVaultDeltaHeight;                          // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatScale;                                        // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PreSprintToVines1stUpHeight;                       // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PreSprintToVinesCheckOffset;                       // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SprintToVinesUpCheckOffset;                        // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.JumpToUIData
// 0x0020 (0x0028 - 0x0008)
struct FJumpToUIData final : public FTableRowBase
{
public:
	EQuestUIType                                  QuestUIType;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         UIParaming;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   UnlockFunctionID;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MarkTextNode
// 0x0010 (0x0010 - 0x0000)
struct FMarkTextNode final
{
public:
	class FText                                   MarkText;                                          // 0x0000(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestData
// 0x01B8 (0x01C0 - 0x0008)
struct FQuestData final : public FTableRowBase
{
public:
	class FName                                   QuestId;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   QuestName;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   ChapterID;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DisplayMapName;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TrackMapName;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedCrossBox;                                     // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C1[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInstancedStruct>               ObjectivesInfo;                                    // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EQuestType                                    QuestType;                                         // 0x0050(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoop;                                             // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQuestProcessType                             ObjectiveType;                                     // 0x0052(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMainQuestAutoSpeak;                               // 0x0053(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowQuestAcceptTips;                              // 0x0054(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideQuestMark;                                    // 0x0055(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideTrackMark;                                    // 0x0056(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowAcceptMsg;                                     // 0x0057(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowSubmitMsg;                                     // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedPlayAnimation;                                // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSpecialQuestSettleUI;                          // 0x005A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C2[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   PanelDescription;                                  // 0x0060(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   UnlockTeleportID;                                  // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       TrackQuestConditionRange;                          // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FPreQuest>                      PreQuests;                                         // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EQuestConditionType                           PreQuestConditionType;                             // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C3[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NeedLevel;                                         // 0x009C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NeedYahahaID;                                      // 0x00A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NeedVisionID;                                      // 0x00A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       AcceptQuestConditionRange;                         // 0x00B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EQuestConditionType                           NeedConditionType;                                 // 0x00C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotSatisfyCanNotAccept;                           // 0x00C1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C4[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       SatisfyData;                                       // 0x00C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   LimitMapName;                                      // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       FailedData;                                        // 0x00E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                           NextQuests;                                        // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bAutoNext;                                         // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedSubmit;                                        // 0x0101(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C5[0x6];                                     // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   QuestSubmitDescription;                            // 0x0108(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                 UIParamString;                                     // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       LikeabilityData;                                   // 0x0128(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       QuestAward;                                        // 0x0138(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       QuestTimeLock;                                     // 0x0148(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       QuestWeatherLock;                                  // 0x0158(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       ReloadLocation;                                    // 0x0168(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       InitLocation;                                      // 0x0178(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       AdventureManual;                                   // 0x0188(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FJumpToUIData                          JumpToUIData;                                      // 0x0198(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestSatisfyData
// 0x0008 (0x0008 - 0x0000)
struct FQuestSatisfyData final
{
public:
	float                                         BeginTime;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTime;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestReloadData
// 0x0038 (0x0038 - 0x0000)
struct FQuestReloadData final
{
public:
	class FName                                   LevelName;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotator;                                           // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SunShaftBloom
// 0x0024 (0x0024 - 0x0000)
struct FSunShaftBloom final
{
public:
	bool                                          EnableLightShaftBloom;                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BloomScale;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BloomThreshold;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BloomMaxBrightness;                                // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           BloomTint;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C7[0x3];                                     // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SpecialQuestSettleData
// 0x0050 (0x0058 - 0x0008)
struct FSpecialQuestSettleData final : public FTableRowBase
{
public:
	class FName                                   QuestId;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              QuestIcon;                                         // 0x0010(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasExtraDesc;                                     // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C8[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ExQuestDesc;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   MiniMapFixIconName;                                // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LegendaryQuestEffectData
// 0x00A0 (0x00A8 - 0x0008)
struct FLegendaryQuestEffectData final : public FTableRowBase
{
public:
	bool                                          bIsCompleted;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MainTitle;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Subtitle;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              LogoPhoto;                                         // 0x0030(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              CharacterPhoto;                                    // 0x0058(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              DescPhoto;                                         // 0x0080(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestVehicleSpawnConfig
// 0x0058 (0x0058 - 0x0000)
struct FQuestVehicleSpawnConfig final
{
public:
	struct FVector                                SpawnLoc;                                          // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LaneTag;                                           // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassSpawnedEntityType                 VehicleConfig;                                     // 0x0020(0x0038)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DistanceFogHT
// 0x0068 (0x0068 - 0x0000)
struct FDistanceFogHT final
{
public:
	struct FLinearColor                           SkyTopColor;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SkyMiddleColor;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SkyGroundColor;                                    // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SkyGroundColorAttenuation;                         // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SkyStartDistance;                                  // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceFogStartDistanceOffset;                    // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceFogBlendSmooth;                            // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceFogBlendContrast;                          // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           DistanceFogNearColor;                              // 0x0044(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           DistanceFogFarColor;                               // 0x0054(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0064(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36CA[0x3];                                     // 0x0065(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RedPointItemData
// 0x000C (0x000C - 0x0000)
struct FRedPointItemData final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Amount;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointConditionFunctionUnlockCondition
// 0x0008 (0x0010 - 0x0008)
struct FRedPointConditionFunctionUnlockCondition final : public FRedPointCondition
{
public:
	class FName                                   FunctionID;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.WispsCloudHT
// 0x0028 (0x0028 - 0x0000)
struct FWispsCloudHT final
{
public:
	float                                         WispyCloudAlpha;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           CloudWispsColor;                                   // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           CloudWispsGradient;                                // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36CB[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RedPointConditionHasLikeabilityChat
// 0x0000 (0x0008 - 0x0008)
struct FRedPointConditionHasLikeabilityChat final : public FRedPointCondition
{
};

// ScriptStruct HTGame.RedPointConditionHasLikeabilityAward
// 0x0000 (0x0008 - 0x0008)
struct FRedPointConditionHasLikeabilityAward final : public FRedPointCondition
{
};

// ScriptStruct HTGame.RedPointConditionHasFork
// 0x0000 (0x0008 - 0x0008)
struct FRedPointConditionHasFork final : public FRedPointCondition
{
};

// ScriptStruct HTGame.SettingImageQualityModifyOptionData
// 0x000C (0x000C - 0x0000)
struct FSettingImageQualityModifyOptionData final
{
public:
	class FName                                   ModifyOptionId;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ModifyToIndex;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SettingImageQualityData
// 0x0018 (0x0020 - 0x0008)
struct FSettingImageQualityData final : public FTableRowBase
{
public:
	int32                                         QualityLevel;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36CC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSettingImageQualityModifyOptionData> ModifyOptionData;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointConditionHasItemByType
// 0x0008 (0x0010 - 0x0008)
struct FRedPointConditionHasItemByType final : public FRedPointCondition
{
public:
	EItemType                                     ItemType;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERedPointComparisonOperator                   Comparison;                                        // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36CD[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemCount;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointConditionHasItem
// 0x0010 (0x0018 - 0x0008)
struct FRedPointConditionHasItem final : public FRedPointCondition
{
public:
	TArray<struct FRedPointItemData>              ItemArray;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointConditionCharacterCharacterAwaken
// 0x0000 (0x0008 - 0x0008)
struct FRedPointConditionCharacterCharacterAwaken final : public FRedPointCondition
{
};

// ScriptStruct HTGame.RedPointMultiConditionOr
// 0x0010 (0x0018 - 0x0008)
struct FRedPointMultiConditionOr final : public FRedPointCondition
{
public:
	TArray<struct FInstancedStruct>               SubConditions;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NPCSpecialGiftData
// 0x0010 (0x0018 - 0x0008)
struct FNPCSpecialGiftData final : public FTableRowBase
{
public:
	class FName                                   CharacterId;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AwardDropID;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointConditionDelegateMissionAward
// 0x0000 (0x0008 - 0x0008)
struct FRedPointConditionDelegateMissionAward final : public FRedPointCondition
{
};

// ScriptStruct HTGame.RedPointConditionActNotice
// 0x0000 (0x0008 - 0x0008)
struct FRedPointConditionActNotice final : public FRedPointCondition
{
};

// ScriptStruct HTGame.RedPointConditionQuestCanSubmit
// 0x0010 (0x0018 - 0x0008)
struct FRedPointConditionQuestCanSubmit final : public FRedPointCondition
{
public:
	TArray<EQuestType>                            QuestTypes;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointIDSelectorGetAllCharacterItems
// 0x0000 (0x0008 - 0x0008)
struct FRedPointIDSelectorGetAllCharacterItems final : public FRedPointIDSelector
{
};

// ScriptStruct HTGame.RealEstate
// 0x0010 (0x0010 - 0x0000)
struct FRealEstate final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RedPointIDSelectorGetMainCharacterID
// 0x0000 (0x0008 - 0x0008)
struct FRedPointIDSelectorGetMainCharacterID final : public FRedPointIDSelector
{
};

// ScriptStruct HTGame.RedPointIDSelectorGetLikeabilityID
// 0x0000 (0x0008 - 0x0008)
struct FRedPointIDSelectorGetLikeabilityID final : public FRedPointIDSelector
{
};

// ScriptStruct HTGame.RedPointLikeabilityEvent
// 0x0008 (0x0018 - 0x0010)
struct FRedPointLikeabilityEvent final : public FRedPointEvent
{
public:
	uint8                                         Pad_36CE[0x8];                                     // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VisionPockmonCondition
// 0x0008 (0x0008 - 0x0000)
struct FVisionPockmonCondition final : public FVisionConditionBase
{
public:
	class FName                                   PockmonID;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TriggerItemID
// 0x0010 (0x0028 - 0x0018)
struct FTriggerItemID final : public FTriggerTypeCondition
{
public:
	TArray<class FName>                           ItemIDArray;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RepGraphActorClassSettings
// 0x0030 (0x0030 - 0x0000)
struct FRepGraphActorClassSettings final
{
public:
	struct FSoftClassPath                         ActorClass;                                        // 0x0000(0x0020)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddClassRepInfoToMap;                             // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36CF[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EClassRepNodeMapping                          ClassNodeMapping;                                  // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddToRPC_Multicast_OpenChannelForClassMap;        // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRPC_Multicast_OpenChannelForClass;                // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36D0[0x6];                                     // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MainReviewQuestData
// 0x0088 (0x0090 - 0x0008)
struct FMainReviewQuestData final : public FTableRowBase
{
public:
	class FName                                   UnlockQuestId;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Section;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   TitleDes;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   PlotDes;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              SectionImage;                                      // 0x0040(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ImageIcon;                                         // 0x0068(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RoleReviewQuestData
// 0x0068 (0x0070 - 0x0008)
struct FRoleReviewQuestData final : public FTableRowBase
{
public:
	int32                                         RoleIndex;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36D1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              RoleImage;                                         // 0x0010(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   RoleDes;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              RoleSmallHeadImage;                                // 0x0048(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FurnitureLoad
// 0x0008 (0x0010 - 0x0008)
struct FFurnitureLoad final : public FTableRowBase
{
public:
	int32                                         FurnitureLoad;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxCount;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RoomDiyData
// 0x00B8 (0x00C0 - 0x0008)
struct FRoomDiyData final : public FTableRowBase
{
public:
	class FName                                   RoomId;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DecorationPlanID;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DecorationPlanDesc;                                // 0x0018(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              DecorationPlan;                                    // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              PreviewImage;                                      // 0x0050(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     CameraTransform;                                   // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   CostCapital;                                       // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BuyPrice;                                          // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36D2[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UDataLayerAsset>         SoftObjLayerAsset;                                 // 0x0098(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VolumeTransferData
// 0x0028 (0x0028 - 0x0000)
struct FVolumeTransferData final
{
public:
	float                                         OpeningTimeBegin;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OpeningTimeEnd;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuestStateConditionContainer          QuestStateCondition;                               // 0x0008(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   TransformID;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VolumeHintData
// 0x0028 (0x0028 - 0x0000)
struct FVolumeHintData final
{
public:
	float                                         HintTime;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36D3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TransferFinishMsgs;                                // 0x0008(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   HintMsgs;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TraceRoomData
// 0x0030 (0x0030 - 0x0000)
struct FTraceRoomData final
{
public:
	class FName                                   AreaId;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ExitFixIconId;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36D4[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHTRoomVolume*                          ParentArea;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSubTraceRoomData>              SubAreaList;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RootMotionSource_HTConstantForce
// 0x0000 (0x0100 - 0x0100)
struct FRootMotionSource_HTConstantForce final : public FRootMotionSource_ConstantForce
{
};

// ScriptStruct HTGame.HTRootMotionSource_Traction
// 0x0060 (0x0160 - 0x0100)
struct FHTRootMotionSource_Traction final : public FRootMotionSource_ConstantForce
{
public:
	class AActor*                                 CenterActor;                                       // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TractionCfgId;                                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CenterOffset;                                      // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CenterLocation;                                    // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDynamicCenterLocation;                            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFaceToCenterActor;                                // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebug;                                            // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36D5[0x25];                                    // 0x013B(0x0025)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RouteMove
// 0x0028 (0x0028 - 0x0000)
struct FRouteMove final
{
public:
	float                                         MoveTime;                                          // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36D6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoveToTime;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StayTime;                                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionReceiveAwardData
// 0x0030 (0x0038 - 0x0008)
struct FVisionReceiveAwardData final : public FTableRowBase
{
public:
	class FText                                   AwardConditionText;                                // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FName                                   AreaId;                                            // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       CompleteCondition;                                 // 0x0020(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FName                                   AwardDropID;                                       // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkillEffectSyncEndStateInfo
// 0x0050 (0x0050 - 0x0000)
struct FSkillEffectSyncEndStateInfo final
{
public:
	class AHTAbilityCharacter*                    OwnerCharacter;                                    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CharacterLocation;                                 // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               CharacterRotation;                                 // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                CharacterVelocity;                                 // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HandleDamageInfo_Net
// 0x0150 (0x0150 - 0x0000)
struct FHandleDamageInfo_Net final
{
public:
	class UGameplayEffect*                        GameplayEffect;                                    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             HitInfo;                                           // 0x0008(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AHTAbilityCharacter*                    DamageCharacter;                                   // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStartSkillEffectInstigatorInfo        InstigatorInfo;                                    // 0x0108(0x0040)(NoDestructor, NativeAccessSpecifierPublic)
	bool                                          HitDead;                                           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36D7[0x1];                                     // 0x0149(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int16                                         PredictionKey;                                     // 0x014A(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36D8[0x4];                                     // 0x014C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HandleDamageInfo_NetQueue
// 0x0010 (0x0010 - 0x0000)
struct FHandleDamageInfo_NetQueue final
{
public:
	TArray<struct FHandleDamageInfo_Net>          HandleDamageInfosArray;                            // 0x0000(0x0010)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTGuideInfo
// 0x0030 (0x0030 - 0x0000)
struct FHTGuideInfo final
{
public:
	TArray<class FName>                           MutualExclusionGuideIDs;                           // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               GuideStepDatas;                                    // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                           TeachGuideIDs;                                     // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTGuideData
// 0x00A0 (0x00A8 - 0x0008)
struct FHTGuideData final : public FTableRowBase
{
public:
	class FString                                 GuideAnnottation;                                  // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceGuide;                                       // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36D9[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   GuideFunctionID;                                   // 0x001C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36DA[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHTGuideInfo                           DefaultGuide;                                      // 0x0028(0x0030)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<ECommonInputType, struct FHTGuideInfo>   PlatformGuideInfo;                                 // 0x0058(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OfferPropData
// 0x0048 (0x0050 - 0x0008)
struct FOfferPropData final : public FTableRowBase
{
public:
	TArray<class FName>                           OfferPropTag;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   OfferName;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                 TypeNums;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FOfferResultMap>                ResultMaps;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bCanOfferUnmatchedProps;                           // 0x0048(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36DB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MontageEventTagMap
// 0x0050 (0x0050 - 0x0000)
struct FMontageEventTagMap final
{
public:
	TMap<struct FGameplayTag, int32>              SectionEventTagMap;                                // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SpawnHottaCharacter
// 0x0038 (0x0038 - 0x0000)
struct FSpawnHottaCharacter final
{
public:
	TSubclassOf<class AHTCharacter>               SpawnCharacterClass;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFindSpawnLocationObj*                  SpawnLocationObj;                                  // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFindSpawnRotationObj*                  SpawnRotationObj;                                  // 0x0010(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFindSpawnScaleObj*                     SpawnScaleObj;                                     // 0x0018(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlySpawnOnServer;                                // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36DC[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UHTGATargetType>            SelectSpawnTargetType;                             // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseSourceLevel;                                    // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36DD[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SpawnHottaCharacterArray
// 0x0010 (0x0010 - 0x0000)
struct FSpawnHottaCharacterArray final
{
public:
	TArray<struct FSpawnHottaCharacter>           SpawnArray;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HeightFogFB
// 0x0060 (0x0060 - 0x0000)
struct FHeightFogFB final
{
public:
	float                                         FogDensity;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FogHeightFalloff;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSecondFogData                         SecondFogData;                                     // 0x0008(0x000C)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	float                                         StartDistance;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FogCutoffDistance;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FogMaxOpacity;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           FogInscatteringColor;                              // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirectionalInscatteringExponent;                   // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           FogDirectionalInscatteringColor;                   // 0x0034(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           VolumetricFogEmissive;                             // 0x0044(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumetircFogExtinctionScale;                      // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumetircFogViewDistance;                         // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumetircFogStartDistance;                        // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SpawnActorData
// 0x0040 (0x0040 - 0x0000)
struct FSpawnActorData final
{
public:
	TSubclassOf<class AActor>                     SpawnClass;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFindSpawnConditionObj*>         SpawnConditionObjs;                                // 0x0008(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	class UFindSpawnLocationObj*                  SpawnLocationObj;                                  // 0x0018(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFindSpawnRotationObj*                  SpawnRotationObj;                                  // 0x0020(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFindSpawnScaleObj*                     SpawnScaleObj;                                     // 0x0028(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanSpawnOnClient;                                 // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlySpawnOnServer;                                // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36DE[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UHTGATargetType>            SelectSpawnTargetType;                             // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AttachArmParams
// 0x0014 (0x0014 - 0x0000)
struct FAttachArmParams final
{
public:
	float                                         TargetArmLength;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraLagSpeed;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraRotationLagSpeed;                            // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraLagMaxDistance;                              // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebug;                                            // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36DF[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SpawnActorArray
// 0x0010 (0x0010 - 0x0000)
struct FSpawnActorArray final
{
public:
	TArray<struct FSpawnActorData>                SpawnArray;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DamageTriggerActorStaticData
// 0x0050 (0x0058 - 0x0008)
struct FDamageTriggerActorStaticData final : public FTableRowBase
{
public:
	struct FVector                                SpawnOffset;                                       // 0x0008(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               SpawnOffsetRotation;                               // 0x0020(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DelaySpawnTime;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayDestoryTime;                                  // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TriggerOnSpawn;                                    // 0x0044(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36E0[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayTriggerTime;                                  // 0x0048(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TriggerLinkTimeDuration;                           // 0x004C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Period;                                            // 0x0050(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxTriggerCount;                                   // 0x0054(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LensFlare
// 0x001C (0x001C - 0x0000)
struct FLensFlare final
{
public:
	bool                                          EnableSunLensFlare;                                // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36E1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LensFlareStrength;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LensFlareTint;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScaleFlareElements;                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HitDownParam
// 0x0040 (0x0040 - 0x0000)
struct FHitDownParam final
{
public:
	float                                         DownSpeed;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoEndEffectTime;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalSpeed;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseInstigatorOffset;                              // 0x000C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36E2[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               HitOutDirectionOffSet;                             // 0x0010(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         MaxDistance;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LoopSectionName;                                   // 0x002C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DownSectionName;                                   // 0x0034(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36E3[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HitOutParam
// 0x0040 (0x0040 - 0x0000)
struct FHitOutParam final
{
public:
	float                                         UpSpeed;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalSpeed;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBackAttacker;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHitImpactDirection;                               // 0x0009(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bModifyDirectionAndSpeed;                          // 0x000A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseInstigatorOffset;                              // 0x000B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSelfOffset;                                    // 0x000C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36E4[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               HitOutDirectionOffSet;                             // 0x0010(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         GravityScale;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StartSectionName;                                  // 0x002C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DownSectionName;                                   // 0x0034(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36E5[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HitFloatingParam
// 0x0044 (0x0044 - 0x0000)
struct FHitFloatingParam final
{
public:
	float                                         UpSpeed;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UPAccMaxHeight;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AccMinHeight;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DownAccSpeedScale;                                 // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxFloatingTime;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxHeightPauseTime;                                // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitPauseTime;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ForcePauseAfterUp;                                 // 0x001C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UpFloatingEffect;                                  // 0x001D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36E6[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayFloatingStandTime;                            // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FloatingStartSection;                              // 0x0024(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FloatingLoopSection;                               // 0x002C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FloatingHitSection;                                // 0x0034(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FloatingEndSection;                                // 0x003C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ToonMaterialEffect
// 0x0040 (0x0040 - 0x0000)
struct FToonMaterialEffect final
{
public:
	class UMaterialInstanceDynamic*               ToonCloudMeshMaterials;                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EmissoveTime;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36E7[0x8];                                     // 0x000C(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxCloudRange;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinCloudRange;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36E8[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture*>                       DissoveTextures;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_36E9[0x10];                                    // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ToonCloudEffect
// 0x0028 (0x0028 - 0x0000)
struct FToonCloudEffect final
{
public:
	TWeakObjectPtr<class AStaticMeshActor>        ToonCloudMesh;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UStaticMeshComponent>    ToonCloudMeshComponet;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Speed;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36EA[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FToonMaterialEffect>            ToonCloudMeshMaterialEffects;                      // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HitRotateParam
// 0x0040 (0x0040 - 0x0000)
struct FHitRotateParam final
{
public:
	float                                         AngleDeg;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36EB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RroundAxis;                                        // 0x0008(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDistance;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InterpSpeed;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CheckFloating;                                     // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36EC[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxRotationTime;                                   // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OpenHitOut;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36ED[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpSpeed;                                           // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalSpeed;                                       // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GravityScale;                                      // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HalfAutoLockDirection
// 0x0028 (0x0028 - 0x0000)
struct FHalfAutoLockDirection final
{
public:
	ELockDirectionCondition                       PriotityType;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36EE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UHTGATargetType>            TargetType;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PriotityAngle;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LockTargetPriotityAngle;                           // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           IgnoreHalfLockSections;                            // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SpawnParticleEffectDirectionForce
// 0x0014 (0x0014 - 0x0000)
struct FSpawnParticleEffectDirectionForce final
{
public:
	class FName                                   ForceDirectionParam;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ForceSizeParam;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForceSize;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkillEffectParam
// 0x0010 (0x0010 - 0x0000)
struct FSkillEffectParam final
{
public:
	ESkillEventType                               EventType;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36EF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UHTSkillEffectBase>         EffectObj;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CanSpawnParticleParams
// 0x0002 (0x0002 - 0x0000)
struct FCanSpawnParticleParams final
{
public:
	bool                                          IsMainCharacter;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InDialogue;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BuffEffectParam
// 0x0038 (0x0038 - 0x0000)
struct FBuffEffectParam final
{
public:
	TSubclassOf<class UHTGamePlayEffect>          GEClass;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StackCount;                                        // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36F0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CheckTags;                                         // 0x0010(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         ModifyDuration;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxModifyDuration;                                 // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BuffEventEffectData
// 0x0058 (0x0058 - 0x0000)
struct FBuffEventEffectData final
{
public:
	EBuffEventType                                EventType;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBuffEffectType                               EffectType;                                        // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36F1[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TriggerStackCount;                                 // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          BySelf;                                            // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TargetTrigger;                                     // 0x0009(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseSourceObject;                                   // 0x000A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36F2[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CheckTriggerObjectName;                            // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGAEffectParam>                 ExecGAs;                                           // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSimpleGAEffectParam>           ExecSimpleGAs;                                     // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FBuffEffectParam>               ExecGEs;                                           // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffectCustomApplicationRequirement> ApplicationRequirement;                            // 0x0050(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SpawnParticleExtendParams
// 0x000C (0x000C - 0x0000)
struct alignas(0x04) FSpawnParticleExtendParams final
{
public:
	uint8                                         Pad_36F3[0xC];                                     // 0x0000(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PlayAkAudioEventParam
// 0x0040 (0x0040 - 0x0000)
struct FPlayAkAudioEventParam final
{
public:
	TSoftObjectPtr<class UAkAudioEvent>           SoftAkEvent;                                       // 0x0000(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAttached;                                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36F4[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x002C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36F5[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          SaveLoadAkAudioEvent;                              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct HTGame.HitWhiteParam
// 0x0028 (0x0028 - 0x0000)
struct FHitWhiteParam final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WhiteColor;                                        // 0x0008(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36F6[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DataLayerYahahaCondition
// 0x0010 (0x0018 - 0x0008)
struct FDataLayerYahahaCondition final : public FLocalDataLayerConditionBase
{
public:
	class FName                                   YahahaId;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedComplete;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36F7[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DamageLocationInfo
// 0x0030 (0x0030 - 0x0000)
struct FDamageLocationInfo final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageScale;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MontageSection;                                    // 0x000C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TriggerDamageLocationEffect;                       // 0x0014(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36F8[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSpawnParticleEffectParams>     HitParticleEffects;                                // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          HitSound;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DirectionHitWhiteParam
// 0x0080 (0x0088 - 0x0008)
struct FDirectionHitWhiteParam final : public FTableRowBase
{
public:
	class FName                                   ParameterName;                                     // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParameterName2;                                    // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveVector>            WhiteColorCurve;                                   // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           HitColorMul1;                                      // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           HitColorMul2;                                      // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DirectionParameterName;                            // 0x0060(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               PlayDirection;                                     // 0x0068(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0080(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36F9[0x4];                                     // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.WarningDecalParam
// 0x0028 (0x0028 - 0x0000)
struct FWarningDecalParam final
{
public:
	uint8                                         Pad_36FA[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UDecalComponent>         DecalCmp;                                          // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UMaterialInstanceDynamic> DecalMaterialDynamic;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36FB[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            MaterialParameterCurve;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuickMenuSettingsPlaceIndexImage
// 0x0010 (0x0010 - 0x0000)
struct FQuickMenuSettingsPlaceIndexImage final
{
public:
	TArray<TSoftObjectPtr<class UTexture2D>>      Textures;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkillOperationData
// 0x000C (0x000C - 0x0000)
struct FSkillOperationData final
{
public:
	ESkillOperationType                           SkillOperationType;                                // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AutoAim;                                           // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36FC[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AimMinDistance;                                    // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IgnoreMoveInput;                                   // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          MoveControllerMode;                                // 0x0009(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowAimPoint;                                      // 0x000A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RotateEnable;                                      // 0x000B(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkillModifyData
// 0x000C (0x000C - 0x0000)
struct FSkillModifyData final
{
public:
	class FName                                   ModifyName;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ModifyValue;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconFunctionData_Shop
// 0x0000 (0x0008 - 0x0008)
struct FMiniMapIconFunctionData_Shop final : public FMiniMapIconFunctionData_Base
{
};

// ScriptStruct HTGame.GameplayEffectModifyData
// 0x0008 (0x0008 - 0x0000)
struct FGameplayEffectModifyData final
{
public:
	float                                         AddValue;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MultValue;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TractionData
// 0x0038 (0x0038 - 0x0000)
struct FTractionData final
{
public:
	struct FVector                                GoalVector;                                        // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxAngle;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDist;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TowInitSpeed;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLimitTurn;                                        // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreNPC;                                        // 0x0025(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36FD[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TowLastSpeed;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36FE[0xC];                                     // 0x002C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MiniMapFixedIcons
// 0x00D8 (0x00E0 - 0x0008)
struct FMiniMapFixedIcons final : public FTableRowBase
{
public:
	class FName                                   MapIconID;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BelongsLevel;                                      // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BelongsAreaID;                                     // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36FF[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             IconTransform;                                     // 0x0030(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShowInMiniMapType;                                 // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShowInMiniMapMode;                                 // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUnderFog;                                         // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3700[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   IconNameOverride;                                  // 0x00A0(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FText                                   IconDescOverride;                                  // 0x00B0(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               ExtendDatas;                                       // 0x00C0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       FunctionData;                                      // 0x00D0(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GameplayEffectTips
// 0x0070 (0x0078 - 0x0008)
struct FGameplayEffectTips final : public FTableRowBase
{
public:
	class FText                                   Name;                                              // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Desc;                                              // 0x0040(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EBuffInfoType                                 BuffType;                                          // 0x0050(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsShowInBuffMaganger;                              // 0x0051(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3701[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Hierarchy;                                         // 0x0054(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FScalableFloat>                 DescParam;                                         // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   GEParamName;                                       // 0x0068(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GEParamNum;                                        // 0x0070(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValueOnlyAndCustomDesc;                          // 0x0074(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValueOnlyAndStackCountReplaceLevel;              // 0x0075(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3702[0x2];                                     // 0x0076(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GameplayAbilityStruct
// 0x0080 (0x0080 - 0x0000)
struct FGameplayAbilityStruct final
{
public:
	int32                                         GAParameNum;                                       // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3703[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Name;                                              // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Desc;                                              // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0028(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 Tags;                                              // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                 Operations;                                        // 0x0060(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ShortDesc;                                         // 0x0070(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SaveGameplayAbilityMapping
// 0x0028 (0x0030 - 0x0008)
struct FSaveGameplayAbilityMapping final : public FTableRowBase
{
public:
	TSoftClassPtr<class UClass>                   GameplayAbilityClass;                              // 0x0008(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HitActorInfo
// 0x0108 (0x0108 - 0x0000)
struct alignas(0x08) FHitActorInfo final
{
public:
	uint8                                         Pad_3704[0x108];                                   // 0x0000(0x0108)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SkillMoveToActorTaskParam
// 0x0048 (0x0048 - 0x0000)
struct FSkillMoveToActorTaskParam final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            TimeMappingCurve;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocationOffset;                              // 0x0010(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERootMotionMoveToActorTargetOffsetType        OffsetAlignment;                                   // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3705[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            TargetLerpSpeedHorizontal;                         // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            TargetLerpSpeedVertical;                           // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetNewMovementMode;                               // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovementMode                                 MovementMode;                                      // 0x0041(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3706[0x6];                                     // 0x0042(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GameFeatureDoPlayerStateEventEntry
// 0x0020 (0x0028 - 0x0008)
struct FGameFeatureDoPlayerStateEventEntry final : public FGameFeaturePlayerStateEntry
{
public:
	class FName                                   FunctionName;                                      // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ParamList;                                         // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         bClient : 1;                                       // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bServer : 1;                                       // 0x0020(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_3707[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SkillMoveToForceTaskParam
// 0x0070 (0x0070 - 0x0000)
struct FSkillMoveToForceTaskParam final
{
public:
	ERootMotionTargetLocationType                 TargtLocationType;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3708[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetLocationOffset;                              // 0x0008(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SelfLocationOffset;                                // 0x0020(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFitFloor;                                         // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3709[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetLocation;                                    // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0058(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EndNotifyFaceTarget;                               // 0x005C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_370A[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           PathOffsetCurve;                                   // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetNewMovementMode;                               // 0x0068(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovementMode                                 MovementMode;                                      // 0x0069(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_370B[0x6];                                     // 0x006A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SkillJumpForceTaskParam
// 0x00A0 (0x00A0 - 0x0000)
struct FSkillJumpForceTaskParam final
{
public:
	ERootMotionTargetLocationType                 TargtLocationType;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_370C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ForwardOffset;                                     // 0x0008(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocationOffset;                              // 0x0020(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SelfLocationOffset;                                // 0x0038(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         JumpDistance;                                      // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFitFloor;                                         // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_370D[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               JumpRotation;                                      // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x0070(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         JumpHeight;                                        // 0x0088(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x008C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                           PathOffsetCurve;                                   // 0x0090(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            TimeMappingCurve;                                  // 0x0098(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTModuleExtraModifierInfo
// 0x0348 (0x0348 - 0x0000)
struct FHTModuleExtraModifierInfo final
{
public:
	bool                                          IsDynamicCalc;                                     // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_370E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayModifierInfo                  GameplayModifierInfo;                              // 0x0008(0x0338)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffectCustomApplicationRequirement> ApplicationRequirement;                            // 0x0340(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VoteForKickTeammate
// 0x0078 (0x0078 - 0x0000)
struct FVoteForKickTeammate final
{
public:
	int64                                         KickTeammateRoleId;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 KickedTeammateName;                                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int64, bool>                             VoteTeammateList;                                  // 0x0018(0x0050)(NativeAccessSpecifierPublic)
	int64                                         VoteKickInitiatorRoleId;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         KickTeammateTime;                                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTGameplayModifierInfo
// 0x0018 (0x0018 - 0x0000)
struct FHTGameplayModifierInfo final
{
public:
	TArray<struct FGameplayModifierInfo>          GameplayModifierInfos;                             // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffectCustomApplicationRequirement> ApplicationRequirement;                            // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMagnitudeWithCondition
// 0x0300 (0x0300 - 0x0000)
struct FHTMagnitudeWithCondition final
{
public:
	struct FGameplayEffectModifierMagnitude       Magnitude;                                         // 0x0000(0x01E0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements               SourceTags;                                        // 0x01E0(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements               TargetTags;                                        // 0x0268(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffectCustomApplicationRequirement>> ApplicationRequirementArray;                       // 0x02F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ModifyActiveEffectDurationData
// 0x0028 (0x0028 - 0x0000)
struct FModifyActiveEffectDurationData final
{
public:
	struct FGameplayTagContainer                  GameplayTagContainer;                              // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         TimeExpand;                                        // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeExpandMult;                                    // 0x0024(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TrialData
// 0x0048 (0x0050 - 0x0008)
struct FTrialData final : public FTableRowBase
{
public:
	ETrialType                                    TrialType;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_370F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0010(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AreaId;                                            // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TrialID;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FailRnage;                                         // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3710[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LevelName;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTActivateAbilityEventData
// 0x0070 (0x0070 - 0x0000)
struct FHTActivateAbilityEventData final
{
public:
	class AActor*                                 AbilitySelectedActor;                              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StartPlaySectionName;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               CurActorRotation;                                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                PlayDiraction;                                     // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PlayLocation;                                      // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               JoystickRotation;                                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ServerTriggerRootMotionNotifyData
// 0x0020 (0x0020 - 0x0000)
struct FServerTriggerRootMotionNotifyData final
{
public:
	class FName                                   TriggerSectionName;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CombatStatisticsData
// 0x0010 (0x0010 - 0x0000)
struct FCombatStatisticsData final
{
public:
	class FName                                   InjurySourceName;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BasicInjury;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FinalInjury;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GamepadAbilityActionsParam
// 0x0100 (0x0108 - 0x0008)
struct FGamepadAbilityActionsParam final : public FTableRowBase
{
public:
	class FText                                   Display;                                           // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	bool                                          bIsDisplayOnly;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3711[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CategoryName;                                      // 0x001C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3712[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   DisplayKey;                                        // 0x0028(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   KeyName;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGamepadAbilityActions                        AbilityAction;                                     // 0x0048(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3713[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BP_Priority;                                       // 0x004C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   PrerequireKey;                                     // 0x0050(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputAction*                           InputAction;                                       // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCustomKeys;                                       // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3714[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<struct FKey>                             KeysToIgnore;                                      // 0x0078(0x0050)(Edit, NativeAccessSpecifierPublic)
	bool                                          bIsPlayerMappable;                                 // 0x00C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3715[0x3F];                                    // 0x00C9(0x003F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DamageTypeData
// 0x0018 (0x0018 - 0x0000)
struct FDamageTypeData final
{
public:
	EExecutionDamageTypeEX                        DamageTypeEX;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsCrit;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HitHead;                                           // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsWeakUnbalDamage;                                // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDamageDisPlayType                            DamageDisPlayType;                                 // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3716[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCombatStatisticsData                  CombatStatistics;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTGameplayEffectExtraDamageCfg
// 0x0300 (0x0300 - 0x0000)
struct FHTGameplayEffectExtraDamageCfg final
{
public:
	struct FGameplayEffectModifierMagnitude       ExtraDamageCoefficient;                            // 0x0000(0x01E0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements               SourceTags;                                        // 0x01E0(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements               TargetTags;                                        // 0x0268(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bRequireOwnerAsInstigator;                         // 0x02F0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDamageDisPlayType                            ExtraAppendDamageDisplayType;                      // 0x02F1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3717[0x6];                                     // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffectCustomApplicationRequirement> ApplicationRequirement;                            // 0x02F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LinkTimerInfo
// 0x0070 (0x0070 - 0x0000)
struct FLinkTimerInfo final
{
public:
	TSoftClassPtr<class UClass>                   LinkTimeVolume;                                    // 0x0000(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayTriggerTime;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3718[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CooldownTags;                                      // 0x0030(0x0020)(Edit, BlueprintVisible, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>    WeakPassiveGameplayEffects;                        // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         WeakSelfDuration;                                  // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3719[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            WeakSelfRateCurve;                                 // 0x0068(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TickPlaystationHandler
// 0x0008 (0x0038 - 0x0030)
struct FTickPlaystationHandler final : public FTickFunction
{
public:
	class UPlaystationHandler*                    Target;                                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FightMidCalcuLimitData
// 0x0008 (0x0008 - 0x0000)
struct FFightMidCalcuLimitData final
{
public:
	float                                         LimitMin;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LimitMax;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.IntersectionLinkArray
// 0x0010 (0x0010 - 0x0000)
struct FIntersectionLinkArray final
{
public:
	TArray<struct FIntersectionLink>              Links;                                             // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FightCalculationStaticParam
// 0x0030 (0x0030 - 0x0000)
struct FFightCalculationStaticParam final
{
public:
	float                                         DefCoeff_1;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefCoeff_2;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResistCoeff_1;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResistCoeff_2;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResistCoeff_3;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResistCoeff_4;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResistCoeff_5;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResistCoeff_6;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResistCoeff_7;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResistCoeff_8;                                     // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatCoeff_1;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageLimit;                                       // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PlayerTenacityStaticParam
// 0x0008 (0x0008 - 0x0000)
struct FPlayerTenacityStaticParam final
{
public:
	float                                         TenacityMax;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TenacityRecoverTick;                               // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SavedZoneGraphBusRouteData
// 0x0010 (0x0010 - 0x0000)
struct FSavedZoneGraphBusRouteData final
{
public:
	TArray<struct FSavedZoneGraphBusLane>         LaneArray;                                         // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkillDamageExecutionData
// 0x0050 (0x0058 - 0x0008)
struct FSkillDamageExecutionData final : public FTableRowBase
{
public:
	EExecutionDamageTypeEX                        DamageTypeEX;                                      // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_371A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChargeAdd;                                         // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalValue;                                        // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeterochromeAdd;                                   // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GAName;                                            // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EExecutionDamageSourceCategory                DamageSourceCategory;                              // 0x0020(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_371B[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FixedCritRate;                                     // 0x0024(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 AtkRateBaseArray;                                  // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<float>                                 DefRateBaseArray;                                  // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<float>                                 HPRateBaseArray;                                   // 0x0048(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MonsterSkillDamageExecutionData
// 0x0010 (0x0018 - 0x0008)
struct FMonsterSkillDamageExecutionData final : public FTableRowBase
{
public:
	EExecutionDamageTypeEX                        DamageTypeEX;                                      // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_371C[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AtkRateBase;                                       // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TenacityAdd;                                       // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_371D[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ReactionDamageExecutionData
// 0x0018 (0x0020 - 0x0008)
struct FReactionDamageExecutionData final : public FTableRowBase
{
public:
	EReactionResultType                           ProduceReactionType;                               // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_371E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 ReactionDamageArray;                               // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RealEstateData
// 0x0248 (0x0250 - 0x0008)
struct FRealEstateData final : public FTableRowBase
{
public:
	class FString                                 BelongsArea;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_371F[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0020(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BuildingTypeID;                                    // 0x0080(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   RealEstateName;                                    // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              RealEstateNameImage;                               // 0x0098(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Slogan;                                            // 0x00C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Address;                                           // 0x00D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   RealEstateDesc;                                    // 0x00E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   RealEstateTag;                                     // 0x00F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class FText>                           RealEstateTags;                                    // 0x0100(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	ERealEstateSaleState                          SaleState;                                         // 0x0110(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3720[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              PreviewTexture;                                    // 0x0118(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ListTexture;                                       // 0x0140(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      ListMat;                                           // 0x0168(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              PhotoTexture;                                      // 0x0190(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UTexture2D>>      HouseTypeTexture;                                  // 0x01B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ShowTexture;                                       // 0x01C8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ShowBGTexture;                                     // 0x01F0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MediaID;                                           // 0x0218(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CostCapital;                                       // 0x0220(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         CostAmount;                                        // 0x0228(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParkingAmount;                                     // 0x0230(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MapIconID;                                         // 0x0234(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttributeID;                                       // 0x023C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalLoad;                                         // 0x0244(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DecorationId;                                      // 0x0248(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RestrainUnbalData
// 0x0010 (0x0010 - 0x0000)
struct FRestrainUnbalData final
{
public:
	EUnbalBarType                                 UnbalBarType;                                      // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3721[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RestrainDamageCoefficient;                         // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RestrainUnbalSpeed;                                // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RestrainUnbalCoefficient;                          // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTModifierValuesStruct
// 0x0010 (0x0010 - 0x0000)
struct FHTModifierValuesStruct final
{
public:
	TArray<struct FHTModifierValueStruct>         HTModifierValueArray;                              // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RestrainUnbalConfigData
// 0x0018 (0x0020 - 0x0008)
struct FRestrainUnbalConfigData final : public FTableRowBase
{
public:
	EExecutionDamageTypeEX                        DamageTypeEX;                                      // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3722[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRestrainUnbalData>             DataArray;                                         // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FurnitureAttributeConfig
// 0x0010 (0x0018 - 0x0008)
struct FFurnitureAttributeConfig final : public FTableRowBase
{
public:
	int32                                         Comfort;                                           // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Fortune;                                           // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Love;                                              // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Collect;                                           // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTDamageTextInfo
// 0x0048 (0x0048 - 0x0000)
struct FHTDamageTextInfo final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDamageDisPlayType                            DamageDisplayTextType;                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3723[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IDamageValue;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EExecutionDamageTypeEX                        DamageTypeEX;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCrit;                                             // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHitHead;                                          // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsWeakUnbalDamage;                                // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  Attacker;                                          // 0x0024(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AHTCharacter>            Victim;                                            // 0x002C(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCombatStatisticsData                  CombatStatistics;                                  // 0x0034(0x0010)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	EReactionResultType                           ReactionType;                                      // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EReactionDisplayType                          ReactionDisplayType;                               // 0x0045(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3724[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTActiveGameplayEffectHandle
// 0x0018 (0x0018 - 0x0000)
struct FHTActiveGameplayEffectHandle final
{
public:
	struct FActiveGameplayEffectHandle            ActiveGameplayEffectHandle;                        // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPendingRemove;                                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3725[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           BuiltInCooldownHandle;                             // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTReactionTexture
// 0x0018 (0x0018 - 0x0000)
struct FHTReactionTexture final
{
public:
	EReactionResultType                           ReactionType;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3726[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UTexture2D>>      ReactionTextures;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTDamageTextInfoQueue
// 0x0010 (0x0010 - 0x0000)
struct FHTDamageTextInfoQueue final
{
public:
	TArray<struct FHTDamageTextInfo>              HTDamageTextInfoArray;                             // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconTextFontScaleData
// 0x0020 (0x0020 - 0x0000)
struct FMiniMapIconTextFontScaleData final
{
public:
	struct FFloatRange                            MapScaleRange;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInt32Range                            FontSizeRange;                                     // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkillBeanParam
// 0x0048 (0x0048 - 0x0000)
struct FSkillBeanParam final
{
public:
	EAbilityTagType                               AbilityTagType;                                    // 0x0000(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3727[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurBeanCount;                                      // 0x0004(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxBeanCount;                                      // 0x0008(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurExtraBeanCount;                                 // 0x000C(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxExtraBeanCount;                                 // 0x0010(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3728[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ChangeTime;                                        // 0x0018(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartWorldTime;                                    // 0x0020(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DurationTime;                                      // 0x0024(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForceIntervalStartWorldTime;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForceIntervalDurationTime;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                           SkillBeanResumeHandle;                             // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                           ExtraBeanCancelResumeHandle;                       // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3729[0x8];                                     // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MagConfigDataStruct
// 0x000C (0x000C - 0x0000)
struct FMagConfigDataStruct final
{
public:
	float                                         ReactionCoeff_1;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReactionCoeff_2;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReactionCoeff_3;                                   // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ReactinConditionGEData
// 0x0010 (0x0010 - 0x0000)
struct FReactinConditionGEData final : public FReactinConditionData
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>    GEConditionArray;                                  // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ZhouAnReactionExpendOneData
// 0x0008 (0x0020 - 0x0018)
struct FZhouAnReactionExpendOneData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconExtendData_Shop
// 0x0020 (0x0028 - 0x0008)
struct FMiniMapIconExtendData_Shop final : public FMiniMapIconExtendData
{
public:
	class FName                                   CityName;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BrandUnqiueID;                                     // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   NewBrandName;                                      // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ZhouAnReactionExpendThreeData
// 0x0008 (0x0020 - 0x0018)
struct FZhouAnReactionExpendThreeData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ZhouAnReactionExpendFourData
// 0x0008 (0x0020 - 0x0018)
struct FZhouAnReactionExpendFourData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ZhouAnReactionExpendSixData
// 0x0008 (0x0020 - 0x0018)
struct FZhouAnReactionExpendSixData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconExtendData_PlaceName
// 0x0010 (0x0018 - 0x0008)
struct FMiniMapIconExtendData_PlaceName final : public FMiniMapIconExtendData
{
public:
	class FText                                   PlaceName;                                         // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AnHunReactionExpendThreeData
// 0x0010 (0x0028 - 0x0018)
struct FAnHunReactionExpendThreeData final : public FReactinData
{
public:
	struct FAnHunReactionConfigData               AnHunReactionData;                                 // 0x0018(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AnHunReactionExpendFiveData
// 0x0010 (0x0028 - 0x0018)
struct FAnHunReactionExpendFiveData final : public FReactinData
{
public:
	struct FAnHunReactionConfigData               AnHunReactionData;                                 // 0x0018(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuangXiangReactionExpendTwoData
// 0x0008 (0x0020 - 0x0018)
struct FGuangXiangReactionExpendTwoData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CurrencySlotData
// 0x0018 (0x0020 - 0x0008)
struct FCurrencySlotData final : public FTableRowBase
{
public:
	bool                                          bShowAddIcon;                                      // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_372A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OpenUIName;                                        // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuangXiangReactionExpendThreeData
// 0x0008 (0x0020 - 0x0018)
struct FGuangXiangReactionExpendThreeData final : public FReactinData
{
public:
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuangXiangReactionExpendFourData
// 0x0010 (0x0028 - 0x0018)
struct FGuangXiangReactionExpendFourData final : public FReactinData
{
public:
	float                                         Radius;                                            // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_372B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            TargetGEClass;                                     // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuangLingReactionExpendThreeData
// 0x0008 (0x0020 - 0x0018)
struct FGuangLingReactionExpendThreeData final : public FReactinData
{
public:
	int32                                         AdditionalFireCount;                               // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AdditionalSpiltCount;                              // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuangLingReactionExpendFiveData
// 0x0008 (0x0020 - 0x0018)
struct FGuangLingReactionExpendFiveData final : public FReactinData
{
public:
	bool                                          bShouldSpawnAttractionActor;                       // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_372C[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PhantomSlomoTimeParam
// 0x001C (0x001C - 0x0000)
struct FPhantomSlomoTimeParam final
{
public:
	float                                         SlomoValueMin;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlomoValueMax;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlomoRecoverSpeed;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlomoResistMin;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlomoResistMax;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlomoResistValue;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlomoResistLessSpeed;                              // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionCommentData
// 0x0028 (0x0028 - 0x0000)
struct FVisionCommentData final
{
public:
	class FString                                 Uid;                                               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              EditTime;                                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Content;                                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AttackModePhyMatHitEffectParamMap
// 0x0050 (0x0050 - 0x0000)
struct FAttackModePhyMatHitEffectParamMap final
{
public:
	TMap<EDamageShape, struct FPhyMatHitEffectDecalParam> EffectParamMap;                                    // 0x0000(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AirFightExecutionTable
// 0x0010 (0x0018 - 0x0008)
struct FAirFightExecutionTable final : public FTableRowBase
{
public:
	class FName                                   FightID;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ExeNum;                                            // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsOutLog;                                          // 0x0014(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_372D[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AirFightInfoTable
// 0x0020 (0x0028 - 0x0008)
struct FAirFightInfoTable final : public FTableRowBase
{
public:
	TArray<class FName>                           CharacterInfoList;                                 // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   MonsterInfo;                                       // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HandInfo;                                          // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AirFightCharacterTable
// 0x0038 (0x0040 - 0x0008)
struct FAirFightCharacterTable final : public FTableRowBase
{
public:
	class FName                                   CharacterId;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CharacterPackID;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterLevel;                                    // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterTopo;                                     // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterAwaken;                                   // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   WeaponID;                                          // 0x0024(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WeaponLevel;                                       // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WeaponTopo;                                        // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EquipSuit;                                         // 0x0034(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_372E[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GamepadTriggerEffect
// 0x0020 (0x0028 - 0x0008)
struct FGamepadTriggerEffect final : public FTableRowBase
{
public:
	EGamepadTriggerType                           GamepadTriggerType;                                // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGamepadTriggerEffectModeType                 GamepadTriggerEffectModeType;                      // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_372F[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartPosition;                                     // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndPosition;                                       // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StartStrength;                                     // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndStrength;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Amplitude;                                         // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Frequency;                                         // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3730[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AirFightHandTable
// 0x0010 (0x0018 - 0x0008)
struct FAirFightHandTable final : public FTableRowBase
{
public:
	TArray<struct FAirFightHandData>              HandDataArray;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AirFightGEMapping
// 0x0038 (0x0040 - 0x0008)
struct FAirFightGEMapping final : public FTableRowBase
{
public:
	class FName                                   GEName;                                            // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   HandleGE;                                          // 0x0010(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GEDuration;                                        // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GECustomDuration;                                  // 0x003C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AimingAbilityConfig
// 0x000C (0x000C - 0x0000)
struct FAimingAbilityConfig final
{
public:
	float                                         HoldPressDurationForAiming;                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FireRequireAimingTime;                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCheckMontagePosition : 1;                         // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_3731[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.UICharacterAbilityUpgradeCostConfig
// 0x0040 (0x0048 - 0x0008)
struct FUICharacterAbilityUpgradeCostConfig final : public FTableRowBase
{
public:
	TArray<struct FUICharacterAbilityUpgradeLevelCostItem> LevelsCostItems;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EUICharacterAbilityButtonType                 AbilityType;                                       // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3732[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   GameplayEffectToActivate;                          // 0x0020(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LimitEffectPreset
// 0x0008 (0x0010 - 0x0008)
struct FLimitEffectPreset final : public FTableRowBase
{
public:
	int32                                         LimitGamePlayFun;                                  // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3733[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTWoodenDamageInfo
// 0x0010 (0x0010 - 0x0000)
struct FHTWoodenDamageInfo final
{
public:
	class FName                                   WoodenDamageGEName;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WoodenDamageValue;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          WoodenDamageCrit;                                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3734[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SumHeterochromeParam
// 0x0018 (0x0018 - 0x0000)
struct FSumHeterochromeParam final
{
public:
	float                                         CurrentSumCosmos;                                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentSumNature;                                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentSumIncantation;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentSumChaos;                                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentSumPsyche;                                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentSumLakshana;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterAbilityInfo
// 0x0010 (0x0018 - 0x0008)
struct FCharacterAbilityInfo final : public FTableRowBase
{
public:
	class FName                                   AbilityId;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowDetailInfo;                                   // 0x0010(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3735[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PausedGEInfo
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FPausedGEInfo final
{
public:
	uint8                                         Pad_3736[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.OptimalAzimuthDataRoot
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FOptimalAzimuthDataRoot final
{
public:
	uint8                                         Pad_3737[0x18];                                    // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AbilityExtraInfo
// 0x0020 (0x0020 - 0x0000)
struct FAbilityExtraInfo final
{
public:
	TSubclassOf<class UHTGameplayAbility>         AbilityClass;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OverridePriority;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreCoolDown;                                   // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3738[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverrideWeight;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActiveGameplayEffectHandle            AssignedGEHandle;                                  // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3739[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SufferShareOutInjuryData
// 0x0008 (0x0008 - 0x0000)
struct FSufferShareOutInjuryData final
{
public:
	EExecutionDamageTypeEX                        SufferInjuryDamageType;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_373A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FCurrentSufferInjuryValue;                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ConflictKey
// 0x0070 (0x0070 - 0x0000)
struct FConflictKey final
{
public:
	class UInputAction*                           KeyInputAction;                                    // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   DefaultKey;                                        // 0x0008(0x0018)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FKey>              BindKey;                                           // 0x0020(0x0050)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TransferDamageData
// 0x0058 (0x0058 - 0x0000)
struct FTransferDamageData final
{
public:
	float                                         DamageCapacity;                                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle            ServerReplicatedGEHandle;                          // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TransferRatio;                                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RemainingDamageCanTransfer;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AppliedTransferDamage;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PendingTransferDamage;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_373B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UHTGamePlayEffect>          TransferDamageGEClass;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHTGamePlayEffect>          ZhouYinGEClass;                                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bApplyRemainDamageOnRemove : 1;                    // 0x0030(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsClientData : 1;                                 // 0x0030(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_373C[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LastUpdateTotalDamage;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_373D[0x18];                                    // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TransferDamageDataArray
// 0x0020 (0x0020 - 0x0000)
struct FTransferDamageDataArray final
{
public:
	TWeakObjectPtr<class UHTAttributeComponent>   TransferDamageFrom;                                // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_373E[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransferDamageData>            DataArray;                                         // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ShadowMeshData
// 0x0010 (0x0010 - 0x0000)
struct FShadowMeshData final
{
public:
	class UCurveVector*                           HideMeshCurve;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HideCurveTime;                                     // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_373F[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SettingComboBoxOptionData_DesktopAntiAliasing
// 0x0001 (0x0001 - 0x0000)
struct FSettingComboBoxOptionData_DesktopAntiAliasing final : public FSettingComboBoxOptionData_Base
{
public:
	EDesktopAAType                                AntiAliasingMethod;                                // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTSkirtControlAnimNode
// 0x0138 (0x0200 - 0x00C8)
struct alignas(0x10) FHTSkirtControlAnimNode final : public FHTAnimNodeSkeletalControlBase
{
public:
	uint8                                         Pad_3740[0xA8];                                    // 0x00C8(0x00A8)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Qun_F;                                             // 0x0170(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Qun_L;                                             // 0x0178(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Qun_R;                                             // 0x0180(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Foot_l;                                            // 0x0188(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Foot_r;                                            // 0x0190(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Factor_F;                                          // 0x0198(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Factor_L;                                          // 0x019C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Factor_R;                                          // 0x01A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRotationAngle;                                  // 0x01A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         BoneQun_F;                                         // 0x01A8(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         BoneQun_L;                                         // 0x01B8(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         BoneQun_R;                                         // 0x01C8(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         BoneFoot_L;                                        // 0x01D8(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         BoneFoot_R;                                        // 0x01E8(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3741[0x8];                                     // 0x01F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AKEventExt
// 0x0040 (0x0040 - 0x0000)
struct FAKEventExt final
{
public:
	class FString                                 SwitchGroup;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SWITCH;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StateGroup;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SettingComboBoxOptionData_FPS
// 0x0004 (0x0004 - 0x0000)
struct FSettingComboBoxOptionData_FPS final : public FSettingComboBoxOptionData_Base
{
public:
	int32                                         FPS;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EventDataDisplayInfo
// 0x0048 (0x0048 - 0x0000)
struct FEventDataDisplayInfo final
{
public:
	class FString                                 EventType;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EventName;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLoop;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3742[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Weight;                                            // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AkName;                                            // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FromWhere;                                         // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PeaceSoundData
// 0x0010 (0x0010 - 0x0000)
struct FPeaceSoundData final
{
public:
	class UAkAudioEvent*                          PeaceEvent;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          FightEvent;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QueueSpawnEntry
// 0x0028 (0x0028 - 0x0000)
struct FQueueSpawnEntry final
{
public:
	class AHTSpawnManagerBase*                    Spawner;                                           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3743[0x20];                                    // 0x0008(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SettingOptionComboBoxDataRow
// 0x0018 (0x0020 - 0x0008)
struct FSettingOptionComboBoxDataRow final : public FTableRowBase
{
public:
	TArray<struct FSettingOptionComboBoxData>     ComboBoxOptions;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         DefaultOptionIndex;                                // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3744[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SpawnEntryContainer
// 0x0020 (0x0020 - 0x0000)
struct FSpawnEntryContainer final
{
public:
	TArray<struct FQueueSpawnEntry>               SpawnEntries;                                      // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FQueueSpawnEntry>               DestroyEntries;                                    // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RandomSpawnPoint
// 0x0070 (0x0070 - 0x0000)
struct FRandomSpawnPoint final
{
public:
	struct FTransform                             TransformPoint;                                    // 0x0000(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3745[0xC];                                     // 0x0064(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CacheHitLocationTime
// 0x0020 (0x0020 - 0x0000)
struct FCacheHitLocationTime final
{
public:
	struct FVector                                HitLoc;                                            // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitTime;                                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3746[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoreBrandLogoLocation
// 0x0068 (0x0068 - 0x0000)
struct FStoreBrandLogoLocation final
{
public:
	class FName                                   StoreBrandID;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BodyLocation;                                      // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HeadLocation;                                      // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HeadLogoLocation;                                  // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                DoorLocation;                                      // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CloneSystemContain
// 0x0128 (0x0130 - 0x0008)
struct FCloneSystemContain final : public FTableRowBase
{
public:
	class FName                                   CloneSystemContainID;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BelongLevelName;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MiniMapKeyWorld;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           CloneSystemIDs;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         UnlockLevel;                                       // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AwardDropID;                                       // 0x003C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VisionID;                                          // 0x0044(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestId;                                           // 0x004C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWeeklyClone;                                      // 0x0054(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3747[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ClientShowDropIDs;                                 // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   CloneName;                                         // 0x0068(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   CloneDes;                                          // 0x0078(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              WeeklyIconTips;                                    // 0x0088(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ExitCloneTransferID;                               // 0x00B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3748[0x8];                                     // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             EnterTransform;                                    // 0x00C0(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MinimapTransferID;                                 // 0x0120(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StaminaCount;                                      // 0x0128(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3749[0x4];                                     // 0x012C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoreStaticItemData
// 0x0090 (0x0098 - 0x0008)
struct FStoreStaticItemData final : public FTableRowBase
{
public:
	class FName                                   ItemID;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ItemName;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                           BelongStoreBrandIDs;                               // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EItemQuality                                  ItemQuality;                                       // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_374A[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              ItemIcon;                                          // 0x0038(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStoreConsumeItemData>          ConsumeItems;                                      // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FStoreConditionData>            UnlockConditions;                                  // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          IsDefaultUnlock;                                   // 0x0080(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_374B[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStoreStaticItemBaseInfo>       ItemBaseInfos;                                     // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreEmployeeData
// 0x0070 (0x0078 - 0x0008)
struct FStoreEmployeeData final : public FTableRowBase
{
public:
	class FName                                   EmployeeID;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   EmployeeName;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              EmployeeIcon;                                      // 0x0020(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemQuality                                  EmployeeQuality;                                   // 0x0048(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_374C[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Des;                                               // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FStorePropertyNode>             EmployeePropertyNodes;                             // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         Weight;                                            // 0x0070(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_374D[0x4];                                     // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoreEventData
// 0x0078 (0x0080 - 0x0008)
struct FStoreEventData final : public FTableRowBase
{
public:
	class FName                                   StoreEventID;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              EventIcon;                                         // 0x0010(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StoreEventCD;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StoreEventEnterPoolCD;                             // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StoreEventIncomeTime;                              // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsImmediatelyTakeEffect;                           // 0x0044(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_374E[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   StoreEventDes;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         StoreBrandLevel;                                   // 0x0058(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x005C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStorePropertyNode>             EventPropertyNodes;                                // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                 EmployeeHandleEventTimeNodes;                      // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreRecordInfo
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FStoreRecordInfo final
{
public:
	uint8                                         Pad_374F[0x30];                                    // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoreBrandEventRecord
// 0x0010 (0x0010 - 0x0000)
struct FStoreBrandEventRecord final
{
public:
	class FName                                   EventID;                                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         StartTime;                                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModulePropsData_Texture2D
// 0x0030 (0x0030 - 0x0000)
struct FVehicleModulePropsData_Texture2D final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              PropValue;                                         // 0x0008(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreBrandHandEventBehavior
// 0x0018 (0x0018 - 0x0000)
struct FStoreBrandHandEventBehavior final
{
public:
	class FName                                   StoreBrandID;                                      // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EventID;                                           // 0x0008(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EmployeeID;                                        // 0x0010(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreBrandNPCWaveData
// 0x000C (0x000C - 0x0000)
struct FStoreBrandNPCWaveData final
{
public:
	int32                                         WaveIndex;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SpawnNPCID;                                        // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SubNpcOverrideMaterial
// 0x0018 (0x0018 - 0x0000)
struct FSubNpcOverrideMaterial final
{
public:
	int32                                         MeshIndex;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3750[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSubNpcOverrideMaterialArray>   OverrideMaterialArrays;                            // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SubNpcOverrideMaterialMap
// 0x0010 (0x0010 - 0x0000)
struct FSubNpcOverrideMaterialMap final
{
public:
	TArray<struct FSubNpcOverrideMaterial>        MaterialConfigArray;                               // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTGamePlayTransform
// 0x0010 (0x0010 - 0x0000)
struct FHTGamePlayTransform final
{
public:
	TArray<struct FTransform>                     Transforms;                                        // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TeachGuideMediaNode
// 0x0070 (0x0070 - 0x0000)
struct FTeachGuideMediaNode final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFileMediaSource>        MediaSource;                                       // 0x0020(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFileMediaSource>        PSMediaSource;                                     // 0x0048(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TeachGuideData
// 0x00A0 (0x00A8 - 0x0008)
struct FTeachGuideData final : public FTableRowBase
{
public:
	class FText                                   GuideName;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	ETeachGuideType                               TeachGuideType;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EContentShowType                              ShowType;                                          // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3751[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTeachGuideMediaNode>           MediaNodeArray;                                    // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTeachGuidePictureNode>         PictureNodeArray;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bForceWatch;                                       // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDefaultUnLock;                                    // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3752[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              UnLockNormalIcon;                                  // 0x0048(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              UnLockSelectedIcon;                                // 0x0070(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UnlockId;                                          // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPSShow;                                          // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3753[0x7];                                     // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TrackData
// 0x00A0 (0x00A8 - 0x0008)
struct FTrackData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              TrackIcon;                                         // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ExitIcon;                                          // 0x0030(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EObjectiveType, TSoftObjectPtr<class UTexture2D>> QuestObjTypeIconMap;                               // 0x0058(0x0050)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TreasureboxConfigData
// 0x0040 (0x0048 - 0x0008)
struct FTreasureboxConfigData final : public FTableRowBase
{
public:
	int32                                         Index;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3754[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LevelName;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AreaId;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedUnlock;                                        // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3755[0x7];                                     // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LittleAnimInteractBehaviorConfig
// 0x0018 (0x0018 - 0x0000)
struct FLittleAnimInteractBehaviorConfig final
{
public:
	class FName                                   InteractPart;                                      // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAIRandAnimEntry>               InteractAnimEntry;                                 // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OracleStoneConfigData
// 0x0038 (0x0040 - 0x0008)
struct FOracleStoneConfigData final : public FTableRowBase
{
public:
	int32                                         Index;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3756[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LevelName;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AreaId;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TreasureBoxTrackData
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x04) FTreasureBoxTrackData final
{
public:
	uint8                                         Pad_3757[0x18];                                    // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PlatformData
// 0x0008 (0x0010 - 0x0008)
struct FPlatformData final : public FTableRowBase
{
public:
	bool                                          ShowJoyStick;                                      // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3758[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LoadingConfig
// 0x0010 (0x0018 - 0x0008)
struct FLoadingConfig final : public FTableRowBase
{
public:
	TArray<struct FLoadingData>                   LoadingDatas;                                      // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisualSpawnGroup
// 0x0018 (0x0018 - 0x0000)
struct FVisualSpawnGroup final
{
public:
	TArray<struct FVisualSpawnEntry>              VisualSpawnEntries;                                // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3759[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TextTableData
// 0x0028 (0x0030 - 0x0008)
struct FTextTableData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UStringTable>            TextTable;                                         // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTSlideDown
// 0x0100 (0x0100 - 0x0000)
struct FHTSlideDown final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00F8)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x00F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_375A[0x4];                                     // 0x00FC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RandomModifyDataUpgrade
// 0x001C (0x001C - 0x0000)
struct FRandomModifyDataUpgrade final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GroupCiTidoName;                                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OldPropValue;                                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NewPropValue;                                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsNew;                                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_375B[0x3];                                     // 0x0019(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.EquipRandomPros
// 0x0020 (0x0020 - 0x0000)
struct FEquipRandomPros final
{
public:
	TArray<struct FRandomModifyDataSaveStruct>    BasePros;                                          // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRandomModifyDataSaveStruct>    RandomPros;                                        // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DropResult
// 0x000C (0x000C - 0x0000)
struct FDropResult final
{
public:
	bool                                          IsSucceed;                                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsCore;                                            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentGeometryType                        GeometryType;                                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_375C[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Row;                                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Column;                                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MotionWarpingParams
// 0x0048 (0x0048 - 0x0000)
struct FMotionWarpingParams final
{
public:
	struct FVector                                MotionWarpingStartPoint;                           // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MotionWarpingMiddlePoint;                          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MotionWarpingEndPoint;                             // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TrafficVehicleSoundInActivatedTag
// 0x0000 (0x0001 - 0x0001)
struct FTrafficVehicleSoundInActivatedTag final : public FMassTag
{
};

// ScriptStruct HTGame.VaultObstacleParams
// 0x0008 (0x0008 - 0x0000)
struct FVaultObstacleParams final
{
public:
	float                                         ObstacleWidth;                                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ObstacleHeight;                                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemQualityData
// 0x0080 (0x0088 - 0x0008)
struct FItemQualityData final : public FTableRowBase
{
public:
	TMap<class FName, TSoftObjectPtr<class UTexture2D>> QualityTextureMap;                                 // 0x0008(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FSlateColor                            QualityColor;                                      // 0x0058(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         ColorParam;                                        // 0x006C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QualityRichTextStyle;                              // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   QualityText;                                       // 0x0078(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DescriptionContent_Tips
// 0x0038 (0x0038 - 0x0000)
struct FDescriptionContent_Tips final : public FDescriptionContent_Base
{
public:
	TSoftObjectPtr<class UTexture2D>              Image;                                             // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Desc;                                              // 0x0028(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DescriptionContent_Letter
// 0x0020 (0x0020 - 0x0000)
struct FDescriptionContent_Letter final : public FDescriptionContent_Base
{
public:
	TArray<class FText>                           Page;                                              // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                   Sign;                                              // 0x0010(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DescriptionData
// 0x0048 (0x0050 - 0x0008)
struct FDescriptionData final : public FTableRowBase
{
public:
	class FString                                 UIClass;                                           // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Comment;                                           // 0x0018(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0028(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       Content;                                           // 0x0038(0x0010)(Edit, NativeAccessSpecifierPublic)
	bool                                          ShowBackground;                                    // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextJustify                                  Justify;                                           // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_375D[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AutoCloseTime;                                     // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CoreBuffStruct
// 0x0038 (0x0038 - 0x0000)
struct FCoreBuffStruct final
{
public:
	TSoftObjectPtr<class UTexture2D>              CoreMiniIcon;                                      // 0x0000(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   CoreBuffDescription;                               // 0x0028(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LevelMiniMapData
// 0x0170 (0x0178 - 0x0008)
struct FLevelMiniMapData final : public FTableRowBase
{
public:
	struct FMiniMapTileRenderData                 MiniMapBackgroundRenderData;                       // 0x0008(0x0070)(Edit, NativeAccessSpecifierPublic)
	struct FMiniMapTileRenderData                 BigMapBackgroundRenderData;                        // 0x0078(0x0070)(Edit, NativeAccessSpecifierPublic)
	struct FMiniMapTileRenderData                 ExploreBackgroundRenderData;                       // 0x00E8(0x0070)(Edit, NativeAccessSpecifierPublic)
	bool                                          bShowFog;                                          // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_375E[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MiniMapRotateAngle;                                // 0x015C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMiniMapTileRenderScaleData            MiniMapRenderScaleData;                            // 0x0160(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMiniMapTileRenderScaleData            BigMapRenderScaleData;                             // 0x0168(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseRadar;                                         // 0x0170(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_375F[0x7];                                     // 0x0171(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ModifyStaticData
// 0x0010 (0x0018 - 0x0008)
struct FModifyStaticData final : public FTableRowBase
{
public:
	TArray<struct FModifyDataStruct>              ModifyData;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SavedAnimAKEventInfo
// 0x0010 (0x0010 - 0x0000)
struct FSavedAnimAKEventInfo final
{
public:
	class UAkComponent*                           SavedAkEventComp;                                  // 0x0000(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           PlayMontage;                                       // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CloudLightTimeOfDay
// 0x0048 (0x0048 - 0x0000)
struct FCloudLightTimeOfDay final
{
public:
	int32                                         TimeOfDay;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LightColor;                                        // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ShadowColor;                                       // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           RimColor;                                          // 0x0024(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           HighlightEdgeColor;                                // 0x0034(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3760[0x3];                                     // 0x0045(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MiniMapExploreData
// 0x0098 (0x00A0 - 0x0008)
struct FMiniMapExploreData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              ExploreDetailsImage;                               // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMiniMapTileRenderData                 MaskRenderData;                                    // 0x0030(0x0070)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemTypeData
// 0x0128 (0x0130 - 0x0008)
struct FItemTypeData final : public FTableRowBase
{
public:
	class FText                                   TypeName;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FHTIconImageData                       IconData;                                          // 0x0018(0x00A0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UDataTable*                             ItemDataTable;                                     // 0x00B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHTItem>                    ItemClassOverride;                                 // 0x00C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ItemTypeIcon;                                      // 0x00C8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ItemTypeTipsIcon;                                  // 0x00F0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TipsUIID;                                          // 0x0118(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedNeedImmediateSerialize;                       // 0x0128(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3761[0x7];                                     // 0x0129(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemSortTypeData
// 0x0018 (0x0020 - 0x0008)
struct FItemSortTypeData final : public FTableRowBase
{
public:
	class FText                                   TypeName;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   MapID;                                             // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GeometryCollectionBreakableParams
// 0x0068 (0x0068 - 0x0000)
struct FGeometryCollectionBreakableParams final
{
public:
	TSoftObjectPtr<class UGeometryCollection>     TargetGeometryCollection;                          // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   BreakableActorTemplate;                            // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DisappearDelay;                                    // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemIndex;                                         // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PropagationDepth;                                  // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PropagationFactor;                                 // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Strain;                                            // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemToolData_Cooking
// 0x0000 (0x0008 - 0x0008)
struct FItemToolData_Cooking final : public FItemToolDataBase
{
};

// ScriptStruct HTGame.ItemEffectTypeData
// 0x0038 (0x0040 - 0x0008)
struct FItemEffectTypeData final : public FTableRowBase
{
public:
	class FName                                   EffectTypeName;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CDType;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3762[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              ItemTypeIcon;                                      // 0x0018(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PlayerMusicData
// 0x0088 (0x0090 - 0x0008)
struct FPlayerMusicData final : public FTableRowBase
{
public:
	class FText                                   MusicTitle;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                 Comment;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              MusicCover;                                        // 0x0028(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   MusicDescription;                                  // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           MusicEvent;                                        // 0x0060(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SourceItemID;                                      // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ExtensionData
// 0x0028 (0x0028 - 0x0000)
struct FExtensionData final
{
public:
	TSoftClassPtr<class UClass>                   HandmadeActorClass;                                // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemToolData_UnlockAvatar
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_UnlockAvatar final : public FItemToolDataBase
{
public:
	class FName                                   AvatarId;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ConsumableItemData
// 0x0018 (0x0018 - 0x0000)
struct FConsumableItemData final : public FElementData
{
public:
	int32                                         EXP;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3763[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CostGold;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemSubstituteData
// 0x000C (0x000C - 0x0000)
struct FItemSubstituteData final
{
public:
	class FName                                   SubstituteItemID;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SubstituteAmount;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestSpawnEntry
// 0x002C (0x002C - 0x0000)
struct FQuestSpawnEntry final
{
public:
	class FName                                   QuestID_Spawn;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID_Spawn;                                 // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayTime_Spawn;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestID_Destroy;                                   // 0x0014(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID_Destroy;                               // 0x001C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayTime_Destroy;                                 // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsReverse;                                        // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3764[0x3];                                     // 0x0029(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AIRefreshConditionEntry
// 0x0020 (0x0020 - 0x0000)
struct FAIRefreshConditionEntry final
{
public:
	bool                                          bConditionSpawn;                                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAIRefreshConditionType                       ConditionType;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3765[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CondtionParam;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bConditionReverse;                                 // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3766[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AIRefreshConditionConfig
// 0x0028 (0x0028 - 0x0000)
struct FAIRefreshConditionConfig final
{
public:
	TArray<struct FQuestSpawnEntry>               QuestSpawnEntry;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bQuestSpawn;                                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpawnResultsOperation                        SpawnOperation;                                    // 0x0011(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3767[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAIRefreshConditionEntry>       ConditionEntries;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterElementTypeData
// 0x0038 (0x0040 - 0x0008)
struct FCharacterElementTypeData final : public FTableRowBase
{
public:
	class FText                                   ElementName;                                       // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ElementBGIcon;                                     // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemToolData_Explore
// 0x0010 (0x0018 - 0x0008)
struct FItemToolData_Explore final : public FItemToolDataBase
{
public:
	class FName                                   TowerID;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ExploreValue;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3768[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.NPCCustomMsgContainer
// 0x0018 (0x0018 - 0x0000)
struct FNPCCustomMsgContainer final
{
public:
	ENPCSpecialState                              SpecialState;                                      // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3769[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShowProbability;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGreetRandomNPCMsgEntry>        NPCMsgEntries;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EquipmentSuitStruct
// 0x0058 (0x0058 - 0x0000)
struct FEquipmentSuitStruct final
{
public:
	int32                                         SuitCondition;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedSameSuit;                                      // 0x0004(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_376A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SuitBuff;                                          // 0x0008(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SuitModifyPackID;                                  // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   SuitCountDesc;                                     // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SuitBuffDescription;                               // 0x0048(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemToolData_TreasureBox
// 0x0010 (0x0018 - 0x0008)
struct FItemToolData_TreasureBox final : public FItemToolDataBase
{
public:
	EItemTreasureBoxType                          TreasureBoxType;                                   // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_376B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DropID;                                            // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_376C[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PieceItemInfo
// 0x000C (0x000C - 0x0000)
struct FPieceItemInfo final
{
public:
	class FName                                   PieceItemID;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PieceAmount;                                       // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ComposeItemData
// 0x0010 (0x0018 - 0x0008)
struct FComposeItemData final : public FTableRowBase
{
public:
	TArray<struct FPieceItemInfo>                 PieceItems;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EquipmentSuitStaticData
// 0x0158 (0x0160 - 0x0008)
struct FEquipmentSuitStaticData final : public FTableRowBase
{
public:
	TArray<struct FEquipmentSuitStruct>           SuitStructList;                                    // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<EEquipmentGeometryType>                SuitGeometryCondition;                             // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              SuitIcon;                                          // 0x0028(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              SuitLGrayIcon;                                     // 0x0050(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              SuitRGrayIcon;                                     // 0x0078(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              SuitTipsLGrayIcon;                                 // 0x00A0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              SuitTipsRGrayIcon;                                 // 0x00C8(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EEquipmentGeometryType, TSoftObjectPtr<class UTexture2D>> CoreMiniIconMap;                                   // 0x00F0(0x0050)(Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class FText                                   SuitTitle;                                         // 0x0140(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SuitDescription;                                   // 0x0150(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EquipmentItemData
// 0x00B0 (0x00B0 - 0x0000)
struct FEquipmentItemData final : public FElementData
{
public:
	TSoftClassPtr<class UClass>                   EquipActorClass;                                   // 0x0000(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ItemNickName;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   OwnGridNum;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RandomBaseAttributeId;                             // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomBaseCount;                                   // 0x0048(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RandomAttributeId;                                 // 0x004C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomAttributeCount;                              // 0x0054(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RandomGroupId;                                     // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomAttributeMaxCount;                           // 0x0060(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentGeometryType                        EquipmentGeometryType;                             // 0x0064(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsCore;                                            // 0x0065(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_376D[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   StrengthPackId;                                    // 0x0068(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentSuitType                            EquipmentSuitType;                                 // 0x0070(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_376E[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SuitPackID;                                        // 0x0074(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_376F[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HasNotDescription;                                 // 0x0080(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         MaxStrengthenLevel;                                // 0x0090(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EXP;                                               // 0x0094(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CostGold;                                          // 0x0098(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x00A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3770[0x4];                                     // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VehicleModule_Wheels
// 0x0060 (0x0060 - 0x0000)
struct FVehicleModule_Wheels final : public FVehicleModule_Base
{
public:
	struct FVehicleModulePropsData_StaticMesh     FrontWheelMesh;                                    // 0x0000(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVehicleModulePropsData_StaticMesh     RearWheelMesh;                                     // 0x0030(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleKeyItemData
// 0x00A0 (0x00A0 - 0x0000)
struct FVehicleKeyItemData final : public FElementData
{
public:
	TSoftClassPtr<class UClass>                   EquipActorClass;                                   // 0x0000(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ItemNickName;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   OwnGridNum;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RandomBaseAttributeId;                             // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomBaseCount;                                   // 0x0048(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RandomAttributeId;                                 // 0x004C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomAttributeCount;                              // 0x0054(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RandomGroupId;                                     // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomAttributeMaxCount;                           // 0x0060(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentGeometryType                        EquipmentGeometryType;                             // 0x0064(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsCore;                                            // 0x0065(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3771[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   StrengthPackId;                                    // 0x0068(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEquipmentSuitType                            EquipmentSuitType;                                 // 0x0070(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3772[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SuitPackID;                                        // 0x0074(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxStrengthenLevel;                                // 0x007C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EXP;                                               // 0x0080(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3773[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CostGold;                                          // 0x0088(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0098(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3774[0x4];                                     // 0x009C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.EquipmentCoreGroupStaticData
// 0x0010 (0x0018 - 0x0008)
struct FEquipmentCoreGroupStaticData final : public FTableRowBase
{
public:
	class FName                                   CiTiaoID1;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CiTiaoID2;                                         // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModule_EngineHood
// 0x0001 (0x0001 - 0x0000)
struct FVehicleModule_EngineHood final : public FVehicleModule_Base
{
public:
	uint8                                         Pad_3775[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.EquipmentCiTiaoStaticData
// 0x0030 (0x0038 - 0x0008)
struct FEquipmentCiTiaoStaticData final : public FTableRowBase
{
public:
	class FName                                   PropName;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PropValue;                                         // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3776[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EEquipmentCiTiaoType                          CiTiaoType;                                        // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3777[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OwnGridNum;                                        // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3778[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RandomPropStaticRangeData
// 0x0008 (0x0008 - 0x0000)
struct FRandomPropStaticRangeData final
{
public:
	float                                         PropValue;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PropWeightValue;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModule_Brake
// 0x000C (0x000C - 0x0000)
struct FVehicleModule_Brake final : public FVehicleModule_Base
{
public:
	float                                         MaxBrakeTorque_Front;                              // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxBrakeTorque_Rear;                               // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxHandBrakeTorque;                                // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RandomPropStaticData
// 0x0010 (0x0018 - 0x0008)
struct FRandomPropStaticData final : public FTableRowBase
{
public:
	TArray<struct FRandomPropStaticRangeData>     PropRangeData;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HandmadeItemData
// 0x0004 (0x0004 - 0x0000)
struct FHandmadeItemData final : public FElementData
{
public:
	int32                                         SeriesID;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FurnitureItemData
// 0x005C (0x0068 - 0x000C)
struct FFurnitureItemData final : public FAttributeData
{
public:
	EFurnitureShowType                            FurnitureShowType;                                 // 0x000C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFurnitureType                                FurnitureType;                                     // 0x000D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3779[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   FurnitureActorClass;                               // 0x0010(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   FurniturePart;                                     // 0x0038(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FurnitureLoad;                                     // 0x0060(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_377A[0x4];                                     // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MoveParams
// 0x0014 (0x0014 - 0x0000)
struct FMoveParams final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReverseDirection;                                 // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_377B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinLimit;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxLimit;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUnlimit;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_377C[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.FishTankLandSpaceData
// 0x0028 (0x0028 - 0x0000)
struct FFishTankLandSpaceData final : public FElementData
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          SoftAsset;                                         // 0x0000(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterItemData
// 0x0158 (0x0158 - 0x0000)
struct FCharacterItemData final : public FElementData
{
public:
	TSoftClassPtr<class UClass>                   CharacterActorClass;                               // 0x0000(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PropModifyID;                                      // 0x0028(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterElementType                         CharacterElementType;                              // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterGroupType                           CharacterGroupType;                                // 0x0031(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_377D[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   UpgradePackId;                                     // 0x0034(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UpgradeModifyPackId;                               // 0x003C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BreakthroughPackId;                                // 0x0044(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_377E[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AwakenCostItem;                                    // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxAwakenLevel;                                    // 0x0060(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_377F[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAwakenIconStruct>              AwakenIconList;                                    // 0x0068(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   ForkID;                                            // 0x0078(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EquipmentSlotID;                                   // 0x0080(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             EquipBaseplateStaticMesh;                          // 0x0088(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             EquipInnerReactionLayerStaticMesh;                 // 0x00B0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                UIScale;                                           // 0x00D8(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraUpHeight;                                    // 0x00F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraOffsets;                                     // 0x00F4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForkMeshOffsets;                                   // 0x00F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EquipmentHandMeshOffsets;                          // 0x00FC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAutoEquip;                                      // 0x0100(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3780[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SatietyMaxValue;                                   // 0x0104(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   AbyssAssistBuff;                                   // 0x0108(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              AbilityUIIcon;                                     // 0x0130(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassStreetLampIntersectionsSpawnData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FMassStreetLampIntersectionsSpawnData final
{
public:
	uint8                                         Pad_3781[0x20];                                    // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ForkItemData
// 0x00A8 (0x00A8 - 0x0000)
struct FForkItemData final : public FElementData
{
public:
	struct FGameplayTag                           ForkGlobalBuffTag;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UpgradePackId;                                     // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BreakthroughPackId;                                // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UpgradeStarPackID;                                 // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECharacterGroupType                           ApplyGroupType;                                    // 0x0020(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3782[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxBreakthrough;                                   // 0x0024(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxUpgradeStar;                                    // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3783[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              ForkCard;                                          // 0x0030(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   ModelActorClass;                                   // 0x0058(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EXP;                                               // 0x0080(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3784[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CostGold;                                          // 0x0088(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Story;                                             // 0x0098(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterEquipmentSlotsData
// 0x0010 (0x0018 - 0x0008)
struct FCharacterEquipmentSlotsData final : public FTableRowBase
{
public:
	TArray<class FString>                         EquipmentSlots;                                    // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FragmentSynthesisData
// 0x0010 (0x0018 - 0x0008)
struct FFragmentSynthesisData final : public FTableRowBase
{
public:
	int32                                         NeedNumber;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SynthesisProductId;                                // 0x000C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SynthesisProductNumber;                            // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StaticForkUpgradeData
// 0x0010 (0x0018 - 0x0008)
struct FStaticForkUpgradeData final : public FTableRowBase
{
public:
	int32                                         NeedExp;                                           // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ModifyPack;                                        // 0x000C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3785[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ForkBreakthroughData
// 0x0030 (0x0038 - 0x0008)
struct FForkBreakthroughData final : public FTableRowBase
{
public:
	int32                                         MaxForkLevel;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3786[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NeedItems;                                         // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NeedGolds;                                         // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ModifyPackID;                                      // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemOutputSourceConfig
// 0x0090 (0x0098 - 0x0008)
struct FItemOutputSourceConfig final : public FTableRowBase
{
public:
	EItemOutputSource                             Type;                                              // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3787[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0010(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ContentDesc;                                       // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0048(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LevelName;                                         // 0x0060(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Path;                                              // 0x0070(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UnlockFuncID;                                      // 0x0080(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FindPathid;                                        // 0x0088(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FindMapFixedIcon;                                  // 0x0090(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ReplicatedTrafficVehicleAgent
// 0x0020 (0x0048 - 0x0028)
struct FReplicatedTrafficVehicleAgent final : public FReplicatedAgentBase
{
public:
	struct FVector                                Position;                                          // 0x0028(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Yaw;                                               // 0x0040(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Speed;                                             // 0x0044(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct HTGame.TrafficVehicleFastArrayItem
// 0x0048 (0x0058 - 0x0010)
struct FTrafficVehicleFastArrayItem final : public FMassFastArrayItemBase
{
public:
	struct FReplicatedTrafficVehicleAgent         Agent;                                             // 0x0010(0x0048)(Transient, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TrafficVehicleClientBubbleSerializer
// 0x0218 (0x0350 - 0x0138)
struct FTrafficVehicleClientBubbleSerializer final : public FMassClientBubbleSerializerBase
{
public:
	uint8                                         Pad_3788[0x208];                                   // 0x0138(0x0208)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTrafficVehicleFastArrayItem>   Traffic;                                           // 0x0340(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct HTGame.ItemOutputSourceRow
// 0x0010 (0x0018 - 0x0008)
struct FItemOutputSourceRow final : public FTableRowBase
{
public:
	TArray<class FName>                           SourceArray;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MonsterWorldLevelData
// 0x000C (0x000C - 0x0000)
struct FMonsterWorldLevelData final
{
public:
	int32                                         MonsterWorldLevel;                                 // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MonsterWorldLevelPropModifyID;                     // 0x0004(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MonsterStaticData
// 0x0070 (0x0078 - 0x0008)
struct FMonsterStaticData final : public FTableRowBase
{
public:
	class FString                                 Comment;                                           // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DropRadius;                                        // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DropGroupID;                                       // 0x001C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DropDelayTime;                                     // 0x0024(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           Tags;                                              // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          IsVisionActor;                                     // 0x0038(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3789[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   VisionSoulID;                                      // 0x003C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUnbalBarType                                 UnbalBarType;                                      // 0x0044(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_378A[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AutoDecIntervalTime;                               // 0x0048(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsWorldLevel : 1;                                 // 0x004C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_378B[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MonsterLevel;                                      // 0x0050(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PropModifyID;                                      // 0x0054(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_378C[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMonsterWorldLevelData>         WorldLevelArray;                                   // 0x0060(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          IsTestMonster;                                     // 0x0070(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_378D[0x7];                                     // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CharacterUpgradeData
// 0x0008 (0x0010 - 0x0008)
struct FCharacterUpgradeData final : public FTableRowBase
{
public:
	int32                                         NeedExp;                                           // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_378E[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AwakenModifyStructBase
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FAwakenModifyStructBase
{
public:
	uint8                                         Pad_378F[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTMedalConfig
// 0x0060 (0x0068 - 0x0008)
struct FHTMedalConfig final : public FTableRowBase
{
public:
	class FText                                   Name;                                              // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bAutoUnlock;                                       // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3790[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   UnlockDescription;                                 // 0x0020(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0030(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              IconSource;                                        // 0x0040(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AwakenModifyStructSkill
// 0x0010 (0x0018 - 0x0008)
struct FAwakenModifyStructSkill final : public FAwakenModifyStructBase
{
public:
	class FName                                   SkillName;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SkillLevel;                                        // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3791[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AwakenModifyStructBuff
// 0x0028 (0x0030 - 0x0008)
struct FAwakenModifyStructBuff final : public FAwakenModifyStructBase
{
public:
	TSoftClassPtr<class UClass>                   Buff;                                              // 0x0008(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AwakenEffectStruct
// 0x0068 (0x0068 - 0x0000)
struct FAwakenEffectStruct final
{
public:
	class FName                                   EffectID;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              AwakenIcon;                                        // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               ModifyDataList;                                    // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EAwakenEffect                                 AwakenType;                                        // 0x0050(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3792[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Desc;                                              // 0x0058(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterAwakenEffectData
// 0x0010 (0x0018 - 0x0008)
struct FCharacterAwakenEffectData final : public FTableRowBase
{
public:
	TArray<struct FAwakenEffectStruct>            AwakenEffectStructList;                            // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LoginParams
// 0x00C0 (0x00C0 - 0x0000)
struct FLoginParams final
{
public:
	class FString                                 StrUserId;                                         // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StrToken;                                          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StrAddr;                                           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3793[0x8];                                     // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Platform;                                          // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MediaID;                                           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Language;                                          // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 IP;                                                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Mac;                                               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UUID;                                              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Device_model;                                      // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Device_sys;                                        // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3794[0x8];                                     // 0x00B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTPlayerMontageConfig
// 0x0050 (0x0058 - 0x0008)
struct FHTPlayerMontageConfig final : public FTableRowBase
{
public:
	TMap<class FName, TSoftObjectPtr<class UAnimMontage>> MontageMap;                                        // 0x0008(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CoolDownDataTable
// 0x0010 (0x0018 - 0x0008)
struct FCoolDownDataTable final : public FTableRowBase
{
public:
	float                                         CoolDownTime;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RunOnServerOrStandalone;                           // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RunOnClient;                                       // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PauseWhenOffline;                                  // 0x000E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NotifyIfOffline;                                   // 0x000F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RemoveWhenOffline;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3795[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoopCount;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VaultAsset
// 0x0048 (0x0048 - 0x0000)
struct FVaultAsset final
{
public:
	struct FVector                                StartingOffset;                                    // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowHeight;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowPlayRate;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowStartPosition;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HighHeight;                                        // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HighPlayRate;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HighStartPosition;                                 // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZPositionOffset;                                   // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVaultType                                    VaultType;                                         // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3796[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxVaultTime;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Speed;                                             // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SPan;                                              // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SPanZOffset;                                       // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NoticeContentTypeData
// 0x0028 (0x0030 - 0x0008)
struct FNoticeContentTypeData final : public FTableRowBase
{
public:
	TSoftClassPtr<class UClass>                   ContentSlotClass;                                  // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VaultParams
// 0x0030 (0x0030 - 0x0000)
struct FVaultParams final
{
public:
	class UAnimMontage*                           VaultAnim;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                           PositionCurve;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                StartingOffset;                                    // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartPosition;                                     // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HtMovementSetting
// 0x0038 (0x0038 - 0x0000)
struct FHtMovementSetting final
{
public:
	float                                         FWalkSpeed;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FRunSpeed;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FSprintSpeed;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FFlySpeed;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FSwimRotationRate;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3797[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           MovementVectorCurve;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            GroundRotationRateCurve;                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            AirRotationRateCurve;                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                           InputInterpCurve;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VelocityBlend
// 0x0010 (0x0010 - 0x0000)
struct FVelocityBlend final
{
public:
	float                                         FF;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FB;                                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FL;                                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FR;                                                // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LeanAmount
// 0x0008 (0x0008 - 0x0000)
struct FLeanAmount final
{
public:
	float                                         FLR;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FFB;                                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CameraAnimStrcut
// 0x0050 (0x0050 - 0x0000)
struct FCameraAnimStrcut final
{
public:
	TMap<ECharacterInfoPage, class FName>         SourceCameraAnimMap;                               // 0x0000(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTEssentialMoveInfo
// 0x0070 (0x0070 - 0x0000)
struct FHTEssentialMoveInfo final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Acceleration;                                      // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                MovementInput;                                     // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               AimingRotation;                                    // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         FAimingYawRate;                                    // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FSpeed;                                            // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FMovementInputAmount;                              // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMoving;                                         // 0x006C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasMovementInput;                                 // 0x006D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPressMove;                                      // 0x006E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3798[0x1];                                     // 0x006F(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTPlayerStateInfo
// 0x0028 (0x0028 - 0x0000)
struct FHTPlayerStateInfo final
{
public:
	int32                                         MovementMode;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CustomMovementMode;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMoveAnimState                                MoveAnimState;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMoveAnimState                                PreMoveAnimState;                                  // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGroundAnimState                              GroundAnimState;                                   // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTRotationMode                               RotationMode;                                      // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTConstGait                                  ActualGait;                                        // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHTConstGait                                  AllowedGait;                                       // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWeaponHoldStateType                          WeaponHoldState;                                   // 0x000E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3799[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ActualStance;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ViewMode;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OverlayState;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_379A[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         StateFlagBits;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMontageParams
// 0x0018 (0x0018 - 0x0000)
struct FHTMontageParams final
{
public:
	class UAnimMontage*                           AnimMontage;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StartSectionName;                                  // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_379B[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DamageFloatAnimParams
// 0x0070 (0x0070 - 0x0000)
struct FDamageFloatAnimParams final
{
public:
	class FString                                 AnimName;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          AnimNiagaraEffect;                                 // 0x0010(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRandomOffsetRange                     OffsetRange;                                       // 0x0038(0x0038)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTTurnInPlaceAsset
// 0x0020 (0x0020 - 0x0000)
struct FHTTurnInPlaceAsset final
{
public:
	class UAnimSequenceBase*                      AnimSequence;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimateAngle;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotName;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bScaleTurnAngle;                                   // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_379C[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PlayerReliveParams
// 0x0001 (0x0001 - 0x0000)
struct FPlayerReliveParams final
{
public:
	EDeadReason                                   DeadReason;                                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DeadReasonData
// 0x0020 (0x0028 - 0x0008)
struct FDeadReasonData final : public FTableRowBase
{
public:
	class FText                                   ReasonDesc;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ReasonTips;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TransferConditionInteractEntry
// 0x0158 (0x0158 - 0x0000)
struct FTransferConditionInteractEntry final
{
public:
	struct FInteractEntry                         InteractEntry;                                     // 0x0000(0x0120)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                   BeginQuestID;                                      // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EndQuestID;                                        // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WorldLevel;                                        // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_379D[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Des;                                               // 0x0138(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   TransferID;                                        // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Weight;                                            // 0x0150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_379E[0x4];                                     // 0x0154(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GamepadKeyTipsStruct
// 0x0048 (0x0048 - 0x0000)
struct FGamepadKeyTipsStruct final
{
public:
	bool                                          bSpecialIconName;                                  // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_379F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bListenForKeysAction;                              // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37A0[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   KeyName;                                           // 0x0024(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37A1[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EGamepadKeyTipsTextJustify                    TextJustify;                                       // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37A2[0x7];                                     // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GamepadKeysTipsStruct
// 0x0010 (0x0010 - 0x0000)
struct FGamepadKeysTipsStruct final
{
public:
	TArray<struct FGamepadKeyTipsStruct>          KeyTipsStructs;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GuideWidgetIndex
// 0x0010 (0x0010 - 0x0000)
struct FGuideWidgetIndex final
{
public:
	int32                                         FirstIndex;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SecondIndex;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ConfigID;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AKSoundLimitCountRow
// 0x0028 (0x0030 - 0x0008)
struct FAKSoundLimitCountRow final : public FTableRowBase
{
public:
	class FString                                 SoundObjectName;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxLimitCount;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37A3[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Commont;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AKDirctorWeightRow
// 0x0010 (0x0018 - 0x0008)
struct FAKDirctorWeightRow final : public FTableRowBase
{
public:
	int32                                         Start;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         End;                                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Weight;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37A4[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SystemMessage
// 0x0010 (0x0010 - 0x0000)
struct FSystemMessage final
{
public:
	class UHTUI_MessageItem*                      ItemWidget;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ElapsedSeconds;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37A5[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.BubbleMsgLookAtInfo
// 0x000C (0x000C - 0x0000)
struct FBubbleMsgLookAtInfo final
{
public:
	int32                                         LookNpcIndex;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LookAtNpcIndex;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LookAtDuration;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NPCMultiMsgID
// 0x0040 (0x0210 - 0x01D0)
struct FNPCMultiMsgID final : public FNPCMsgID
{
public:
	int32                                         NpcIndex;                                          // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37A6[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            AnimMontage;                                       // 0x01D0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBubbleMsgLookAtInfo>           LookAtInfos;                                       // 0x01F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_37A7[0x8];                                     // 0x0208(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.OutOfBoundsAnim
// 0x0010 (0x0010 - 0x0000)
struct FOutOfBoundsAnim final
{
public:
	class UAnimSequenceBase*                      AnimSequenceBase;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimNotifyState*                       AnimNotify;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AttackReactionEntry
// 0x0020 (0x0020 - 0x0000)
struct FAttackReactionEntry final
{
public:
	class UAnimMontage*                           Anim;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNPCMsgContainer                       NPCMsg;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     SpawnTemplate;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ReactionDetailUIInnerData
// 0x0010 (0x0010 - 0x0000)
struct FReactionDetailUIInnerData final
{
public:
	class FName                                   CharacterId;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReactionAbilityID;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AIIdleStateEntry
// 0x0090 (0x0090 - 0x0000)
struct FAIIdleStateEntry final
{
public:
	TSubclassOf<class UHTAIIdleStateBase>         State;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ATargetPoint*                           TargetPoint;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x0070(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37A8[0x8];                                     // 0x0088(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_VehicleKey
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_VehicleKey final : public FItemToolDataBase
{
public:
	class FName                                   VehicleID;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AISettingsOverrideRow
// 0x0030 (0x0038 - 0x0008)
struct FAISettingsOverrideRow final : public FTableRowBase
{
public:
	uint8                                         bOverrideConfigID : 1;                             // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_37A9[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ConfigID;                                          // 0x000C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bOverrideAttributeID : 1;                          // 0x0014(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_37AA[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AttributeID;                                       // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bOverrideDropGroupID : 1;                          // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_37AB[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DropGroupID;                                       // 0x0024(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bOverrideDropRollID : 1;                           // 0x002C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_37AC[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DropRollID;                                        // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.IntroductionMaskData
// 0x0080 (0x0088 - 0x0008)
struct FIntroductionMaskData final : public FTableRowBase
{
public:
	bool                                          bShowMask;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37AD[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              LeftImage;                                         // 0x0010(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              RightImage;                                        // 0x0038(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              LineImage;                                         // 0x0060(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SpawnDateTimeEntry
// 0x0030 (0x0038 - 0x0008)
struct FSpawnDateTimeEntry final : public FTableRowBase
{
public:
	struct FDateInfo                              StartDateTime;                                     // 0x0008(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDateInfo                              EndDateTime;                                       // 0x0020(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemAmountRecordData
// 0x0028 (0x0028 - 0x0000)
struct FItemAmountRecordData final
{
public:
	int64                                         ChangeAmountTotal;                                 // 0x0000(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ChangeAmountDaily;                                 // 0x0008(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ChangeAmountWeekly;                                // 0x0010(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ChangeAmountMonthly;                               // 0x0018(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ChangeAmountYearly;                                // 0x0020(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemAmountChangeRecordData
// 0x0050 (0x0050 - 0x0000)
struct FItemAmountChangeRecordData final
{
public:
	struct FItemAmountRecordData                  AmountChange_Obtain;                               // 0x0000(0x0028)(SaveGame, NoDestructor, NativeAccessSpecifierPublic)
	struct FItemAmountRecordData                  AmountChange_Cost;                                 // 0x0028(0x0028)(SaveGame, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PackIDStaticData
// 0x0100 (0x0108 - 0x0008)
struct FPackIDStaticData final : public FTableRowBase
{
public:
	float                                         HPMaxBase;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HPMaxUp;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HPMaxAdd;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MagBase;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MagUp;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MagAdd;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AtkBase;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AtkUp;                                             // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AtkAdd;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageBaseAdd;                                     // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CritBase;                                          // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CritDamageBase;                                    // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageUpGeneralBase;                               // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageUpNormalBase;                                // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageUpCosmosBase;                                // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageUpNatureBase;                                // 0x0044(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageUpIncantationBase;                           // 0x0048(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageUpChaosBase;                                 // 0x004C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageUpPsycheBase;                                // 0x0050(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageUpLakshanaBase;                              // 0x0054(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageUpPsychicallyBase;                           // 0x0058(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SumCosmosEfficiency;                               // 0x005C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SumNatureEfficiency;                               // 0x0060(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SumIncantationEfficiency;                          // 0x0064(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SumChaosEfficiency;                                // 0x0068(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SumPsycheEfficiency;                               // 0x006C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SumLakshanaEfficiency;                             // 0x0070(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefBase;                                           // 0x0074(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefUp;                                             // 0x0078(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefAdd;                                            // 0x007C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefIgnore;                                         // 0x0080(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageResistNormalBase;                            // 0x0084(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageResistCosmosBase;                            // 0x0088(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageResistNatureBase;                            // 0x008C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageResistIncantationBase;                       // 0x0090(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageResistChaosBase;                             // 0x0094(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageResistPsycheBase;                            // 0x0098(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageResistLakshanaBase;                          // 0x009C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageResistPsychicallyBase;                       // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageImmuNormal;                                  // 0x00A4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageImmuCosmos;                                  // 0x00A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageImmuNature;                                  // 0x00AC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageImmuIncantation;                             // 0x00B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageImmuChaos;                                   // 0x00B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageImmuPsyche;                                  // 0x00B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageImmuLakshana;                                // 0x00BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageImmuPsychically;                             // 0x00C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrengthUseEfficiency;                             // 0x00C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrengthGetEfficiency;                             // 0x00C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalMax;                                          // 0x00CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalAccrueEfficiencyBase;                         // 0x00D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalAntiAccrueEfficiencyBase;                     // 0x00D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbaleBonus;                                       // 0x00D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalReduceNatur;                                  // 0x00DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalReduceReset;                                  // 0x00E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalIntensityBase;                                // 0x00E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalIntensityUp;                                  // 0x00E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnbalIntensityAdd;                                 // 0x00EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChargeMax;                                         // 0x00F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChargeGetEfficiencyBase;                           // 0x00F4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TenacityRecoverSpeed;                              // 0x00F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TenacityResetTime;                                 // 0x00FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShieldEfficiency;                                  // 0x0100(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TractionMass;                                      // 0x0104(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ModifyData
// 0x000C (0x000C - 0x0000)
struct FModifyData final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PropValue;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AttributeFilter
// 0x0018 (0x0018 - 0x0000)
struct FAttributeFilter final
{
public:
	class FText                                   FilterViewName;                                    // 0x0000(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int64                                         FilterCondition;                                   // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FeedBackEffectNode
// 0x000C (0x000C - 0x0000)
struct FFeedBackEffectNode final
{
public:
	int32                                         StartTime;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FeedBackEffectID;                                  // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FeedBackEffectData
// 0x0010 (0x0018 - 0x0008)
struct FFeedBackEffectData final : public FTableRowBase
{
public:
	TArray<struct FFeedBackEffectNode>            EffectNodes;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AttributeStaticData
// 0x0098 (0x00A0 - 0x0008)
struct FAttributeStaticData final : public FTableRowBase
{
public:
	class FText                                   AttributeText;                                     // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   FinalAttributeText;                                // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bShowOutside;                                      // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowInner;                                        // 0x0029(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowPercent;                                      // 0x002A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37AE[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              AttributeIcon;                                     // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttributeType                                AttributeType;                                     // 0x0058(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37AF[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AttributeName;                                     // 0x005C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37B0[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttributeFilter                       AttributeFilterData;                               // 0x0068(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   EquipmentRandomAttributeName;                      // 0x0080(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   AttributeDetail;                                   // 0x0090(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMailConditionInfo
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FHTMailConditionInfo final
{
public:
	uint8                                         Pad_37B1[0x18];                                    // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GMLevelDataRow
// 0x0018 (0x0020 - 0x0008)
struct FGMLevelDataRow final : public FTableRowBase
{
public:
	class FString                                 GMCmd;                                             // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GMLevel;                                           // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37B2[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RandomRange
// 0x0008 (0x0008 - 0x0000)
struct FRandomRange final
{
public:
	float                                         FMinValue;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FMaxValue;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SingleLevelExtensionData
// 0x0040 (0x0040 - 0x0000)
struct FSingleLevelExtensionData final
{
public:
	class FString                                 ExitMapName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotator;                                           // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Translation;                                       // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ShakeBoneData
// 0x0020 (0x0020 - 0x0000)
struct FShakeBoneData final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37B3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeLength;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimInstance>              ShakeBoneAnimLayerInstace;                         // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            NewCurveScale;                                     // 0x0010(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            NewCurveAlpha;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HitShakeBoneDataMap
// 0x0050 (0x0050 - 0x0000)
struct FHitShakeBoneDataMap final
{
public:
	TMap<class FName, struct FShakeBoneData>      ShakeBoneData;                                     // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TimerClockTriggerTimeData
// 0x0018 (0x0018 - 0x0000)
struct FTimerClockTriggerTimeData final
{
public:
	class FString                                 TimerID;                                           // 0x0000(0x0010)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         TriggerTime;                                       // 0x0010(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HitVertexData
// 0x00B0 (0x00B0 - 0x0000)
struct FHitVertexData final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37B4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   HitPosName;                                        // 0x0004(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HitRadiusName;                                     // 0x000C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HitEffectName;                                     // 0x0014(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitRadius;                                         // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShakeScale;                                        // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeLength;                                        // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     CruveScale;                                        // 0x0028(0x0088)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GoalActorData
// 0x0028 (0x0028 - 0x0000)
struct FGoalActorData final
{
public:
	TSoftClassPtr<class UClass>                   GoalActorClass;                                    // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DropSequenceStaticWeightData
// 0x0008 (0x0008 - 0x0000)
struct FDropSequenceStaticWeightData final
{
public:
	int32                                         DropWeight;                                        // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DropValue;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BreakableActorData
// 0x0148 (0x0150 - 0x0008)
struct FBreakableActorData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UFoliageType>            TargetFoliageType;                                 // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBreakableActorType                           BreakableActorType;                                // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37B5[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             BrokenStaticMesh;                                  // 0x0038(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   BreakableActorTemplate;                            // 0x0060(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          BreakParticle;                                     // 0x0088(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPhysicalMaterial>       PhysicsMatOverride;                                // 0x00B0(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UMaterialInterface>> FadeMaterialList;                                  // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FVector                                BreakNiagaraScale;                                 // 0x00E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBreakableLevel                               BrokenLevel;                                       // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37B6[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RealActorDisappearDelay;                           // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RealActorMass;                                     // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBlockVehicle;                                     // 0x010C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37B7[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinBreakSpeed;                                     // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanBeDamaged;                                     // 0x0114(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStillSpawnBrokenMeshAfterParticle;                // 0x0115(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37B8[0x2];                                     // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ThreatenRadius;                                    // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37B9[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ThreatenOffset;                                    // 0x0120(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BrokenEffectInterval;                              // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinBrokenEffectSpeed;                              // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinBrokenEffectAngularSpeed;                       // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpBrokenDistance;                                  // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpBrokenRadius;                                    // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37BA[0x4];                                     // 0x014C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DropGroupStaticRangeData
// 0x0080 (0x0088 - 0x0008)
struct FDropGroupStaticRangeData final : public FTableRowBase
{
public:
	int32                                         MinLevel;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxLevel;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SequenceId;                                        // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReplaceSequenceID;                                 // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECardPoolType                                 PoolTypeID;                                        // 0x0020(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37BB[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SequenceWeight;                                    // 0x0024(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ModifyNum;                                         // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeightIncrement;                                   // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IncrementalPoint;                                  // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DropOnly;                                          // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpecialFall;                                       // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SpecialFallGroupID;                                // 0x003C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpecialFallInitialValue;                           // 0x0044(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ModifyCount;                                       // 0x0048(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDropGroupLevelType                           DropGroupLevelType;                                // 0x004C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37BC[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ModifyWeightID;                                    // 0x0050(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ModifyWeightMathID;                                // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDropSequenceStaticWeightData>  ModifyNumProbability;                              // 0x0068(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FDropSequenceStaticWeightData>  ModifyCountProbability;                            // 0x0078(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ClientDropGroupStaticRangeData
// 0x0020 (0x0028 - 0x0008)
struct FClientDropGroupStaticRangeData final : public FTableRowBase
{
public:
	int32                                         MinLevel;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxLevel;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SequenceId;                                        // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HiddenCounts;                                      // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37BD[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SequenceWeight;                                    // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ModifyNum;                                         // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDropGroupLevelType                           DropGroupLevelType;                                // 0x0024(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37BE[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DropSequenceStaticRangeData
// 0x0050 (0x0058 - 0x0008)
struct FDropSequenceStaticRangeData final : public FTableRowBase
{
public:
	class FName                                   ItemID;                                            // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDropSequenceNumType                          SequenceNumType;                                   // 0x0010(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37BF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Num;                                               // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDropSequenceStaticWeightData>  SequenceProbability;                               // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         MinNum;                                            // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxNum;                                            // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Formula;                                           // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Weight;                                            // 0x0040(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37C0[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LimitLevel;                                        // 0x0048(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTMathExpression
// 0x0020 (0x0028 - 0x0008)
struct FHTMathExpression final : public FTableRowBase
{
public:
	class FString                                 FormulaExpression;                                 // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ExpressionParams;                                  // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CookBaseConfig
// 0x0040 (0x0048 - 0x0008)
struct FCookBaseConfig final : public FTableRowBase
{
public:
	float                                         SpawnDistance;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceDistance;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BoxLong;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BoxWidth;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HightOffset;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraModifyTime;                                  // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   CookingActorClass;                                 // 0x0020(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DropGroupModifyWeightData
// 0x0010 (0x0018 - 0x0008)
struct FDropGroupModifyWeightData final : public FTableRowBase
{
public:
	bool                                          IsFall;                                            // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37C1[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ModifySequenceWeight;                              // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ModifyCooldownTime;                                // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37C2[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DropModifySequenceStaticData
// 0x0028 (0x0030 - 0x0008)
struct FDropModifySequenceStaticData final : public FTableRowBase
{
public:
	class FName                                   DropID;                                            // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SequenceId;                                        // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AbsoluteMult;                                      // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RelativeMult;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AbsoluteCount;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RelativeCount;                                     // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpecialFallModifyCount;                            // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37C3[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PrivateSpawnManagerInfo
// 0x0080 (0x0080 - 0x0000)
struct FPrivateSpawnManagerInfo final
{
public:
	struct FGuid                                  ActorID;                                           // 0x0000(0x0010)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         CleanUpTime;                                       // 0x0010(0x0008)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentWaveIndex;                                  // 0x0018(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37C4[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPrivateSpawnDeadMonsterInfo>   DeadMonsterInfoArray;                              // 0x0020(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	uint8                                         Pad_37C5[0x50];                                    // 0x0030(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CharacterVoiceInfo
// 0x0050 (0x0058 - 0x0008)
struct FCharacterVoiceInfo final : public FTableRowBase
{
public:
	TMap<class FName, struct FCharacterVoiceDataBase> AllCharacterVoiceInfo;                             // 0x0008(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NPCMontageData
// 0x0038 (0x0038 - 0x0000)
struct FNPCMontageData final
{
public:
	class FName                                   NpcID;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            Montage;                                           // 0x0008(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopMontage;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37C6[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CameraLockData
// 0x0014 (0x0014 - 0x0000)
struct FCameraLockData final
{
public:
	class FName                                   NpcID;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LockTime;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetName;                                        // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AutoActingData
// 0x0010 (0x0018 - 0x0008)
struct FAutoActingData final : public FTableRowBase
{
public:
	TArray<class FText>                           VoiceMsgInfo;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BubbleVoiceMsgDetail
// 0x0080 (0x0088 - 0x0008)
struct FBubbleVoiceMsgDetail final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UAkAudioEvent>           DialogSoundEvent;                                  // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, float>                    RTPCConfig;                                        // 0x0030(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37C7[0x4];                                     // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CharacterVehicleState
// 0x0060 (0x0060 - 0x0000)
struct FCharacterVehicleState final
{
public:
	bool                                          InGetOnProcess;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InGetOffProcess;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37C8[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GetOnLocation;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                GetOffLocation;                                    // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TargetSeatIndex;                                   // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37C9[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CurrentDrivingVehicle;                             // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassEntityHandle                      VehicleEntityHandle;                               // 0x0048(0x0008)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ImmediateGetOff;                                   // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37CA[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVehicleInteractComponent*              InteractSphere;                                    // 0x0058(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AISpawnChangeRowID
// 0x001C (0x001C - 0x0000)
struct FAISpawnChangeRowID final
{
public:
	struct FGuid                                  SpawnGuid;                                         // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Wave;                                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ChangeSpawnID;                                     // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DialogueData
// 0x0028 (0x0028 - 0x0000)
struct FDialogueData final
{
public:
	class FText                                   SpeakerName;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   DialogueContext;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   DialogueVoiceID;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestChapterData
// 0x0048 (0x0050 - 0x0008)
struct FQuestChapterData final : public FTableRowBase
{
public:
	class FText                                   ChapterName;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   ChapterDesc;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          ChapterParticle;                                   // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MediaFFmpegInfo
// 0x00D0 (0x00D8 - 0x0008)
struct FMediaFFmpegInfo final : public FTableRowBase
{
public:
	struct FFilePath                              Path;                                              // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UIZOrder;                                          // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowSkipButton;                                   // 0x001C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanDisableInSettings;                             // 0x001D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37CB[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   StringTableID;                                     // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InOutTime;                                         // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37CC[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAkAudioEvent>           PlaySound;                                         // 0x0030(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           StopSound;                                         // 0x0058(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           PlayVoice;                                         // 0x0080(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           StopVoice;                                         // 0x00A8(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FeedBackEffectID;                                  // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FootPrintGround
// 0x0038 (0x0040 - 0x0008)
struct FFootPrintGround final : public FTableRowBase
{
public:
	ESurfaceFootPrintType                         FootPrintSurfaceType;                              // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFootPrintType                                FootPrintType;                                     // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37CD[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 FootPrintColor;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          GroundParticle;                                    // 0x0010(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootPrintLastTime;                                 // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37CE[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AdjustTimeData
// 0x0010 (0x0010 - 0x0000)
struct FAdjustTimeData final
{
public:
	int32                                         Day;                                               // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Hour;                                              // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minute;                                            // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Second;                                            // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FootPrintParams
// 0x0160 (0x0160 - 0x0000)
struct FFootPrintParams final
{
public:
	EFootPrintType                                FootPrintType;                                     // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37CF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 FootPrintColor;                                    // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                FootPrintLocation;                                 // 0x0008(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               FootPrintRotation;                                 // 0x0020(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 FootPhysicalSurfaceName;                           // 0x0038(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResidueSurfaceRate;                                // 0x0048(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37D0[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         FootPrintParticle;                                 // 0x0050(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootPrintLastTime;                                 // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37D1[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 BaseActor;                                         // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             GroundHitResult;                                   // 0x0068(0x00F8)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FootPrint
// 0x0028 (0x0028 - 0x0000)
struct FFootPrint final
{
public:
	class UDecalComponent*                        FootPrintDecal;                                    // 0x0000(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               FootPrintMatInstance;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFootPrintType                                FootPrintType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37D2[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TotalLastTime;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         CreationTimeStamp;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartOpacity;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartNormalFlatten;                                // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AreaData
// 0x0050 (0x0058 - 0x0008)
struct FAreaData final : public FTableRowBase
{
public:
	class FText                                   AreaTitle;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         AreaPriority;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37D3[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          AreaParticleAsset;                                 // 0x0020(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              FieldOfViewSize;                                   // 0x0048(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemFlyBallEffect
// 0x0050 (0x0050 - 0x0000)
struct FItemFlyBallEffect final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          InParticle;                                        // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          EndParticle;                                       // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PlayerAutoUseInfo
// 0x0018 (0x0018 - 0x0000)
struct FPlayerAutoUseInfo final
{
public:
	class FName                                   RoleName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxHP;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurHP;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NewHP;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NewHPPercent;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SleepVauleRecoveryConfig
// 0x0010 (0x0010 - 0x0000)
struct FSleepVauleRecoveryConfig final
{
public:
	int32                                         MinWorldLevel;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxWorldLevel;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSleepValue;                                     // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoverySleepValue;                                // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SleepQuestConfig
// 0x0018 (0x0018 - 0x0000)
struct FSleepQuestConfig final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartTime;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurveLength;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            AjustCurveFloat;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SleepBaseConfigData
// 0x0018 (0x0020 - 0x0008)
struct FSleepBaseConfigData final : public FTableRowBase
{
public:
	float                                         CheckDistance;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37D4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSleepVauleRecoveryConfig>      SleepVauleRecoveryInfos;                           // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapTileRenderIndexData
// 0x0038 (0x0038 - 0x0000)
struct FMiniMapTileRenderIndexData final
{
public:
	int32                                         TileIndex;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37D5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             TileTexture;                                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RowIndex;                                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ColIndex;                                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              DrawLocInTexture;                                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              DrawSizeInTexture;                                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SpecialGiftData
// 0x000C (0x000C - 0x0000)
struct FSpecialGiftData final
{
public:
	class FName                                   RoleId;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LikeabilityValue;                                  // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityGiftData
// 0x0018 (0x0020 - 0x0008)
struct FLikeabilityGiftData final : public FTableRowBase
{
public:
	int32                                         DefaultLikeabilityValue;                           // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37D6[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSpecialGiftData>               SpeicalGiftDatas;                                  // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CommonMsgData
// 0x0090 (0x0090 - 0x0000)
struct FCommonMsgData final
{
public:
	int32                                         MsgType;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37D7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 IntValueArray;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<float>                                 FloatValueArray;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FString>                         StrValueArray;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<int32>                                 IndexArray;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UMaterialInterface>> SoftMaterialArray;                                 // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_37D8[0x38];                                    // 0x0058(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestPanelSlotData
// 0x0050 (0x0050 - 0x0000)
struct FQuestPanelSlotData final
{
public:
	TSoftClassPtr<class UClass>                   SlotTemplate;                                      // 0x0000(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   ChapterSlotTemplate;                               // 0x0028(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GashaponAwardInfo
// 0x0010 (0x0010 - 0x0000)
struct FGashaponAwardInfo final
{
public:
	class FName                                   ItemID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Amount;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsActived;                                        // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37D9[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GashaponBaseDataConfig
// 0x0020 (0x0028 - 0x0008)
struct FGashaponBaseDataConfig final : public FTableRowBase
{
public:
	class FName                                   CurrencyID;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OneCurrencyNum;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TenCurrencyNum;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReplacementID;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReplacementFraction;                               // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37DA[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VehiclePropsData_UI
// 0x0014 (0x0014 - 0x0000)
struct FVehiclePropsData_UI final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseValue;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TexName;                                           // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityChatGroupData
// 0x0060 (0x0068 - 0x0008)
struct FLikeabilityChatGroupData final : public FTableRowBase
{
public:
	TArray<class FName>                           RoleIDs;                                           // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   GroupNameText;                                     // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   SignatureText;                                     // 0x0028(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              HeadIconResource;                                  // 0x0038(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MainPlotChatItemID;                                // 0x0060(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityChatData
// 0x0008 (0x0010 - 0x0008)
struct FLikeabilityChatData final : public FTableRowBase
{
public:
	class FName                                   GroupId;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestTypeInfo
// 0x0078 (0x0078 - 0x0000)
struct FQuestTypeInfo final
{
public:
	TSoftObjectPtr<class UTexture2D>              TypePhoto;                                         // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              TrackPhoto;                                        // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              TrackIcon;                                         // 0x0050(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityUnlockCondition
// 0x0010 (0x0010 - 0x0000)
struct FLikeabilityUnlockCondition final
{
public:
	ELikeabilityChatConditionType                 ChatConditionType;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37DB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ConfigValue;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ConfigID;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityChatItemData
// 0x00C0 (0x00C8 - 0x0008)
struct FLikeabilityChatItemData final : public FTableRowBase
{
public:
	class FName                                   ChatID;                                            // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RoleId;                                            // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayer;                                         // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLastSetenceInDay;                               // 0x0019(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFirstSetenceInSequence;                         // 0x001A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLastSetenceInSequence;                          // 0x001B(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActiveRedPoint;                                   // 0x001C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUnActiveRedPoint;                                 // 0x001D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELikeabilityChatType                          ChatType;                                          // 0x001E(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37DC[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLikeabilityUnlockCondition>    Conditions;                                        // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bIsImmediatelyShow;                                // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELikeabilityChatItemType                      ChatItemType;                                      // 0x0031(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37DD[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Content;                                           // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                 ParaContent;                                       // 0x0048(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              IconSource;                                        // 0x0058(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestId;                                           // 0x0080(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DropID;                                            // 0x0088(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELikeabilityChatOptionType                    OptionType;                                        // 0x0090(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37DE[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLikeabilityChatOptionData>     Options;                                           // 0x0098(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   NextSetenceID;                                     // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AddLikeabilityValue;                               // 0x00B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELikeabilityChatPushType                      ChatPushType;                                      // 0x00B4(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37DF[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PustGameTimeDay;                                   // 0x00B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PustGameTimeHour;                                  // 0x00BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChatPushTime;                                      // 0x00C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELikeabilityChatNoticeType                    ChatNoticeType;                                    // 0x00C4(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37E0[0x3];                                     // 0x00C5(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LikeabilityChatShowData
// 0x0010 (0x0010 - 0x0000)
struct FLikeabilityChatShowData final
{
public:
	class FName                                   ChatID;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LastChatItemID;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityChatGroupShowData
// 0x0020 (0x0020 - 0x0000)
struct FLikeabilityChatGroupShowData final
{
public:
	class FName                                   ChatGroupID;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LastChatItemID;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLikeabilityChatShowData>       ChatDatas;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestTrackEntry
// 0x0020 (0x0020 - 0x0000)
struct FQuestTrackEntry final
{
public:
	class FName                                   QuestID_Begin;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID_Begin;                                 // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestID_End;                                       // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID_End;                                   // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityBaseConfigData
// 0x0038 (0x0040 - 0x0008)
struct FLikeabilityBaseConfigData final : public FTableRowBase
{
public:
	int32                                         AddLiveabilityChatActiveTimes;                     // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxLiveabilityChatActiveTimes;                     // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxLiveabilityQuestNum;                            // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SendGiftTimes;                                     // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalSendGiftTimes;                                // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SystemReadChatMinTime;                             // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SystemReadChatMaxTime;                             // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChatPopUpDelayTime;                                // 0x0024(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NoticeTimePerDay;                                  // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AwardRedPointTag;                                  // 0x002C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ChatRedPointTag;                                   // 0x0034(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37E1[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.LikeabilityRoleSortData
// 0x0048 (0x0050 - 0x0008)
struct FLikeabilityRoleSortData final : public FTableRowBase
{
public:
	class FText                                   NameText;                                          // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         SortLevel;                                         // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MapID;                                             // 0x001C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37E2[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      SortMaterial;                                      // 0x0028(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LikeabilityMapData
// 0x0040 (0x0040 - 0x0000)
struct FLikeabilityMapData final
{
public:
	class FString                                 LevelName;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MapIconID;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LikeabilityMapIconID;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceLocation;                                    // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37E3[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MiniMapSubAreaData
// 0x0030 (0x0038 - 0x0008)
struct FMiniMapSubAreaData final : public FTableRowBase
{
public:
	class FText                                   SubAreaName;                                       // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FName                                   BelongAreaID;                                      // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       SubAreaRenderData;                                 // 0x0020(0x0010)(Edit, NativeAccessSpecifierPublic)
	float                                         ViewFieldScale;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37E4[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.FootSoundSubInfo
// 0x0040 (0x0040 - 0x0000)
struct FFootSoundSubInfo final
{
public:
	class FString                                 SwitchGroup;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SWITCH;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StateGroup;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OpActivityCond
// 0x0018 (0x0018 - 0x0000)
struct FOpActivityCond final
{
public:
	EOpActivityCondType                           Type;                                              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37E5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OpActivityAward
// 0x0040 (0x0040 - 0x0000)
struct FOpActivityAward final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Desc;                                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Items;                                             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOpActivityCond>                Conditions;                                        // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OpActivityConfig
// 0x00A0 (0x00A0 - 0x0000)
struct FOpActivityConfig final
{
public:
	int32                                         Version;                                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37E6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Type;                                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name;                                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Title;                                             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Desc;                                              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Sort;                                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37E7[0xC];                                     // 0x004C(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         OpenTime;                                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         CloseTime;                                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         RemoveTime;                                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UIClass;                                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOpActivityAward>               Awards;                                            // 0x0080(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_37E8[0x10];                                    // 0x0090(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CharacterFootStepSoundData
// 0x0048 (0x0050 - 0x0008)
struct FCharacterFootStepSoundData final : public FTableRowBase
{
public:
	class FString                                 RoleName;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           FootAKAudio;                                       // 0x0018(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SwitchGroup;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GreetAimOffsetParams
// 0x00E8 (0x00E8 - 0x0000)
struct FGreetAimOffsetParams final
{
public:
	class UAnimMontage*                           GreetAnim;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GreetInterval;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37E9[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class AHTAbilityCharacter>> GreetTargetObjectTypes;                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         GreetAngleLimit;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GreetFocusProbability;                             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GreetFocusInterval;                                // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GreetFocusCD;                                      // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           AimMovingAudio;                                    // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           AimStopAudio;                                      // 0x0058(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AudioTiggerSensitivity;                            // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37EA[0x1C];                                    // 0x0084(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	class AHottaCharacter*                        NextGreetTarget;                                   // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AHottaCharacter*                        NextFoucsTarget;                                   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAimOffset;                                     // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayBubbleMsg;                                    // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37EB[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAimOffsetBlendSpace*                   AimOffsetBlendSpaceOverride;                       // 0x00B8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimYawOffsetMax;                                   // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimPitchOffsetMax;                                 // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37EC[0x8];                                     // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           MovingAkComponent;                                 // 0x00D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37ED[0x10];                                    // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTFootIKInfo
// 0x0020 (0x0020 - 0x0000)
struct FHTFootIKInfo final
{
public:
	TArray<class FName>                           FootBonesArray;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         FFootHeightOffset;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FIKOpenBlend;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37EE[0x8];                                     // 0x0018(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestSpawnPointEntry
// 0x0028 (0x0028 - 0x0000)
struct FQuestSpawnPointEntry final
{
public:
	class FName                                   BeginQuestID;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EndQuestID;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SpawnLocation;                                     // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestSpawnPointRow
// 0x0010 (0x0018 - 0x0008)
struct FQuestSpawnPointRow final : public FTableRowBase
{
public:
	TArray<struct FQuestSpawnPointEntry>          QuestSpawnPointOverrides;                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.YaHaHaData
// 0x0048 (0x0050 - 0x0008)
struct FYaHaHaData final : public FTableRowBase
{
public:
	int32                                         Index;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   YahahaId;                                          // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TableName;                                         // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Type;                                              // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CD;                                                // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Range;                                             // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DropID;                                            // 0x0044(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CanReset;                                          // 0x004C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedCheckPos;                                      // 0x004D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37EF[0x2];                                     // 0x004E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.YaHaHaTypeRow
// 0x0010 (0x0018 - 0x0008)
struct FYaHaHaTypeRow final : public FTableRowBase
{
public:
	TArray<class FName>                           YaHaHaIDs;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TimerClockDataTable
// 0x0020 (0x0028 - 0x0008)
struct FTimerClockDataTable final : public FTableRowBase
{
public:
	EClockIntervalType                            ClockIntervalType;                                 // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EClockNetType                                 NetType;                                           // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37F0[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FClockData>                     Times;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         RunOnType;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OnlyOnce;                                          // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OnlyNotifyOnce;                                    // 0x0025(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OfflineNotify;                                     // 0x0026(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37F1[0x1];                                     // 0x0027(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TeleportData
// 0x0098 (0x00A0 - 0x0008)
struct FTeleportData final : public FTableRowBase
{
public:
	class FName                                   TeleportId;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Range;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index;                                             // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LevelName;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37F2[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0040(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TransformLoading
// 0x0038 (0x0038 - 0x0000)
struct FTransformLoading final
{
public:
	class FString                                 TransferLoadingUI;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LoadingUITextID;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LoadingPlayMediaID;                                // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShowSkipButtonTime;                                // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37F3[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RoleLevelBaseConfig
// 0x0020 (0x0028 - 0x0008)
struct FRoleLevelBaseConfig final : public FTableRowBase
{
public:
	int32                                         InitMaxWorldLevel;                                 // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RoleLevelLimit;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ConversionCapitalID;                               // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ConversionRatio;                                   // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinRestorWorldLevel;                               // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AjustWorldLevelCD;                                 // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37F4[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RoleLevelNotifyCacheData
// 0x002C (0x002C - 0x0000)
struct FRoleLevelNotifyCacheData final
{
public:
	bool                                          bNeedNotify;                                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37F5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OldLevel;                                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewLevel;                                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OldExp;                                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewExp;                                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChangeExp;                                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OldWorldLevel;                                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewWorldLevel;                                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsShowQuestNotify;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37F6[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BrokenQuestID;                                     // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CookMaterialItem
// 0x000C (0x000C - 0x0000)
struct FCookMaterialItem final
{
public:
	class FName                                   MaterialItemID;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaterialItemNum;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CookFormulaData
// 0x0028 (0x0030 - 0x0008)
struct FCookFormulaData final : public FTableRowBase
{
public:
	class FName                                   CookFoodID;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCookMaterialItem>              FormulaItemArray;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       CookParticleEffect;                                // 0x0020(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GameChargeOrder
// 0x0090 (0x0090 - 0x0000)
struct FGameChargeOrder final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppOrder;                                          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Amount;                                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AgentOrder;                                        // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         BookAmount;                                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Ext;                                               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PayType;                                           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CreateTime;                                        // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Os;                                                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SourceType;                                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeviceID;                                          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ProductId;                                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LimitGameplayFuncStruct
// 0x0014 (0x0014 - 0x0000)
struct alignas(0x04) FLimitGameplayFuncStruct final
{
public:
	uint8                                         Pad_37F7[0x14];                                    // 0x0000(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TaskMessage
// 0x0020 (0x0020 - 0x0000)
struct FTaskMessage final
{
public:
	class FText                                   MsgText;                                           // 0x0000(0x0010)(NativeAccessSpecifierPublic)
	float                                         TimerInterval;                                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37F8[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UHTUI_TaskMessageItem>      ItemClassOverride;                                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAvatarConfig
// 0x0088 (0x0090 - 0x0008)
struct FHTAvatarConfig : public FTableRowBase
{
public:
	class FText                                   Name;                                              // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bIsDefault;                                        // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoUnlock;                                       // 0x0019(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedMatchSex;                                     // 0x001A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERoleSex                                      RoleSex;                                           // 0x001B(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37F9[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              BigImage;                                          // 0x0020(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0048(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0070(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   UnlockDescription;                                 // 0x0080(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAvatarFrameConfig
// 0x0000 (0x0090 - 0x0090)
struct FHTAvatarFrameConfig final : public FHTAvatarConfig
{
};

// ScriptStruct HTGame.NoticeImgInfo
// 0x0020 (0x0020 - 0x0000)
struct FNoticeImgInfo final
{
public:
	class FString                                 ImgURL;                                            // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 HyperLinkURL;                                      // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NoticeChannelConfig
// 0x0020 (0x0028 - 0x0008)
struct FNoticeChannelConfig final : public FTableRowBase
{
public:
	class FString                                 Description;                                       // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 URLPostfix;                                        // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SeatAnimData
// 0x0140 (0x0140 - 0x0000)
struct FSeatAnimData final
{
public:
	TSoftObjectPtr<class UAnimMontage>            GetOnMontage_Door;                                 // 0x0000(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            GetOffMontage_Door;                                // 0x0028(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>           RideLoopAnim_Female;                               // 0x0050(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            GetOnMontage_Female;                               // 0x0078(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            GetOffMontage_Female;                              // 0x00A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequence>           RideLoopAnim_Male;                                 // 0x00C8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            GetOnMontage_Male;                                 // 0x00F0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>            GetOffMontage_Male;                                // 0x0118(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleAnimData
// 0x0010 (0x0018 - 0x0008)
struct FVehicleAnimData final : public FTableRowBase
{
public:
	TArray<struct FSeatAnimData>                  SeatAnimDataList;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.BlockAbilitySceneConfig
// 0x0020 (0x0028 - 0x0008)
struct FBlockAbilitySceneConfig final : public FTableRowBase
{
public:
	bool                                          bIsBlockSceneType;                                 // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37FA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SceneNameToBlock;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELevelSceneType                               SceneTypeToBlock;                                  // 0x0020(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37FB[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TempBGMData
// 0x0048 (0x0050 - 0x0008)
struct FTempBGMData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UAkAudioEvent>           BGMSource;                                         // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StateGroup;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   State;                                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Desc;                                              // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AIRefreshConfig
// 0x0018 (0x0020 - 0x0008)
struct FAIRefreshConfig final : public FTableRowBase
{
public:
	ESpawnResultsOperation                        RefreshOperation;                                  // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37FC[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UHTAIRefreshConditionBase>> AIRefreshConditionEntriesOverride;                 // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ReactionDetailUIData
// 0x0040 (0x0048 - 0x0008)
struct FReactionDetailUIData final : public FTableRowBase
{
public:
	TArray<ECharacterElementType>                 ReactionElementArray;                              // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ReactionResultName;                                // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ReactionResultDesc;                                // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FReactionDetailUIInnerData>     InnerData;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ReactionElementTypeConfigData
// 0x00B0 (0x00B8 - 0x0008)
struct FReactionElementTypeConfigData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              ActiveReactionImage;                               // 0x0008(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              InActiveReactionImage;                             // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ActiveReactionBigIcon;                             // 0x0058(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              InActiveReactionBigIcon;                           // 0x0080(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ElementText;                                       // 0x00A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ShowCaseSerialText
// 0x0010 (0x0018 - 0x0008)
struct FShowCaseSerialText final : public FTableRowBase
{
public:
	class FText                                   SerialText;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterGeometryType
// 0x0038 (0x0040 - 0x0008)
struct FCharacterGeometryType final : public FTableRowBase
{
public:
	class FText                                   DisplayName;                                       // 0x0008(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              GeometryTypeImage;                                 // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MapQuestTraceData
// 0x0018 (0x0018 - 0x0000)
struct FMapQuestTraceData final
{
public:
	class FName                                   MapIconID;                                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 IconUniqueID;                                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.QuestTypeDetailData
// 0x0068 (0x0070 - 0x0008)
struct FQuestTypeDetailData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              TypeImage;                                         // 0x0008(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              TypeTrackImage;                                    // 0x0030(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   TypeText;                                          // 0x0058(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bCanTrack;                                         // 0x0068(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowInQuestPanel;                                 // 0x0069(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37FD[0x6];                                     // 0x006A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ElevatorCameraParam
// 0x0010 (0x0010 - 0x0000)
struct FElevatorCameraParam final
{
public:
	float                                         InFOV;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InPitchMin;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InPitchMax;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InDefaultPitch;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CityData
// 0x0018 (0x0020 - 0x0008)
struct FCityData final : public FTableRowBase
{
public:
	class FText                                   CityName;                                          // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FName                                   BelongsMapName;                                    // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.RegionData
// 0x0018 (0x0020 - 0x0008)
struct FRegionData final : public FTableRowBase
{
public:
	class FText                                   RegionName;                                        // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	class FName                                   BelongsCityID;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.OpActivityInfo
// 0x00A8 (0x00A8 - 0x0000)
struct alignas(0x08) FOpActivityInfo final
{
public:
	uint8                                         Pad_37FE[0xA8];                                    // 0x0000(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.QuestTriggerConfig
// 0x0010 (0x0010 - 0x0000)
struct FQuestTriggerConfig final
{
public:
	class FName                                   QuestID_Enable;                                    // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID_Enable;                                // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.StoreBrandNPCLocation
// 0x0030 (0x0030 - 0x0000)
struct FStoreBrandNPCLocation final
{
public:
	bool                                          IsEmployee;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37FF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EmploteeIndex;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CommonID;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHTGamePlayTransform>           SpawnTransformPointsOverride;                      // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AHTTargetPoint*>                 StoreNPCPoints;                                    // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GamePlayEntranceData
// 0x0030 (0x0038 - 0x0008)
struct FGamePlayEntranceData final : public FTableRowBase
{
public:
	TArray<TSoftObjectPtr<class UDataLayerAsset>> DataLayerAssets;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class FName                                   EntryTeleportID;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReloadTeleportID;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               ActiveCondition;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CartoonBorderData
// 0x0140 (0x0148 - 0x0008)
struct FCartoonBorderData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              LeftUpTexture;                                     // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              UpTexture;                                         // 0x0030(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              RightTexture;                                      // 0x0058(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              LeftMidTexture;                                    // 0x0080(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              RightMidTexture;                                   // 0x00A8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              LeftBottomTexture;                                 // 0x00D0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              BottomTexture;                                     // 0x00F8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              RightBottomTexture;                                // 0x0120(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MontageStrcut
// 0x0050 (0x0050 - 0x0000)
struct FMontageStrcut final
{
public:
	TMap<ECharacterInfoPage, struct FMontageInfo> SourceMontageMap;                                  // 0x0000(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.EncapsulateWidgetArray
// 0x0010 (0x0010 - 0x0000)
struct FEncapsulateWidgetArray final
{
public:
	TArray<class UHTUI_DamageFloatiesWidget*>     EncapsulateWidgets;                                // 0x0000(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DamageFloatsGrid
// 0x0020 (0x0020 - 0x0000)
struct FDamageFloatsGrid final
{
public:
	uint8                                         Pad_3800[0x10];                                    // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEncapsulateWidgetArray>        Grid;                                              // 0x0010(0x0010)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
};

// ScriptStruct HTGame.GamepadEnterButtonSettingKeys
// 0x0030 (0x0030 - 0x0000)
struct FGamepadEnterButtonSettingKeys final
{
public:
	struct FKey                                   Key1;                                              // 0x0000(0x0018)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   Key2;                                              // 0x0018(0x0018)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.InteractActorInfo
// 0x0128 (0x0128 - 0x0000)
struct FInteractActorInfo final
{
public:
	struct FInteractEntry                         MyEntry;                                           // 0x0000(0x0120)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  MyActor;                                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTInteractNode
// 0x0138 (0x0138 - 0x0000)
struct FHTInteractNode final
{
public:
	class UHTInteractEntryWidget*                 InteractEntryWidget;                               // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInteractActorInfo                     InteractActorInfo;                                 // 0x0008(0x0128)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bUsed;                                             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3801[0x7];                                     // 0x0131(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MiniMapTileRenderLayerData
// 0x0070 (0x0070 - 0x0000)
struct FMiniMapTileRenderLayerData final
{
public:
	TArray<struct FMiniMapTileRenderIndexData>    TileIndexDatas;                                    // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UTexture2D*                             ThumbnailImage;                                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TextureTileCountX;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TextureTileCountY;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DrawTileCountX;                                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DrawTileCountY;                                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              TextureLeftTopLocation;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              TextureRightBottomLocation;                        // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              DrawLeftTopLoc;                                    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              DrawRightBottomLoc;                                // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBlendMode                                    BlendMode;                                         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3802[0x7];                                     // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CachedTexturesData_RequestAsyncLoadTileImages
// 0x0040 (0x0040 - 0x0000)
struct FCachedTexturesData_RequestAsyncLoadTileImages final
{
public:
	uint8                                         Pad_3803[0x28];                                    // 0x0000(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 DrawToRenderTarget;                                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMiniMapTileRenderLayerData>    TileLayerData;                                     // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CachedTexturesData
// 0x0060 (0x0060 - 0x0000)
struct FCachedTexturesData final
{
public:
	TArray<class UTexture2D*>                     CachedThumbnailTexture;                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3804[0x20];                                    // 0x0010(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture2D*>                     CachedDrawedTileTextures;                          // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3805[0x20];                                    // 0x0040(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.UINewGuideData
// 0x0014 (0x0014 - 0x0000)
struct alignas(0x04) FUINewGuideData final
{
public:
	uint8                                         Pad_3806[0x14];                                    // 0x0000(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemTypeConfig
// 0x0040 (0x0040 - 0x0000)
struct FItemTypeConfig final
{
public:
	TSoftObjectPtr<class UTexture2D>              Image;                                             // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0028(0x0010)(Edit, NativeAccessSpecifierPublic)
	EFurnitureShowType                            FurnitureShowType;                                 // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3807[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxPlaceCnt;                                       // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CoolDownInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FCoolDownInfo final
{
public:
	uint8                                         Pad_3808[0x38];                                    // 0x0000(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.WoodPlayerFightData
// 0x0088 (0x0088 - 0x0000)
struct FWoodPlayerFightData final
{
public:
	uint8                                         Pad_3809[0x80];                                    // 0x0000(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	class AHTPlayerCharacter*                     DamagePlayerCharacter;                             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VoiceMsgData
// 0x0018 (0x0018 - 0x0000)
struct FVoiceMsgData final
{
public:
	class FText                                   MsgContext;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   MsgId;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModulePropsData_Int
// 0x0010 (0x0010 - 0x0000)
struct FVehicleModulePropsData_Int final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PropValue;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPropertyModifyType                           ModifyType;                                        // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_380A[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VehicleModulePropsData_Float
// 0x0010 (0x0010 - 0x0000)
struct FVehicleModulePropsData_Float final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PropValue;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPropertyModifyType                           ModifyType;                                        // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_380B[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VehicleModulePropsData_StaticMeshComp
// 0x0030 (0x0030 - 0x0000)
struct FVehicleModulePropsData_StaticMeshComp final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   MeshCompClass;                                     // 0x0008(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModulePropsData_FloatCurve
// 0x0090 (0x0090 - 0x0000)
struct FVehicleModulePropsData_FloatCurve final
{
public:
	class FName                                   PropName;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     PropValue;                                         // 0x0008(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModule_BodyColor
// 0x0010 (0x0010 - 0x0000)
struct FVehicleModule_BodyColor final : public FVehicleModule_Base
{
public:
	struct FVehicleModulePropsData_Float          ColorId;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModule_DecalTexture
// 0x0038 (0x0038 - 0x0000)
struct FVehicleModule_DecalTexture final : public FVehicleModule_Base
{
public:
	struct FVehicleModulePropsData_Texture2D      DecalTexture;                                      // 0x0000(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         DecalMaterialIndex;                                // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_380C[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VehicleModule_BackKit
// 0x0038 (0x0038 - 0x0000)
struct FVehicleModule_BackKit final : public FVehicleModule_Base
{
public:
	struct FVehicleModulePropsData_StaticMeshComp KitMeshComponent;                                  // 0x0000(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   TargetSocket;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModule_Engine
// 0x0098 (0x0098 - 0x0000)
struct FVehicleModule_Engine final : public FVehicleModule_Base
{
public:
	int32                                         MaxRPM;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IdleRPM;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxTorque;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TopSpeed;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     RPM_TorqueCurve;                                   // 0x0010(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VehicleModule_GearBox
// 0x0020 (0x0020 - 0x0000)
struct FVehicleModule_GearBox final : public FVehicleModule_Base
{
public:
	TArray<float>                                 Gears;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         GearUpRPM;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GearDownRPM;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChangeGearTime;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_380D[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RentalVehicleData
// 0x0128 (0x0130 - 0x0008)
struct FRentalVehicleData final : public FTableRowBase
{
public:
	class FName                                   RentalID;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VehicleID;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ColorId;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GoodsID;                                           // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_380E[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ColorName;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_380F[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            VehicleBaseColor;                                  // 0x0040(0x00D0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector                                TrackGoalOffset;                                   // 0x0110(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3810[0x8];                                     // 0x0128(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VehicleSeatInfo
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FVehicleSeatInfo final
{
public:
	uint8                                         Pad_3811[0x28];                                    // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SummonVehicleCache
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FSummonVehicleCache final
{
public:
	uint8                                         Pad_3812[0x20];                                    // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VisualSpawnEntryStatus
// 0x0018 (0x0018 - 0x0000)
struct FVisualSpawnEntryStatus final
{
public:
	TArray<struct FVisualSpawnedStatus>           SpawnStatusList;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	int32                                         LastRandomState;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3813[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VisualSpawnVolumeRandom
// 0x0018 (0x0018 - 0x0000)
struct FVisualSpawnVolumeRandom final
{
public:
	class AHTVisualSpawnVolume*                   SpawnVolume;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomCountMax;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomizedCount;                                   // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3814[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.RuntimeGridQualityLevel
// 0x0058 (0x0058 - 0x0000)
struct FRuntimeGridQualityLevel final
{
public:
	class FName                                   GridName;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ERuntimeGridQualityLevel, struct FPerPlatformFloat> OverriddenLoadingRanges;                           // 0x0008(0x0050)(Edit, EditFixedSize, Config, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SingelClonePlayerData
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FSingelClonePlayerData final
{
public:
	uint8                                         Pad_3815[0x10];                                    // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.IllustratedData
// 0x0068 (0x0070 - 0x0008)
struct FIllustratedData final : public FTableRowBase
{
public:
	class FText                                   Title;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   ContentDes;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EIllustratedType                              Type;                                              // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EIllustratedAnomaliesType                     AnomaliesType;                                     // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDefaultUnLock;                                    // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3816[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              ShowIcon;                                          // 0x0030(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           RelevanceArray;                                    // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   UnlockId;                                          // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.InventoryContainerData
// 0x00D0 (0x00D8 - 0x0008)
struct FInventoryContainerData final : public FTableRowBase
{
public:
	int32                                         ContainItemTypes;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ContainerCapacity;                                 // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowInTab;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3817[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHTIconImageData                       IconData;                                          // 0x0018(0x00A0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   ShowName;                                          // 0x00B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bShowAllType;                                      // 0x00C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3818[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ContainSortTypes;                                  // 0x00CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanRepeat;                                        // 0x00D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3819[0x7];                                     // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_AddStamina
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_AddStamina final : public FItemToolDataBase
{
public:
	float                                         AddStaminaValue;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_381A[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_AddSatiety
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_AddSatiety final : public FItemToolDataBase
{
public:
	float                                         SatietyAdd;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_381B[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_AddBuff
// 0x0088 (0x0090 - 0x0008)
struct FItemToolData_AddBuff final : public FItemToolDataBase
{
public:
	struct FBufferData                            BuffData;                                          // 0x0008(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   BuffClass;                                         // 0x0060(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedShowConsumableUseUI;                          // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_381C[0x7];                                     // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_Revive
// 0x0010 (0x0018 - 0x0008)
struct FItemToolData_Revive final : public FItemToolDataBase
{
public:
	float                                         HPAdd;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HPMult;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedShowConsumableUseUI;                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_381D[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_AddLikeabilityValue
// 0x0010 (0x0018 - 0x0008)
struct FItemToolData_AddLikeabilityValue final : public FItemToolDataBase
{
public:
	class FName                                   LikeabilityID;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AddValue;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_381E[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_AddCurPlayersLikeabilityValue
// 0x0010 (0x0018 - 0x0008)
struct FItemToolData_AddCurPlayersLikeabilityValue final : public FItemToolDataBase
{
public:
	class FName                                   LikeabilityID;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AddValue;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_381F[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_ActiveBusinessCard
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_ActiveBusinessCard final : public FItemToolDataBase
{
public:
	class FName                                   ItemID;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemToolData_ActiveMedal
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_ActiveMedal final : public FItemToolDataBase
{
public:
	class FName                                   ItemID;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemToolData_ShowDescription
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_ShowDescription final : public FItemToolDataBase
{
public:
	class FName                                   DescriptionID;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemToolData_AddTeamExp
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_AddTeamExp final : public FItemToolDataBase
{
public:
	int32                                         EXP;                                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3820[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_StoreM
// 0x0010 (0x0018 - 0x0008)
struct FItemToolData_StoreM final : public FItemToolDataBase
{
public:
	TArray<class FName>                           StoreMItemID;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemToolData_Activation
// 0x0008 (0x0010 - 0x0008)
struct FItemToolData_Activation final : public FItemToolDataBase
{
public:
	int32                                         ActivationValue;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3821[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ItemToolData_CompleteQuest
// 0x0010 (0x0018 - 0x0008)
struct FItemToolData_CompleteQuest final : public FItemToolDataBase
{
public:
	class FName                                   QuestId;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ObjectiveID;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ItemTableRow
// 0x0008 (0x0010 - 0x0008)
struct FItemTableRow final : public FTableRowBase
{
public:
	int32                                         ItemID;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Amount;                                            // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.KeyboardKeyDisplayRow
// 0x00F8 (0x0100 - 0x0008)
struct FKeyboardKeyDisplayRow final : public FTableRowBase
{
public:
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            KeyImage;                                          // 0x0020(0x00D0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   DisplayKeyText;                                    // 0x00F0(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CrowdCharacterLODPlatform
// 0x0034 (0x0034 - 0x0000)
struct FCrowdCharacterLODPlatform final
{
public:
	float                                         BaseLODDistance[0x4];                              // 0x0000(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VisibleLODDistance[0x4];                           // 0x0010(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BufferHysteresisOnDistancePercentage;              // 0x0020(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LODMaxCount[0x4];                                  // 0x0024(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassStreetLamp
// 0x0130 (0x0130 - 0x0000)
struct FMassStreetLamp final
{
public:
	struct FVector                                Position;                                          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int16                                         StreetLampTypeIndex;                               // 0x0030(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMassStreetLampStateFlags                     StreetLampStateFlags;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3822[0xD];                                     // 0x0033(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMassStreetLampUnitData                UnitData;                                          // 0x0040(0x00F0)(NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassStreetLampIntersectionFragment
// 0x0170 (0x0170 - 0x0000)
struct alignas(0x10) FMassStreetLampIntersectionFragment final : public FMassFragment
{
public:
	uint8                                         Pad_3823[0x170];                                   // 0x0000(0x0170)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MassStreetLampOpenTime
// 0x000C (0x000C - 0x0000)
struct FMassStreetLampOpenTime final
{
public:
	float                                         StartTime;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTime;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOpen;                                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3824[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MassStreetLampInstanceDesc
// 0x0090 (0x0090 - 0x0000)
struct FMassStreetLampInstanceDesc final
{
public:
	struct FVector                                CollisionLocation;                                 // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3825[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CollisionRotation;                                 // 0x0020(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        Positions;                                         // 0x0040(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRotator>                       Rotations;                                         // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMassStreetLampUnitData>        UnitDatas;                                         // 0x0060(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int16                                         StreetLampTypeIndex;                               // 0x0070(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseCastShadows;                                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3826[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Tags;                                              // 0x0078(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         OpenTimeKey;                                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3827[0x4];                                     // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MassStreetLampInstanceCustomData
// 0x0004 (0x0004 - 0x0000)
struct FMassStreetLampInstanceCustomData final
{
public:
	float                                         PackedParam1;                                      // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MassTrafficLightClientBubbleSerializer
// 0x0218 (0x0350 - 0x0138)
struct FMassTrafficLightClientBubbleSerializer final : public FMassClientBubbleSerializerBase
{
public:
	uint8                                         Pad_3828[0x208];                                   // 0x0138(0x0208)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTrafficLightFastArrayItem>     TrafficLight;                                      // 0x0340(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct HTGame.MiniMapTileImageData
// 0x0028 (0x0028 - 0x0000)
struct FMiniMapTileImageData final
{
public:
	TArray<TSoftObjectPtr<class UTexture2D>>      TileImages;                                        // 0x0000(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FVector2D                              BackgroundSize;                                    // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TileCountX;                                        // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TileCountY;                                        // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapExploreIconData
// 0x0038 (0x0038 - 0x0000)
struct FMiniMapExploreIconData final
{
public:
	struct FFloatRange                            WertheimerValueRange;                              // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ExploreIconImage;                                  // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapExploreColorData
// 0x0020 (0x0020 - 0x0000)
struct FMiniMapExploreColorData final
{
public:
	struct FFloatRange                            WertheimerValueRange;                              // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           WertheimerColor;                                   // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconImageData
// 0x0030 (0x0078 - 0x0048)
struct FMiniMapIconImageData final : public FMiniMapIconRenderData_Base
{
public:
	TSoftObjectPtr<class UObject>                 IconImage;                                         // 0x0048(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SizeMatParameter;                                  // 0x0070(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconTextData
// 0x0098 (0x00E0 - 0x0048)
struct FMiniMapIconTextData final : public FMiniMapIconRenderData_Base
{
public:
	class FText                                   IconText;                                          // 0x0048(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                         Font;                                              // 0x0058(0x0060)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMiniMapIconTextFontScaleData>  FontScaleData;                                     // 0x00B8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color;                                             // 0x00C8(0x0014)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_3829[0x4];                                     // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MiniMapIconUserWidgetData
// 0x0028 (0x0070 - 0x0048)
struct FMiniMapIconUserWidgetData final : public FMiniMapIconRenderData_Base
{
public:
	TSoftClassPtr<class UClass>                   IconWidget;                                        // 0x0048(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconExtendData_Transfer
// 0x00A8 (0x00B0 - 0x0008)
#pragma pack(push, 0x1)
struct alignas(0x10) FMiniMapIconExtendData_Transfer : public FMiniMapIconExtendData
{
public:
	bool                                          bOverrideTransferToLocation;                       // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_382A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TransferToLocationOverride;                        // 0x0010(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDefaultActived;                                   // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanRelive;                                        // 0x0071(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_382B[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReliveLocation;                                    // 0x0078(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasPreQuestId;                                    // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_382C[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   QuestId;                                           // 0x0094(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QuestValue;                                        // 0x009C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_382D[0x4];                                     // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
#pragma pack(pop)

// ScriptStruct HTGame.MiniMapIconExtendData_Clone
// 0x0050 (0x0100 - 0x00B0)
struct FMiniMapIconExtendData_Clone final : public FMiniMapIconExtendData_Transfer
{
public:
	class FName                                   CloneSystemContainID;                              // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   CloneDes;                                          // 0x00B0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   CloneTitleName;                                    // 0x00C0(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              CloneIcon;                                         // 0x00D0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_382E[0x8];                                     // 0x00F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MiniMapIconExtendData_Quest
// 0x0008 (0x0010 - 0x0008)
struct FMiniMapIconExtendData_Quest final : public FMiniMapIconExtendData
{
public:
	class FName                                   QuestId;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapIconFunctionData_Teleport
// 0x0000 (0x0008 - 0x0008)
struct FMiniMapIconFunctionData_Teleport final : public FMiniMapIconFunctionData_Base
{
};

// ScriptStruct HTGame.MiniMapIconFunctionData_Clone
// 0x0000 (0x0008 - 0x0008)
struct FMiniMapIconFunctionData_Clone final : public FMiniMapIconFunctionData_Base
{
};

// ScriptStruct HTGame.MiniMapIconFunctionData_MonsterDrop
// 0x0000 (0x0008 - 0x0008)
struct FMiniMapIconFunctionData_MonsterDrop final : public FMiniMapIconFunctionData_Base
{
};

// ScriptStruct HTGame.MiniMapIconFunctionData_Store
// 0x0000 (0x0008 - 0x0008)
struct FMiniMapIconFunctionData_Store final : public FMiniMapIconFunctionData_Base
{
};

// ScriptStruct HTGame.MiniMapTileDrawData
// 0x0060 (0x0060 - 0x0000)
struct FMiniMapTileDrawData final
{
public:
	class UTexture2D*                             DrawTexture;                                       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_382F[0x58];                                    // 0x0008(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.MiniMapCustomIconData
// 0x0028 (0x0030 - 0x0008)
struct FMiniMapCustomIconData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              IconImage;                                         // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.MiniMapRadarStateChangeAnimData
// 0x0010 (0x0010 - 0x0000)
struct FMiniMapRadarStateChangeAnimData final
{
public:
	class UCurveFloat*                            AnimCurve;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimTime;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3830[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TraceAreaData
// 0x00C8 (0x00D0 - 0x0008)
struct FTraceAreaData final : public FTableRowBase
{
public:
	class FName                                   CurAreaId;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LevelMap;                                          // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParentAreaId;                                      // 0x001C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ExitMapIcon;                                       // 0x0024(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3831[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   AreaBox;                                           // 0x0030(0x0038)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0068(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class FName>                SubAreaEntranceList;                               // 0x0080(0x0050)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NewGuideData
// 0x00A0 (0x00A8 - 0x0008)
struct FNewGuideData final : public FTableRowBase
{
public:
	class FString                                 GuideAnnottation;                                  // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNewGuideInfo                          DefaultGuide;                                      // 0x0018(0x0040)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<ECommonInputType, struct FNewGuideInfo>  PlatformGuideInfo;                                 // 0x0058(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.AssembleGuideData
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FAssembleGuideData final
{
public:
	uint8                                         Pad_3832[0x30];                                    // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.WeakGuideStepData
// 0x0018 (0x0068 - 0x0050)
struct FWeakGuideStepData final : public FHTGuideStepDataBase
{
public:
	struct FVector2D                              DescPos;                                           // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResponseTime;                                      // 0x0060(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3833[0x4];                                     // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HiddenCompData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FHiddenCompData final
{
public:
	uint8                                         Pad_3834[0x20];                                    // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SaveCollisionChannelInfo
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FSaveCollisionChannelInfo final
{
public:
	uint8                                         Pad_3835[0x50];                                    // 0x0000(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PhysicalProjectileParam
// 0x00A0 (0x00A0 - 0x0000)
struct FPhysicalProjectileParam final
{
public:
	TSoftObjectPtr<class UStaticMesh>             ProjectileStaticMesh;                              // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      MeshOverlayMaterial;                               // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EProjectileAkEventType, struct FInstancedStruct> ProjectileSound;                                   // 0x0050(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ViewportUITableRow
// 0x0028 (0x0030 - 0x0008)
struct FViewportUITableRow final : public FTableRowBase
{
public:
	TSoftClassPtr<class UClass>                   ViewportUIClass;                                   // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.PlaystationUIClassData
// 0x0028 (0x0030 - 0x0008)
struct FPlaystationUIClassData final : public FTableRowBase
{
public:
	TSoftClassPtr<class UClass>                   UIClass;                                           // 0x0008(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.NotifyPostParamaters
// 0x02D0 (0x02D0 - 0x0000)
struct FNotifyPostParamaters final
{
public:
	class FName                                   ParamterName;                                      // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsCurveDriven;                                     // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsVectorParamter;                                  // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3836[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FloatValue;                                        // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               VectorValue;                                       // 0x0010(0x0020)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeInTime;                                        // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeOutTime;                                       // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     FloatCurve;                                        // 0x0038(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeCurveLinearColor               VectorCurve;                                       // 0x00C0(0x0208)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_3837[0x8];                                     // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.ScalableProjectileParams
// 0x0040 (0x0040 - 0x0000)
struct FScalableProjectileParams final
{
public:
	bool                                          bDelayOpen;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3838[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayOpenTime;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialScaleRadius;                                // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FinalScaleRadius;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChangeTime;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomCurves;                                  // 0x0014(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3839[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCurveFloat>             ScaleFloatCurve;                                   // 0x0018(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.FurnitureAttributeData
// 0x0028 (0x0030 - 0x0008)
struct FFurnitureAttributeData final : public FTableRowBase
{
public:
	int32                                         Level;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_383A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Desc;                                              // 0x0010(0x0010)(Edit, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Addition;                                          // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeInterval;                                      // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_383B[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.FixedKeys
// 0x0010 (0x0010 - 0x0000)
struct FFixedKeys final
{
public:
	TArray<struct FKey>                           FixedKeys;                                         // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SettingComboBoxOptionData_Resolution
// 0x0008 (0x0008 - 0x0000)
struct FSettingComboBoxOptionData_Resolution final : public FSettingComboBoxOptionData_Base
{
public:
	int32                                         ResolutionX;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ResolutionY;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SettingComboBoxOptionData_ImageQuality
// 0x0008 (0x0008 - 0x0000)
struct FSettingComboBoxOptionData_ImageQuality final : public FSettingComboBoxOptionData_Base
{
public:
	class FName                                   QualityID;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SettingComboBoxOptionData_ScreenPercentage
// 0x0004 (0x0004 - 0x0000)
struct FSettingComboBoxOptionData_ScreenPercentage final : public FSettingComboBoxOptionData_Base
{
public:
	float                                         ScreenPercentageValue;                             // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SettingComboBoxOptionData_GraphicsLevel
// 0x0004 (0x0004 - 0x0000)
struct FSettingComboBoxOptionData_GraphicsLevel final : public FSettingComboBoxOptionData_Base
{
public:
	int32                                         GraphicsLevel;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SettingOptionChangeKeyDataRow
// 0x0088 (0x0090 - 0x0008)
struct FSettingOptionChangeKeyDataRow final : public FTableRowBase
{
public:
	class UInputAction*                           KeyInputAction;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FKey>              InitialKeyMap;                                     // 0x0010(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Display;                                           // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   KeyDisplay;                                        // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          IsPlayerAbilityKey;                                // 0x0080(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_383C[0xF];                                     // 0x0081(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.PlayedMusicRecord
// 0x0010 (0x0010 - 0x0000)
struct FPlayedMusicRecord final
{
public:
	class FName                                   MusicId;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecordTime;                                        // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMusicPlayMode                                PlayMode;                                          // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_383D[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StorySequenceData
// 0x0120 (0x0200 - 0x00E0)
struct FStorySequenceData final : public FStoryDataBase
{
public:
	TSoftObjectPtr<class ULevelSequence>          SequenceTemple;                                    // 0x00E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           SoundSource;                                       // 0x0108(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           SoundStopSource;                                   // 0x0130(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           VoiceSource;                                       // 0x0158(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>           VoiceStopSource;                                   // 0x0180(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUnlockManualPostAtEnd;                            // 0x01A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_383E[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAkAudioEvent>           InteractiveMusicEvent;                             // 0x01B0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   IntMusicStateGroup;                                // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   IntMusicState;                                     // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CaptionsID;                                        // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FeedBackEffectID;                                  // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_383F[0x8];                                     // 0x01F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.StoryVedioData
// 0x0010 (0x00F0 - 0x00E0)
struct FStoryVedioData final : public FStoryDataBase
{
public:
	class FName                                   MediaID;                                           // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3840[0x8];                                     // 0x00E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.GameFeaturePlayerStateComponentEntry
// 0x0030 (0x0038 - 0x0008)
struct FGameFeaturePlayerStateComponentEntry final : public FGameFeaturePlayerStateEntry
{
public:
	TSoftClassPtr<class UClass>                   ComponentClass;                                    // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bClientComponent : 1;                              // 0x0030(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bServerComponent : 1;                              // 0x0030(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_3841[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SystematicGameFeaturesActiveParam
// 0x0014 (0x0014 - 0x0000)
struct FSystematicGameFeaturesActiveParam final
{
public:
	ESystematicGameFeaturesActiveType             ActiveType;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3842[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxValue;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ID;                                                // 0x000C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SystematicGameFeaturesDefinitions
// 0x0158 (0x0160 - 0x0008)
struct FSystematicGameFeaturesDefinitions final : public FTableRowBase
{
public:
	class FName                                   ID;                                                // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSystematicGameFeaturesActiveParam> Requires;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               Actions;                                           // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   UINameToOpen;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UIExtendParameter;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Icon;                                              // 0x0050(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bShowActiveDescription;                            // 0x0120(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3843[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0128(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_3844[0x10];                                    // 0x0138(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bEnableQuickMenuOption;                            // 0x0148(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3845[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         QuickMenuIndex_Keyboard;                           // 0x014C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         QuickMenuIndex_Gamepad;                            // 0x0150(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQuickMenuSettingsButtonPlace                 Place;                                             // 0x0154(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3846[0xB];                                     // 0x0155(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TeammateDetailInfo
// 0x0080 (0x0080 - 0x0000)
struct FTeammateDetailInfo final
{
public:
	int64                                         RoleId;                                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFarAway;                                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3847[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxHP;                                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HP;                                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShieldHealth;                                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsDead;                                            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3848[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LevelName;                                         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LineId;                                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3849[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxArmor;                                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Armor;                                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ArmorForeColor;                                    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ArmorBackColor;                                    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLitterRegression;                                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_384A[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FallDownProgress;                                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DeltaTimeInfo
// 0x0068 (0x0068 - 0x0000)
struct alignas(0x08) FDeltaTimeInfo final
{
public:
	uint8                                         Pad_384B[0x68];                                    // 0x0000(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TrialBaseData
// 0x0050 (0x0058 - 0x0008)
struct FTrialBaseData final : public FTableRowBase
{
public:
	class FName                                   MiniMapIconId;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NeedStamina;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_384C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TrialDesc;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   DropID;                                            // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   AwardActorClass;                                   // 0x0030(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GamepadIcons
// 0x00B0 (0x00B8 - 0x0008)
struct FGamepadIcons final : public FTableRowBase
{
public:
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_384D[0x8];                                     // 0x0020(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              XBoxTexture2D;                                     // 0x0028(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              PS4Texture2D;                                      // 0x0050(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              PS5Texture2D;                                      // 0x0078(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             LoadedXBoxTexture2D;                               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             LoadedPS4Texture2D;                                // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             LoadedPS5Texture2D;                                // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterAttributeActivateDataMap
// 0x0050 (0x0050 - 0x0000)
struct FCharacterAttributeActivateDataMap final
{
public:
	TMap<class FName, struct FCharacterAttributeActivateData> AttributeActivateDataMap;                          // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterAbilityAttributeYiNeng
// 0x0050 (0x0058 - 0x0008)
struct FCharacterAbilityAttributeYiNeng final : public FTableRowBase
{
public:
	TMap<class FName, struct FCharacterAttributeActivateData> AttributeActivateDataMap;                          // 0x0008(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.CharacterAbilityConfig
// 0x0120 (0x0128 - 0x0008)
struct FCharacterAbilityConfig final : public FTableRowBase
{
public:
	TMap<int32, struct FCharacterAbilityInfo>     InitSkillList;                                     // 0x0008(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<int32, struct FCharacterAbilityInfo>     PassSkillList;                                     // 0x0058(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<int32, struct FCharacterAbilityInfo>     AttributeList;                                     // 0x00A8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCharacterAbilityInfo                  BeginingSkill;                                     // 0x00F8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCharacterAbilityInfo                  PeculiaritySkill;                                  // 0x0110(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SkillDescription
// 0x0010 (0x0018 - 0x0008)
struct FSkillDescription final : public FTableRowBase
{
public:
	class FText                                   Description;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.LightShadowEdge
// 0x0020 (0x0020 - 0x0000)
struct FLightShadowEdge final
{
public:
	uint8                                         bCastColoredShadowEdge : 1;                        // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_384E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ShadowEdgeColor;                                   // 0x0004(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShadowEdgeColorIntensity;                          // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               ShadowEdgeTexture;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.SunLightHT
// 0x0058 (0x0058 - 0x0000)
struct FSunLightHT final
{
public:
	struct FLinearColor                           LightColor;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightIntensityScale;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightTemperature;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunAngle;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunInclination;                                    // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunVerticalOffset;                                 // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightFuncIntensity;                                // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpecularScale;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumetricScatteringIntensity;                     // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLightShadowEdge                       LightShadowEdge;                                   // 0x0030(0x0020)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          IsMultiply;                                        // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_384F[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.SkyLightHT
// 0x0070 (0x0070 - 0x0000)
struct FSkyLightHT final
{
public:
	float                                         SkyLightIntensity;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CastsShadows;                                      // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3850[0x7];                                     // 0x0005(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SkyLightColor;                                     // 0x000C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LowerHemisphereColor;                              // 0x001C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3851[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureCube*                           SkyTextureCube;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTextureCube>            SoftSkyTextureCube;                                // 0x0038(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3852[0x8];                                     // 0x0060(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          Enable;                                            // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3853[0x7];                                     // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CartoonSkySphere
// 0x002C (0x002C - 0x0000)
struct FCartoonSkySphere final
{
public:
	float                                         SkyFalloff;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SkyFalloffBias;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           OverallHorizonColor;                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           OverallZenithColor;                                // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3854[0x3];                                     // 0x0029(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CartoonSkyGradient
// 0x0024 (0x0024 - 0x0000)
struct FCartoonSkyGradient final
{
public:
	struct FLinearColor                           OverallSunGradientColor;                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunGradientFalloff;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SunGradientIntensity;                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HorizontalOffSet;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalOffset;                                    // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3855[0x3];                                     // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VolumetricCloudHT
// 0x0028 (0x0028 - 0x0000)
struct FVolumetricCloudHT final
{
public:
	float                                         CloudDensity;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TopEmissiveColor;                                  // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ButtonEmissiveColor;                               // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3856[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTTimeOfDayCharacterData
// 0x0070 (0x0070 - 0x0000)
struct FHTTimeOfDayCharacterData final
{
public:
	float                                         TimeOfDay;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterPostProcess                  PostProcess;                                       // 0x0004(0x0014)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3857[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRimLight                              RimLight;                                          // 0x0020(0x0050)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.Planet
// 0x0008 (0x0008 - 0x0000)
struct FPlanet final
{
public:
	float                                         BottomRadius;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 GroundAlbedo;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.Atmosphere
// 0x000C (0x000C - 0x0000)
struct FAtmosphere final
{
public:
	float                                         AtmosphereHeight;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MultiScatteringFactor;                             // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceSampleCountScale;                             // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTTimeOfDayData
// 0x0940 (0x0940 - 0x0000)
struct FHTTimeOfDayData final
{
public:
	float                                         TimeOfDay;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TimeOfDayEnable;                                   // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3858[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeBlendTime;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimateTimeSpeedMultiply;                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSunLightHT                            SunLight;                                          // 0x0010(0x0058)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FSunShaftBloom                         SunShaftBloom;                                     // 0x0068(0x0024)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3859[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSunLightHT                            Moonlight;                                         // 0x0090(0x0058)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FSunShaftBloom                         MoonShaftBloom;                                    // 0x00E8(0x0024)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FSkyAtomsphere                         SkyAtomsphere;                                     // 0x010C(0x008C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FHeightFogHT                           HeightFog;                                         // 0x0198(0x0064)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	struct FDistanceFogHT                         DistanceFog;                                       // 0x01FC(0x0068)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_385A[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkyLightHT                            SkyLight;                                          // 0x0268(0x0070)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSkySphereHT                           SkySphere;                                         // 0x02D8(0x0070)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCartoonSkySphere                      CartoonSkySphere;                                  // 0x0348(0x002C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCartoonSkyGradient                    CartoonSkyGradient;                                // 0x0374(0x0024)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCartoonSkyGradient                    CartoonMoonSkyGradient;                            // 0x0398(0x0024)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FWispsCloudHT                          WispsCloud;                                        // 0x03BC(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVolumetricCloudHT                     VolumetricCloud;                                   // 0x03E4(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCloudLightTimeOfDay                   CloudLight;                                        // 0x040C(0x0048)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCloudLightTimeOfDay                   CloudLight1;                                       // 0x0454(0x0048)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_385B[0x4];                                     // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcess                           PostProcess;                                       // 0x04A0(0x0490)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FParticleColor                         ParticleColor;                                     // 0x0930(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VolumePostProcessMaterials
// 0x0088 (0x0088 - 0x0000)
struct FVolumePostProcessMaterials final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_385C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      PostProcessMaterial;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class UCurveFloat*>         ScalarCurveParames;                                // 0x0010(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         Pad_385D[0x8];                                     // 0x0060(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               PostProcessMaterialDynamic;                        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_385E[0x18];                                    // 0x0070(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.WaterDlweBuffer
// 0x0040 (0x0040 - 0x0000)
struct FWaterDlweBuffer final
{
public:
	TArray<struct FVector>                        DLWEWaterBrushLocationsBuffer;                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 DLWEWaterBrushSizeBuffer;                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 DLWEWaterBrushStrengthBuffer;                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 DLWEWaterBrushTimeBuffer;                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.DeformationDuration
// 0x0014 (0x0014 - 0x0000)
struct alignas(0x04) FDeformationDuration final
{
public:
	uint8                                         Pad_385F[0x14];                                    // 0x0000(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.DeformationMeshData
// 0x0050 (0x0050 - 0x0000)
struct FDeformationMeshData final
{
public:
	TSoftObjectPtr<class UStaticMesh>             LeftDoorBrokenMesh;                                // 0x0000(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             RightDoorBrokenMesh;                               // 0x0028(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionShowMapIconLocationData_Transform
// 0x0010 (0x0010 - 0x0000)
struct FVisionShowMapIconLocationData_Transform final : public FVisionShowMapIconLocationData_Base
{
public:
	TArray<struct FVector>                        LocationList;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionShowMapIconLocationData_Actor
// 0x0001 (0x0001 - 0x0000)
struct FVisionShowMapIconLocationData_Actor final : public FVisionShowMapIconLocationData_Base
{
public:
	uint8                                         Pad_3860[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VisionActiveCondition_DefaultActive
// 0x0001 (0x0001 - 0x0000)
struct FVisionActiveCondition_DefaultActive final : public FVisionActiveCondition_Base
{
public:
	uint8                                         Pad_3861[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.VisionActiveCondition_VisionComplete
// 0x000C (0x000C - 0x0000)
struct FVisionActiveCondition_VisionComplete final : public FVisionActiveCondition_Base
{
public:
	class FName                                   VisionID;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CompleteDays;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionDifficultyData
// 0x00C8 (0x00D0 - 0x0008)
struct FVisionDifficultyData final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>              BackImage;                                         // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            FontColor;                                         // 0x0030(0x0014)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_3862[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              BottomImage;                                       // 0x0048(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              TitleBackImage;                                    // 0x0070(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              TitleBackImageSudden;                              // 0x0098(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ComboBoxShowText;                                  // 0x00C0(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionPropertyData
// 0x0038 (0x0040 - 0x0008)
struct FVisionPropertyData final : public FTableRowBase
{
public:
	class FText                                   PropName;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              FigureImage;                                       // 0x0018(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionReceiveAwardConditionData_Difficulty
// 0x0050 (0x0050 - 0x0000)
struct FVisionReceiveAwardConditionData_Difficulty final : public FVisionReceiveAwardConditionData
{
public:
	TSet<int32>                                   Difficulties;                                      // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.VisionSoulData
// 0x00A0 (0x00A8 - 0x0008)
struct FVisionSoulData final : public FTableRowBase
{
public:
	float                                         Probability;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SedProbability;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   VisionSoulActorClass;                              // 0x0010(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SoulItemID;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AwardDropID;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              VisionSoulIcon;                                    // 0x0078(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VisionDelayTime;                                   // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3863[0x4];                                     // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.WeaponPassiveAbilities
// 0x00A0 (0x00D0 - 0x0030)
struct FWeaponPassiveAbilities final : public FWeaponAbilitiesBase
{
public:
	EPassiveAbilitiesTiggerType                   PassiveAbilitiesTiggerType;                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSkillSelectCondition;                          // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3864[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAISkillSelectCondition                SelectCondition;                                   // 0x0038(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bUseCustomSelectCondition;                         // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3865[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GreaterThanPursuitDistance;                        // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LessThanKeepDistance;                              // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffsetAngle;                                       // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFloatRange>                    OffsetAngleRanges;                                 // 0x0090(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          LeftAngle;                                         // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RightAngle;                                        // 0x00A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3866[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  AbilityTags;                                       // 0x00A8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         TriggerProbability;                                // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3867[0x4];                                     // 0x00CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.AISkillCoordinated
// 0x0040 (0x0040 - 0x0000)
struct FAISkillCoordinated final
{
public:
	TSoftClassPtr<class UClass>                   AIClass;                                           // 0x0000(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CoordinatedRange;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3868[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAISkillCoordinatedBase>        SkillCoordinatedConfig;                            // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.WeaponUnEquipInfo
// 0x0070 (0x0070 - 0x0000)
struct FWeaponUnEquipInfo final
{
public:
	class FName                                   UnequipSocket;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3869[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             UnequipOffset;                                     // 0x0010(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.IntersectionDetail
// 0x0028 (0x0028 - 0x0000)
struct FIntersectionDetail final
{
public:
	TArray<struct FSavedZoneGraphLaneHandle>      ConcernedLanes;                                    // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FVector                                IntersectionLocation;                              // 0x0010(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTBusStationData
// 0x0010 (0x0018 - 0x0008)
struct FHTBusStationData final : public FSmartObjectDefinitionData
{
public:
	TArray<class FName>                           BusNameArray;                                      // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.TrainSingleLaneData
// 0x00A0 (0x00A0 - 0x0000)
struct FTrainSingleLaneData final
{
public:
	struct FSavedZoneGraphLaneHandle              LaneHandle;                                        // 0x0000(0x000C)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Distance;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsIntersection;                                   // 0x0010(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_386A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedZoneGraphLaneHandle              PossiblePedestrianLane;                            // 0x0014(0x000C)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSavedZoneGraphLaneLocation            PossibleStationLoction;                            // 0x0020(0x0078)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	ETrainOpenDoorSide                            StationOpenDoorSide;                               // 0x0098(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_386B[0x7];                                     // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.TrainRouteCache
// 0x0018 (0x0018 - 0x0000)
struct FTrainRouteCache final
{
public:
	class FName                                   RouteName;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTrainSingleLaneData>           TrainLanesInOrderArray;                            // 0x0008(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTGameplayModifierARInfos
// 0x0010 (0x0010 - 0x0000)
struct FHTGameplayModifierARInfos final
{
public:
	TArray<struct FHTGameplayModifierARInfo>      GameplayModifierARInfos;                           // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.GameplayModifierArrayStruct
// 0x0010 (0x0010 - 0x0000)
struct FGameplayModifierArrayStruct final
{
public:
	TArray<struct FHTGameplayModifierARInfos>     GameplayModifierArrayInfo;                         // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.ActiveGameplayEffectHandleArray
// 0x0028 (0x0028 - 0x0000)
struct FActiveGameplayEffectHandleArray final
{
public:
	TArray<struct FHTActiveGameplayEffectHandle>  ActiveGameplayEffectHandles;                       // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FHTActiveGameplayEffectHandle>  CacheActiveGameplayEffectHandles;                  // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bInLoop;                                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_386C[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.HTInputBlendPose
// 0x0010 (0x0010 - 0x0000)
struct FHTInputBlendPose final
{
public:
	TArray<struct FBranchFilter>                  BranchFilters;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTAnimNode_LayeredBoneBlend
// 0x00E0 (0x00F0 - 0x0010)
struct FHTAnimNode_LayeredBoneBlend final : public FAnimNode_Base
{
public:
	struct FPoseLink                              BasePose;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FPoseLink>                      BlendPoses;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	ELayeredBoneBlendMode                         BlendMode;                                         // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_386D[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBlendProfile*>                  BlendMasks;                                        // 0x0038(0x0010)(Edit, EditFixedSize, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FHTInputBlendPose>              LayerSetup;                                        // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 BlendWeights;                                      // 0x0058(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bMeshSpaceRotationBlend;                           // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMeshSpaceScaleBlend;                              // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECurveBlendOption                             CurveBlendOption;                                  // 0x006A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBlendRootMotionBasedOnRootBone;                   // 0x006B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_386E[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LODThreshold;                                      // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_386F[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPerBoneBlendWeight>            PerBoneBlendWeights;                               // 0x0078(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGuid                                  SkeletonGuid;                                      // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                  VirtualBoneGuid;                                   // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3870[0x48];                                    // 0x00A8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HTGame.CharacterDeadDelayData
// 0x0020 (0x0020 - 0x0000)
struct FCharacterDeadDelayData final
{
public:
	bool                                          bDeadExecuteFinish;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3871[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeadDelayTime;                                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  DeadActorTarget;                                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDropItemData                          DeadDropItemList;                                  // 0x0010(0x0010)(NativeAccessSpecifierPublic)
};

// ScriptStruct HTGame.HTRedPointData
// 0x0030 (0x0030 - 0x0000)
struct FHTRedPointData final
{
public:
	TArray<class FName>                           ParentRedPointTypeArray;                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           SubRedPointTypeArray;                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FHTRedPointMessage>             MessageArray;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

}

