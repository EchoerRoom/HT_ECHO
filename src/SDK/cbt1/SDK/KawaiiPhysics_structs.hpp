#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KawaiiPhysics

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "StructUtils_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// Enum KawaiiPhysics.EPlanarConstraint
// NumValues: 0x0005
enum class EPlanarConstraint : uint8
{
	None                                     = 0,
	X                                        = 1,
	Y                                        = 2,
	Z                                        = 3,
	EPlanarConstraint_MAX                    = 4,
};

// Enum KawaiiPhysics.EBoneForwardAxis
// NumValues: 0x0007
enum class EBoneForwardAxis : uint8
{
	X_Positive                               = 0,
	X_Negative                               = 1,
	Y_Positive                               = 2,
	Y_Negative                               = 3,
	Z_Positive                               = 4,
	Z_Negative                               = 5,
	EBoneForwardAxis_MAX                     = 6,
};

// Enum KawaiiPhysics.ECollisionLimitType
// NumValues: 0x0006
enum class ECollisionLimitType : uint8
{
	None                                     = 0,
	Spherical                                = 1,
	Capsule                                  = 2,
	Box                                      = 3,
	Planar                                   = 4,
	ECollisionLimitType_MAX                  = 5,
};

// Enum KawaiiPhysics.ECollisionSourceType
// NumValues: 0x0004
enum class ECollisionSourceType : uint8
{
	AnimNode                                 = 0,
	DataAsset                                = 1,
	PhysicsAsset                             = 2,
	ECollisionSourceType_MAX                 = 3,
};

// Enum KawaiiPhysics.EXPBDComplianceType
// NumValues: 0x0008
enum class EXPBDComplianceType : uint8
{
	Concrete                                 = 0,
	Wood                                     = 1,
	Leather                                  = 2,
	Tendon                                   = 3,
	Rubber                                   = 4,
	Muscle                                   = 5,
	Fat                                      = 6,
	EXPBDComplianceType_MAX                  = 7,
};

// Enum KawaiiPhysics.EExternalForceSpace
// NumValues: 0x0004
enum class EExternalForceSpace : uint8
{
	ComponentSpace                           = 0,
	WorldSpace                               = 1,
	BoneSpace                                = 2,
	EExternalForceSpace_MAX                  = 3,
};

// Enum KawaiiPhysics.EExternalForceCurveEvaluateType
// NumValues: 0x0004
enum class EExternalForceCurveEvaluateType : uint8
{
	Single                                   = 0,
	Average                                  = 1,
	Max                                      = 2,
	Min                                      = 3,
};

// Enum KawaiiPhysics.EKawaiiPhysicsAccessExternalForceResult
// NumValues: 0x0003
enum class EKawaiiPhysicsAccessExternalForceResult : uint8
{
	Valid                                    = 0,
	NotValid                                 = 1,
	EKawaiiPhysicsAccessExternalForceResult_MAX = 2,
};

// ScriptStruct KawaiiPhysics.CollisionLimitBase
// 0x0090 (0x0090 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x10) FCollisionLimitBase
{
public:
	struct FBoneReference                         DrivingBone;                                       // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                OffSetLocation;                                    // 0x0010(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               OffsetRotation;                                    // 0x0028(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D10[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Rotation;                                          // 0x0060(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnable;                                           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionSourceType                          SourceType;                                        // 0x0081(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D11[0x6];                                     // 0x0082(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
#pragma pack(pop)

// ScriptStruct KawaiiPhysics.SphericalLimit
// 0x0000 (0x0090 - 0x0090)
struct FSphericalLimit final : public FCollisionLimitBase
{
public:
	float                                         Radius;                                            // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESphericalLimitType                           LimitType;                                         // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D12[0x3];                                     // 0x008D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct KawaiiPhysics.CapsuleLimit
// 0x0000 (0x0090 - 0x0090)
struct FCapsuleLimit final : public FCollisionLimitBase
{
public:
	float                                         Radius;                                            // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Length;                                            // 0x008C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct KawaiiPhysics.BoxLimit
// 0x0010 (0x00A0 - 0x0090)
struct FBoxLimit final : public FCollisionLimitBase
{
public:
	struct FVector                                Extent;                                            // 0x0088(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct KawaiiPhysics.PlanarLimit
// 0x0020 (0x00B0 - 0x0090)
struct FPlanarLimit final : public FCollisionLimitBase
{
public:
	uint8                                         Pad_4D13[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlane                                 Plane;                                             // 0x0090(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct KawaiiPhysics.KawaiiPhysicsRootBoneSetting
// 0x0028 (0x0028 - 0x0000)
struct FKawaiiPhysicsRootBoneSetting final
{
public:
	struct FBoneReference                         RootBone;                                          // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FBoneReference>                 OverrideExcludeBones;                              // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseOverrideExcludeBones;                          // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D14[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct KawaiiPhysics.KawaiiPhysicsSettings
// 0x0018 (0x0018 - 0x0000)
struct FKawaiiPhysicsSettings final
{
public:
	float                                         Damping;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Stiffness;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WorldDampingLocation;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WorldDampingRotation;                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LimitAngle;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct KawaiiPhysics.KawaiiPhysicsModifyBone
// 0x0100 (0x0100 - 0x0000)
struct FKawaiiPhysicsModifyBone final
{
public:
	struct FBoneReference                         BoneRef;                                           // 0x0000(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Index;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParentIndex;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 ChildIndices;                                      // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FKawaiiPhysicsSettings                 PhysicsSettings;                                   // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0040(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PrevLocation;                                      // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  PrevRotation;                                      // 0x0070(0x0020)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PoseLocation;                                      // 0x0090(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D15[0x8];                                     // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  PoseRotation;                                      // 0x00B0(0x0020)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PoseScale;                                         // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LengthFromRoot;                                    // 0x00E8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LengthRateFromRoot;                                // 0x00EC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDummy;                                            // 0x00F0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipSimulate;                                     // 0x00F1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D16[0xE];                                     // 0x00F2(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct KawaiiPhysics.ModifyBoneConstraint
// 0x0038 (0x0038 - 0x0000)
struct FModifyBoneConstraint final
{
public:
	struct FBoneReference                         Bone1;                                             // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         Bone2;                                             // 0x0010(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideCompliance;                               // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXPBDComplianceType                           ComplianceType;                                    // 0x0021(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D17[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ModifyBoneIndex1;                                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ModifyBoneIndex2;                                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Length;                                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDummy;                                          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D18[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lambda;                                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct KawaiiPhysics.AnimNode_KawaiiPhysics
// 0x0788 (0x0850 - 0x00C8)
struct FAnimNode_KawaiiPhysics final : public FAnimNode_SkeletalControlBase
{
public:
	struct FBoneReference                         RootBone;                                          // 0x00C8(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FBoneReference>                 ExcludeBones;                                      // 0x00D8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FKawaiiPhysicsRootBoneSetting>  AdditionalRootBones;                               // 0x00E8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         DummyBoneLength;                                   // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneForwardAxis                              BoneForwardAxis;                                   // 0x00FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D19[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsSettings                 PhysicsSettings;                                   // 0x0100(0x0018)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         TargetFrameRate;                                   // 0x0118(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OverrideTargetFramerate;                           // 0x011C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D1A[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WarmUpFrames;                                      // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseWarmUpWhenResetDynamics;                       // 0x0124(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedWarmUp;                                       // 0x0125(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D1B[0x2];                                     // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TeleportDistanceThreshold;                         // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TeleportRotationThreshold;                         // 0x012C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPlanarConstraint                             PlanarConstraint;                                  // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdatePhysicsSettingsInGame;                      // 0x0131(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ResetBoneTransformWhenBoneNotFound;                // 0x0132(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D1C[0x5];                                     // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DampingCurve;                                      // 0x0138(0x0008)(ZeroConstructor, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            WorldDampingLocationCurve;                         // 0x0140(0x0008)(ZeroConstructor, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            WorldDampingRotationCurve;                         // 0x0148(0x0008)(ZeroConstructor, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            StiffnessCurve;                                    // 0x0150(0x0008)(ZeroConstructor, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            RadiusCurve;                                       // 0x0158(0x0008)(ZeroConstructor, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            LimitAngleCurve;                                   // 0x0160(0x0008)(ZeroConstructor, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     DampingCurveData;                                  // 0x0168(0x0088)(Edit, BlueprintVisible, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     StiffnessCurveData;                                // 0x01F0(0x0088)(Edit, BlueprintVisible, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     WorldDampingLocationCurveData;                     // 0x0278(0x0088)(Edit, BlueprintVisible, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     WorldDampingRotationCurveData;                     // 0x0300(0x0088)(Edit, BlueprintVisible, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     RadiusCurveData;                                   // 0x0388(0x0088)(Edit, BlueprintVisible, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     LimitAngleCurveData;                               // 0x0410(0x0088)(Edit, BlueprintVisible, AdvancedDisplay, NativeAccessSpecifierPublic)
	TArray<struct FSphericalLimit>                SphericalLimits;                                   // 0x0498(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCapsuleLimit>                  CapsuleLimits;                                     // 0x04A8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FBoxLimit>                      BoxLimits;                                         // 0x04B8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPlanarLimit>                   PlanarLimits;                                      // 0x04C8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UKawaiiPhysicsLimitsDataAsset*          LimitsDataAsset;                                   // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                          PhysicsAssetForLimits;                             // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSphericalLimit>                SphericalLimitsData;                               // 0x04E8(0x0010)(Edit, ZeroConstructor, EditConst, AdvancedDisplay, NativeAccessSpecifierPublic)
	TArray<struct FCapsuleLimit>                  CapsuleLimitsData;                                 // 0x04F8(0x0010)(Edit, ZeroConstructor, EditConst, AdvancedDisplay, NativeAccessSpecifierPublic)
	TArray<struct FBoxLimit>                      BoxLimitsData;                                     // 0x0508(0x0010)(Edit, ZeroConstructor, EditConst, AdvancedDisplay, NativeAccessSpecifierPublic)
	TArray<struct FPlanarLimit>                   PlanarLimitsData;                                  // 0x0518(0x0010)(Edit, ZeroConstructor, EditConst, AdvancedDisplay, NativeAccessSpecifierPublic)
	EXPBDComplianceType                           BoneConstraintGlobalComplianceType;                // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D1D[0x3];                                     // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BoneConstraintIterationCountBeforeCollision;       // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BoneConstraintIterationCountAfterCollision;        // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoAddChildDummyBoneConstraint;                  // 0x0534(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D1E[0x3];                                     // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FModifyBoneConstraint>          BoneConstraints;                                   // 0x0538(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UKawaiiPhysicsBoneConstraintsDataAsset* BoneConstraintsDataAsset;                          // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FModifyBoneConstraint>          BoneConstraintsData;                               // 0x0550(0x0010)(Edit, ZeroConstructor, EditConst, AdvancedDisplay, NativeAccessSpecifierPublic)
	TArray<struct FModifyBoneConstraint>          MergedBoneConstraints;                             // 0x0560(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                Gravity;                                           // 0x0570(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableWind;                                       // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D1F[0x3];                                     // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WindScale;                                         // 0x058C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStruct>               ExternalForces;                                    // 0x0590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UKawaiiPhysics_CustomExternalForce*> CustomExternalForces;                              // 0x05A0(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bAllowWorldCollision;                              // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideCollisionParams;                          // 0x05B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D20[0x6];                                     // 0x05B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBodyInstance                          CollisionChannelSettings;                          // 0x05B8(0x0198)(Edit, NativeAccessSpecifierPublic)
	bool                                          bIgnoreSelfComponent;                              // 0x0750(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D21[0x7];                                     // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBoneReference>                 IgnoreBones;                                       // 0x0758(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           IgnoreBoneNamePrefix;                              // 0x0768(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                           KawaiiPhysicsTag;                                  // 0x0778(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKawaiiPhysicsModifyBone>       ModifyBones;                                       // 0x0780(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         DeltaTime;                                         // 0x0790(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D22[0xC];                                     // 0x0794(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             PreSkelCompTransform;                              // 0x07A0(0x0060)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInitPhysicsSettings;                              // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D23[0x4F];                                    // 0x0801(0x004F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct KawaiiPhysics.ModifyBoneConstraintData
// 0x0034 (0x0034 - 0x0000)
struct FModifyBoneConstraintData final
{
public:
	class FName                                   BoneName1;                                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName2;                                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         BoneReference1;                                    // 0x0010(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         BoneReference2;                                    // 0x0020(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideCompliance;                               // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXPBDComplianceType                           ComplianceType;                                    // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D24[0x2];                                     // 0x0032(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct KawaiiPhysics.RegexPatternBoneSet
// 0x0020 (0x0020 - 0x0000)
struct FRegexPatternBoneSet final
{
public:
	class FString                                 RegexPatternBone1;                                 // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RegexPatternBone2;                                 // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct KawaiiPhysics.KawaiiPhysics_ExternalForce
// 0x00E0 (0x00E0 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x10) FKawaiiPhysics_ExternalForce
{
public:
	uint8                                         Pad_4D25[0x10];                                    // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsEnabled;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawDebug;                                        // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D26[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBoneReference>                 ApplyBoneFilter;                                   // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FBoneReference>                 IgnoreBoneFilter;                                  // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	EExternalForceSpace                           ExternalForceSpace;                                // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D27[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatInterval                         RandomForceScaleRange;                             // 0x003C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D28[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ExternalOwner;                                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsOneShot;                                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D29[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RandomizedForceScale;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                Force;                                             // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                             ComponentTransform;                                // 0x0070(0x0060)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanSelectForceSpace;                              // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D2A[0x7];                                     // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
#pragma pack(pop)

// ScriptStruct KawaiiPhysics.KawaiiPhysics_ExternalForce_Basic
// 0x00B0 (0x0190 - 0x00E0)
struct FKawaiiPhysics_ExternalForce_Basic final : public FKawaiiPhysics_ExternalForce
{
public:
	struct FVector                                ForceDir;                                          // 0x00D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     ForceRateByBoneLengthRate;                         // 0x00F0(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         Interval;                                          // 0x0178(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Time;                                              // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PrevTime;                                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4D2B[0xC];                                     // 0x0184(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct KawaiiPhysics.KawaiiPhysics_ExternalForce_Gravity
// 0x00B0 (0x0190 - 0x00E0)
struct FKawaiiPhysics_ExternalForce_Gravity final : public FKawaiiPhysics_ExternalForce
{
public:
	struct FRuntimeFloatCurve                     ForceRateByBoneLengthRate;                         // 0x00D8(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bUseCharacterGravityDirection;                     // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCharacterGravityScale;                         // 0x0161(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D2C[0x6];                                     // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OverrideGravityDirection;                          // 0x0168(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseOverrideGravityDirection;                      // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D2D[0xF];                                     // 0x0181(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct KawaiiPhysics.KawaiiPhysics_ExternalForce_Curve
// 0x0230 (0x0310 - 0x00E0)
struct FKawaiiPhysics_ExternalForce_Curve final : public FKawaiiPhysics_ExternalForce
{
public:
	struct FRuntimeVectorCurve                    ForceCurve;                                        // 0x00D8(0x0188)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EExternalForceCurveEvaluateType               CurveEvaluateType;                                 // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D2E[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SubstepCount;                                      // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeScale;                                         // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D2F[0x4];                                     // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     ForceRateByBoneLengthRate;                         // 0x0270(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         Time;                                              // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PrevTime;                                          // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxCurveTime;                                      // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4D30[0xC];                                     // 0x0304(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct KawaiiPhysics.KawaiiPhysics_ExternalForce_Wind
// 0x0090 (0x0170 - 0x00E0)
struct FKawaiiPhysics_ExternalForce_Wind final : public FKawaiiPhysics_ExternalForce
{
public:
	struct FRuntimeFloatCurve                     ForceRateByBoneLengthRate;                         // 0x00D8(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UWorld*                                 World;                                             // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4D31[0x8];                                     // 0x0168(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct KawaiiPhysics.KawaiiPhysicsReference
// 0x0000 (0x0010 - 0x0010)
struct FKawaiiPhysicsReference final : public FAnimNodeReference
{
};

// ScriptStruct KawaiiPhysics.CollisionLimitDataBase
// 0x0090 (0x0090 - 0x0000)
struct FCollisionLimitDataBase
{
public:
	struct FBoneReference                         DrivingBoneReference;                              // 0x0000(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   DrivingBoneName;                                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OffSetLocation;                                    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               OffsetRotation;                                    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  Rotation;                                          // 0x0060(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  Guid;                                              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct KawaiiPhysics.SphericalLimitData
// 0x0010 (0x00A0 - 0x0090)
struct FSphericalLimitData final : public FCollisionLimitDataBase
{
public:
	float                                         Radius;                                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESphericalLimitType                           LimitType;                                         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D32[0xB];                                     // 0x0095(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct KawaiiPhysics.CapsuleLimitData
// 0x0010 (0x00A0 - 0x0090)
struct FCapsuleLimitData final : public FCollisionLimitDataBase
{
public:
	float                                         Radius;                                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Length;                                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D33[0x8];                                     // 0x0098(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct KawaiiPhysics.BoxLimitData
// 0x0020 (0x00B0 - 0x0090)
struct FBoxLimitData final : public FCollisionLimitDataBase
{
public:
	struct FVector                                Extent;                                            // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D34[0x8];                                     // 0x00A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct KawaiiPhysics.PlanarLimitData
// 0x0020 (0x00B0 - 0x0090)
struct FPlanarLimitData final : public FCollisionLimitDataBase
{
public:
	struct FPlane                                 Plane;                                             // 0x0090(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

