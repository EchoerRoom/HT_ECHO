#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPCAnimBP_Base

#include "Basic.hpp"

#include "NPCAnimBP_Base_classes.hpp"
#include "NPCAnimBP_Base_parameters.hpp"


namespace SDK
{

// Function NPCAnimBP_Base.NPCAnimBP_Base_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void UNPCAnimBP_Base_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "AnimGraph");

	Params::NPCAnimBP_Base_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.AnimNotify_CloseIdleImmediately
// (BlueprintCallable, BlueprintEvent)

void UNPCAnimBP_Base_C::AnimNotify_CloseIdleImmediately()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "AnimNotify_CloseIdleImmediately");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.BlueprintLinkedAnimationLayersInitialized
// (Event, Public, BlueprintEvent)

void UNPCAnimBP_Base_C::BlueprintLinkedAnimationLayersInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "BlueprintLinkedAnimationLayersInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.EvaluateGraphExposedInputs_ExecuteUbergraph_NPCAnimBP_Base_AnimGraphNode_TransitionResult_7BB1111F4FDC8E369F24ABBE79CD699F
// (BlueprintEvent)

void UNPCAnimBP_Base_C::EvaluateGraphExposedInputs_ExecuteUbergraph_NPCAnimBP_Base_AnimGraphNode_TransitionResult_7BB1111F4FDC8E369F24ABBE79CD699F()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_NPCAnimBP_Base_AnimGraphNode_TransitionResult_7BB1111F4FDC8E369F24ABBE79CD699F");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.EvaluateGraphExposedInputs_ExecuteUbergraph_NPCAnimBP_Base_AnimGraphNode_TransitionResult_A85199EB4A83F19E494C72ADE73AAF61
// (BlueprintEvent)

void UNPCAnimBP_Base_C::EvaluateGraphExposedInputs_ExecuteUbergraph_NPCAnimBP_Base_AnimGraphNode_TransitionResult_A85199EB4A83F19E494C72ADE73AAF61()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_NPCAnimBP_Base_AnimGraphNode_TransitionResult_A85199EB4A83F19E494C72ADE73AAF61");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.ExecuteUbergraph_NPCAnimBP_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNPCAnimBP_Base_C::ExecuteUbergraph_NPCAnimBP_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "ExecuteUbergraph_NPCAnimBP_Base");

	Params::NPCAnimBP_Base_C_ExecuteUbergraph_NPCAnimBP_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.FootIKLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_FootIKLayer                                      (Parm, OutParm, NoDestructor)

void UNPCAnimBP_Base_C::FootIKLayer(const struct FPoseLink& InPose, struct FPoseLink* Param_FootIKLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "FootIKLayer");

	Params::NPCAnimBP_Base_C_FootIKLayer Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FootIKLayer != nullptr)
		*Param_FootIKLayer = std::move(Parms.Param_FootIKLayer);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.HTAITurnL_BP
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TurnAngle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FPlayRate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNPCAnimBP_Base_C::HTAITurnL_BP(float TurnAngle, float FPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "HTAITurnL_BP");

	Params::NPCAnimBP_Base_C_HTAITurnL_BP Parms{};

	Parms.TurnAngle = TurnAngle;
	Parms.FPlayRate = FPlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.HTAITurnR_BP
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TurnAngle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FPlayRate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNPCAnimBP_Base_C::HTAITurnR_BP(float TurnAngle, float FPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "HTAITurnR_BP");

	Params::NPCAnimBP_Base_C_HTAITurnR_BP Parms{};

	Parms.TurnAngle = TurnAngle;
	Parms.FPlayRate = FPlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.NPCBoneShakeLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// double                                  Push_Scale                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_BlendAlpha                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPoseLink                        Param_NPCBoneShakeLayer                                (Parm, OutParm, NoDestructor)

void UNPCAnimBP_Base_C::NPCBoneShakeLayer(const struct FPoseLink& InPose, double Push_Scale, double Param_BlendAlpha, struct FPoseLink* Param_NPCBoneShakeLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "NPCBoneShakeLayer");

	Params::NPCAnimBP_Base_C_NPCBoneShakeLayer Parms{};

	Parms.InPose = std::move(InPose);
	Parms.Push_Scale = Push_Scale;
	Parms.Param_BlendAlpha = Param_BlendAlpha;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_NPCBoneShakeLayer != nullptr)
		*Param_NPCBoneShakeLayer = std::move(Parms.Param_NPCBoneShakeLayer);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.NPCControlRigLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_NPCControlRigLayer                               (Parm, OutParm, NoDestructor)

void UNPCAnimBP_Base_C::NPCControlRigLayer(struct FPoseLink* Param_NPCControlRigLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "NPCControlRigLayer");

	Params::NPCAnimBP_Base_C_NPCControlRigLayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_NPCControlRigLayer != nullptr)
		*Param_NPCControlRigLayer = std::move(Parms.Param_NPCControlRigLayer);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.NPCFootIK
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        InPose_1                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_NPCFootIK                                        (Parm, OutParm, NoDestructor)

void UNPCAnimBP_Base_C::NPCFootIK(const struct FPoseLink& InPose_1, struct FPoseLink* Param_NPCFootIK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "NPCFootIK");

	Params::NPCAnimBP_Base_C_NPCFootIK Parms{};

	Parms.InPose_1 = std::move(InPose_1);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_NPCFootIK != nullptr)
		*Param_NPCFootIK = std::move(Parms.Param_NPCFootIK);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.NPCHitAnim
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        InPose_2                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_NPCHitAnim                                       (Parm, OutParm, NoDestructor)

void UNPCAnimBP_Base_C::NPCHitAnim(const struct FPoseLink& InPose_2, struct FPoseLink* Param_NPCHitAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "NPCHitAnim");

	Params::NPCAnimBP_Base_C_NPCHitAnim Parms{};

	Parms.InPose_2 = std::move(InPose_2);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_NPCHitAnim != nullptr)
		*Param_NPCHitAnim = std::move(Parms.Param_NPCHitAnim);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.NPCIKAnimation Layer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        InPose_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// double                                  InputParam                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPoseLink                        Param_NPCIKAnimation_Layer                             (Parm, OutParm, NoDestructor)

void UNPCAnimBP_Base_C::NPCIKAnimation_Layer(const struct FPoseLink& InPose_0, double InputParam, struct FPoseLink* Param_NPCIKAnimation_Layer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "NPCIKAnimation Layer");

	Params::NPCAnimBP_Base_C_NPCIKAnimation_Layer Parms{};

	Parms.InPose_0 = std::move(InPose_0);
	Parms.InputParam = InputParam;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_NPCIKAnimation_Layer != nullptr)
		*Param_NPCIKAnimation_Layer = std::move(Parms.Param_NPCIKAnimation_Layer);
}


// Function NPCAnimBP_Base.NPCAnimBP_Base_C.PlayDynamicTransition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDynamicMontageParams            Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  RetriggerDelay                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UNPCAnimBP_Base_C::PlayDynamicTransition(const struct FDynamicMontageParams& Parameters, double RetriggerDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCAnimBP_Base_C", "PlayDynamicTransition");

	Params::NPCAnimBP_Base_C_PlayDynamicTransition Parms{};

	Parms.Parameters = std::move(Parameters);
	Parms.RetriggerDelay = RetriggerDelay;

	UObject::ProcessEvent(Func, &Parms);
}

}

