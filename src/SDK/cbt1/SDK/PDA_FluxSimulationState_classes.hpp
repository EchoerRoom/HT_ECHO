#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_FluxSimulationState

#include "Basic.hpp"

#include "BS_FluxRectBlend_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PDA_FluxSimulationState.PDA_FluxSimulationState_C
// 0x0098 (0x00C8 - 0x0030)
class UPDA_FluxSimulationState_C final : public UPrimaryDataAsset
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Static;                                            // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A58[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        EncodeVelocityMax;                                 // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EncodeHeightMax;                                   // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Iteration;                                         // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Resolution;                                        // 0x0054(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A59[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               GroundMap;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               VelocityDepthFoamMap;                              // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AreaLocation;                                      // 0x0070(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AreaSize;                                          // 0x0088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               HeightWetMap;                                      // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelOfDetail;                                     // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Compression;                                       // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A5A[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBS_FluxRectBlend                      AreaBlend;                                         // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CaptureOffset;                                     // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyNiagaraData(class UNiagaraComponent* NiagaraSystem, bool UseGround, bool UseSurface);
	void ClearExternalReferences();
	void CopyPropertiesToObject(class UObject* Destination, bool* Done);
	void ExecuteUbergraph_PDA_FluxSimulationState(int32 EntryPoint);
	void GetExternalFiles(TArray<class UTexture*>* List);
	void GetExternalReferences(TArray<class UTexture*>* Objects);
	void GetLODScale(int32* Integer);
	void GetPathNames(TArray<class FString>* Output_Get);
	void GetVolumeTransform(const struct FVector& ExtraSize, const struct FVector& Scale, double ZOffsetScale, struct FTransform* NewParam);
	void SetSimulationTextures(class UTexture* Surface, class UTexture* Ground, class UTexture* Velocity);
	void SetSimulationWorld(const struct FVector& Location, const struct FVector& Size, int32 Frame, const struct FIntPoint& Param_Resolution, const struct FBS_FluxRectBlend& Blend, double DepthOffset);
	void SetStateConfing(bool StaticFrame, double VelocityNormalization, double HeightNormalization, int32 Param_LevelOfDetail, bool Param_Compression);

	void ApplyMaterialData(TArray<class UMaterialInstanceDynamic*>& MaterialInstances) const;
	struct FVector4 GetAreaBlendBorders() const;
	void GetDecodeVector(struct FVector* LinearColor) const;
	void GetEncodeVector(struct FLinearColor* LinearColor) const;
	void GetPixelSize(struct FLinearColor* WorldToSimulationUV) const;
	void GetTextureSize(struct FIntPoint* Param_Resolution) const;
	void GetWorldToTextureUV(struct FLinearColor* WorldToTextureUV) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PDA_FluxSimulationState_C">();
	}
	static class UPDA_FluxSimulationState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPDA_FluxSimulationState_C>();
	}
};

}

