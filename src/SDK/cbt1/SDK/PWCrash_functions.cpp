#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PWCrash

#include "Basic.hpp"

#include "PWCrash_classes.hpp"
#include "PWCrash_parameters.hpp"


namespace SDK
{

// Function PWCrash.PWCrashBlueprintLibrary.InitPWCrashSDK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const class FString& ResultCode, const class FString& ErrMsg)>OnBInitCompleteDelegate                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Domain                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPWCrashBlueprintLibrary::InitPWCrashSDK(TDelegate<void(const class FString& ResultCode, const class FString& ErrMsg)> OnBInitCompleteDelegate, const class FString& Domain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "InitPWCrashSDK");

	Params::PWCrashBlueprintLibrary_InitPWCrashSDK Parms{};

	Parms.OnBInitCompleteDelegate = OnBInitCompleteDelegate;
	Parms.Domain = std::move(Domain);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PWCrash.PWCrashBlueprintLibrary.ReportExtraFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPWCrashBlueprintLibrary::ReportExtraFile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "ReportExtraFile");

	Params::PWCrashBlueprintLibrary_ReportExtraFile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PWCrash.PWCrashBlueprintLibrary.ReportExtraInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ExtraInfo                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPWCrashBlueprintLibrary::ReportExtraInfo(const class FString& ExtraInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "ReportExtraInfo");

	Params::PWCrashBlueprintLibrary_ReportExtraInfo Parms{};

	Parms.ExtraInfo = std::move(ExtraInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.ReportExtraInfoKV
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ExtraInfoKV                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPWCrashBlueprintLibrary::ReportExtraInfoKV(const class FString& ExtraInfoKV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "ReportExtraInfoKV");

	Params::PWCrashBlueprintLibrary_ReportExtraInfoKV Parms{};

	Parms.ExtraInfoKV = std::move(ExtraInfoKV);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestAbort
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::TestAbort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestAbort");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestAccessViolation
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::TestAccessViolation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestAccessViolation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestANRCrash
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::TestANRCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestANRCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestCrtInvalidParam
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::TestCrtInvalidParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestCrtInvalidParam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestCustomException
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::TestCustomException()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestCustomException");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestHeapOverflow
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::TestHeapOverflow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestHeapOverflow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestJavaCrash
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::TestJavaCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestJavaCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestMainThreadBlock
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::TestMainThreadBlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestMainThreadBlock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestNativeCrash
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::TestNativeCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestNativeCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestObjCException
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::TestObjCException()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestObjCException");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestSetHotfixVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           HotfixVersion                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPWCrashBlueprintLibrary::TestSetHotfixVersion(const class FString& HotfixVersion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestSetHotfixVersion");

	Params::PWCrashBlueprintLibrary_TestSetHotfixVersion Parms{};

	Parms.HotfixVersion = std::move(HotfixVersion);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestSetRoleID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           RoleId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPWCrashBlueprintLibrary::TestSetRoleID(const class FString& RoleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestSetRoleID");

	Params::PWCrashBlueprintLibrary_TestSetRoleID Parms{};

	Parms.RoleId = std::move(RoleId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestSetTagVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           TagVersion                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPWCrashBlueprintLibrary::TestSetTagVersion(const class FString& TagVersion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestSetTagVersion");

	Params::PWCrashBlueprintLibrary_TestSetTagVersion Parms{};

	Parms.TagVersion = std::move(TagVersion);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestSetUserID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           UserId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPWCrashBlueprintLibrary::TestSetUserID(const class FString& UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestSetUserID");

	Params::PWCrashBlueprintLibrary_TestSetUserID Parms{};

	Parms.UserId = std::move(UserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestSignalException
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::TestSignalException()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestSignalException");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.TestStackOverflow
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::TestStackOverflow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "TestStackOverflow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PWCrash.PWCrashBlueprintLibrary.UnInitCrashSDK
// (Final, Native, Static, Public, BlueprintCallable)

void UPWCrashBlueprintLibrary::UnInitCrashSDK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PWCrashBlueprintLibrary", "UnInitCrashSDK");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction PWCrash.PWCrashBlueprintLibrary.BInitCompleteDelegate__DelegateSignature
// (Public, Delegate)
// Parameters:
// class FString                           ResultCode                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrMsg                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPWCrashBlueprintLibrary::BInitCompleteDelegate__DelegateSignature(const class FString& ResultCode, const class FString& ErrMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PWCrashBlueprintLibrary", "BInitCompleteDelegate__DelegateSignature");

	Params::PWCrashBlueprintLibrary_BInitCompleteDelegate__DelegateSignature Parms{};

	Parms.ResultCode = std::move(ResultCode);
	Parms.ErrMsg = std::move(ErrMsg);

	UObject::ProcessEvent(Func, &Parms);
}

}

