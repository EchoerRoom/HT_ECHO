#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PointCloud

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "PointCloud_structs.hpp"


namespace SDK
{

// Class PointCloud.PointCloud
// 0x0058 (0x0080 - 0x0028)
class UPointCloud : public UObject
{
public:
	uint8                                         Pad_2149[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class UPointCloudView*>                  RootViews;                                         // 0x0030(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	bool LoadFromPoints(const TArray<struct FPointCloudPoint>& InPoints);
	class UPointCloudView* MakeView();
	bool Reimport(const struct FBox& ReimportBounds);
	bool ReplacePoints(const class FString& Filename, const struct FBox& ReimportBounds);
	bool SaveToDisk(const class FString& Filename);
	bool StartLogging(const class FString& InFilename);
	bool StopLogging();

	struct FBox GetBounds() const;
	int32 GetCount() const;
	TArray<class FString> GetDefaultAttributes() const;
	TArray<class FString> GetLoadedFiles() const;
	TSet<class FString> GetMetadataAttributes() const;
	bool HasDefaultAttribute(const class FString& Param_Name) const;
	bool HasMetaDataAttribute(const class FString& Param_Name) const;
	bool LoggingEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PointCloud">();
	}
	static class UPointCloud* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPointCloud>();
	}
};

// Class PointCloud.PointCloudImpl
// 0x0238 (0x02B8 - 0x0080)
class UPointCloudImpl final : public UPointCloud
{
public:
	uint8                                         Pad_2151[0x238];                                   // 0x0080(0x0238)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PointCloudImpl">();
	}
	static class UPointCloudImpl* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPointCloudImpl>();
	}
};

// Class PointCloud.SliceAndDiceCommandlet
// 0x0008 (0x0088 - 0x0080)
class USliceAndDiceCommandlet final : public UCommandlet
{
public:
	uint8                                         Pad_2152[0x8];                                     // 0x0080(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SliceAndDiceCommandlet">();
	}
	static class USliceAndDiceCommandlet* GetDefaultObj()
	{
		return GetDefaultObjImpl<USliceAndDiceCommandlet>();
	}
};

// Class PointCloud.SliceAndDiceManagedActors
// 0x0108 (0x0130 - 0x0028)
class USliceAndDiceManagedActors final : public UObject
{
public:
	TSoftObjectPtr<class UPointCloudRule>         Rule;                                              // 0x0028(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class AActor>>          ManagedActors;                                     // 0x0050(0x0010)(ZeroConstructor, Deprecated, UObjectWrapper, NativeAccessSpecifierPublic)
	uint64                                        RuleRevisionNumber;                                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSliceAndDiceManagedActorsHashInfo> HashInfo;                                          // 0x0068(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	TArray<class USliceAndDiceManagedActors*>     Children;                                          // 0x0078(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FSliceAndDiceManagedActorsEntry> ActorEntries;                                      // 0x0088(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2153[0x98];                                    // 0x0098(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SliceAndDiceManagedActors">();
	}
	static class USliceAndDiceManagedActors* GetDefaultObj()
	{
		return GetDefaultObjImpl<USliceAndDiceManagedActors>();
	}
};

// Class PointCloud.SliceAndDiceMapping
// 0x0060 (0x0088 - 0x0028)
class USliceAndDiceMapping final : public UObject
{
public:
	TSoftObjectPtr<class UPointCloud>             PointCloud;                                        // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPointCloudSliceAndDiceRuleSet> RuleSet;                                           // 0x0050(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USliceAndDiceManagedActors*             Root;                                              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2154[0x7];                                     // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearManagedActors(bool bClearDisabled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SliceAndDiceMapping">();
	}
	static class USliceAndDiceMapping* GetDefaultObj()
	{
		return GetDefaultObjImpl<USliceAndDiceMapping>();
	}
};

// Class PointCloud.SliceAndDiceManager
// 0x0028 (0x02C8 - 0x02A0)
class ASliceAndDiceManager final : public AActor
{
public:
	TArray<class USliceAndDiceMapping*>           Mappings;                                          // 0x02A0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_2155[0x18];                                    // 0x02B0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ASliceAndDiceManager* CreateSliceAndDiceManager(class UWorld* InWorld);
	static TArray<class ASliceAndDiceManager*> GetSliceAndDiceManagers(class UWorld* InWorld);
	static TArray<class ASliceAndDiceManager*> GetSliceAndDiceManagersInLevel(class ULevel* InLevel);

	class USliceAndDiceMapping* AddNewMapping();
	bool DeleteAllManagedActors(bool bCleanDisabled);
	bool DeleteManagedActorsFromMapping(class USliceAndDiceMapping* InMapping, bool bCleanDisabled);
	bool DeleteManagedActorsFromMappings(const TArray<class USliceAndDiceMapping*>& InMappings, bool bCleanDisabled);
	class USliceAndDiceMapping* FindMapping(class UPointCloud* InPointCloud, class UPointCloudSliceAndDiceRuleSet* InRuleSet);
	class USliceAndDiceMapping* FindOrAddMapping(class UPointCloud* InPointCloud, class UPointCloudSliceAndDiceRuleSet* InRuleSet);
	bool MoveMapping(class USliceAndDiceMapping* InMapping, class ASliceAndDiceManager* InTargetManager);
	bool MoveMappings(const TArray<class USliceAndDiceMapping*>& InMapping, class ASliceAndDiceManager* InTargetManager);
	bool ReloadAllPointClouds();
	bool ReloadPointCloudsOnMappings(const TArray<class USliceAndDiceMapping*>& SelectedMappings);
	bool RemoveMapping(class USliceAndDiceMapping* InMapping, bool bDeleteManagedActors);
	class FString RunReport(EPointCloudReportLevel Level);
	class FString RunReportOnMappings(const TArray<class USliceAndDiceMapping*>& SelectedMappings, EPointCloudReportLevel Level);
	bool RunRules();
	bool RunRulesOnMappings(const TArray<class USliceAndDiceMapping*>& SelectedMappings);
	void SetLogging(bool bInLoggingEnabled, const class FString& InLogPath);

	int32 NumMappings() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SliceAndDiceManager">();
	}
	static class ASliceAndDiceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASliceAndDiceManager>();
	}
};

// Class PointCloud.PointCloudRule
// 0x0048 (0x0070 - 0x0028)
class UPointCloudRule final : public UObject
{
public:
	class FString                                 Label;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 Color;                                             // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlwaysReRun;                                      // 0x003D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2160[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPointCloudRule*>                Slots;                                             // 0x0040(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UPointCloudRuleSlot*>            SlotInfo;                                          // 0x0050(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_2161[0x8];                                     // 0x0060(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint64                                        RevisionNumber;                                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PointCloudRule">();
	}
	static class UPointCloudRule* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPointCloudRule>();
	}
};

// Class PointCloud.PointCloudSliceAndDiceRuleSet
// 0x0028 (0x0050 - 0x0028)
class UPointCloudSliceAndDiceRuleSet final : public UObject
{
public:
	TArray<class UPointCloudRule*>                Rules;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_2162[0x18];                                    // 0x0038(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool AddRule(class UPointCloudRule* InRule, class UPointCloudRule* InParent, int32 InSlotIndex);
	bool CopyRule(class UPointCloudRule* InRule, class UPointCloudRule* InTargetParent, int32 InTargetSlotIndex);
	class UPointCloudRule* CreateRule(const class FString& RuleName, class UPointCloudRule* ParentRule, int32 SlotIndex);
	const TArray<class UPointCloudRule*> GetRules();
	bool MoveRule(class UPointCloudRule* InRuleParent, int32 InRuleSlotIndex, class UPointCloudRule* InTargetParent, int32 InTargetSlotIndex);
	class UPointCloudRule* RemoveRule(class UPointCloudRule* InParent, int32 InSlotIndex);
	bool SwapRules(class UPointCloudRule* InRuleParent, int32 InRuleSlotIndex, class UPointCloudRule* InTargetParent, int32 InTargetSlotIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PointCloudSliceAndDiceRuleSet">();
	}
	static class UPointCloudSliceAndDiceRuleSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPointCloudSliceAndDiceRuleSet>();
	}
};

// Class PointCloud.PointCloudRuleSlot
// 0x0028 (0x0050 - 0x0028)
class UPointCloudRuleSlot final : public UObject
{
public:
	class FString                                 Label;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExternallyVisible;                                // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_216B[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  Guid;                                              // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_216C[0x4];                                     // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PointCloudRuleSlot">();
	}
	static class UPointCloudRuleSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPointCloudRuleSlot>();
	}
};

// Class PointCloud.PointCloudView
// 0x00C0 (0x00E8 - 0x0028)
class UPointCloudView final : public UObject
{
public:
	struct FGuid                                  ViewGuid;                                          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPointCloudImpl*                        PointCloud;                                        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPointCloudView*                        ParentView;                                        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_216D[0x18];                                    // 0x0048(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class UPointCloudView*>                  ChildViews;                                        // 0x0060(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_216E[0x38];                                    // 0x00B0(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FilterOnBoundingBox(const struct FBox& BoundingBox, bool bInvertSelection, EFilterMode Mode);
	void FilterOnBoundingSphere(const struct FVector& Center, float Radius, EFilterMode Mode);
	void FilterOnIndex(int32 Param_Index, EFilterMode Mode);
	void FilterOnMetadata(const class FString& MetaData, const class FString& Value, EFilterMode Mode);
	void FilterOnMetadataPattern(const class FString& MetaData, const class FString& Pattern, EFilterMode Mode);
	void FilterOnOrientedBoundingBox(const struct FTransform& InOBB, bool bInvertSelection, EFilterMode Mode);
	void FilterOnPointExpression(const class FString& Expression, EFilterMode Mode);
	void FilterOnRange(int32 StartIndex, int32 EndIndex, EFilterMode Mode);
	void FilterOnTile(const struct FBox& QueryGridBounds, int32 InNumTilesX, int32 InNumTilesY, int32 InNumTilesZ, int32 InTileX, int32 InTileY, int32 InTileZ, bool bInvertSelection, EFilterMode Mode);
	class UPointCloudView* MakeChildView();

	int32 CountResultsInBox(const struct FBox& Box) const;
	int32 GetCount() const;
	class FString GetHash() const;
	int32 GetIndexes(TArray<int32>* OutIds) const;
	TMap<class FString, class FString> GetMetadata(int32 PointId) const;
	TMap<int32, class FString> GetMetadataValues(const class FString& Key) const;
	TArray<float> GetMetadataValuesArrayAsFloat(const class FString& Key) const;
	TArray<int32> GetMetadataValuesArrayAsInt(const class FString& Key) const;
	class UPointCloud* GetPointCloud() const;
	struct FBox GetResultsBoundingBox() const;
	TArray<struct FTransform> GetTransforms() const;
	int32 GetTransformsAndIds(TArray<struct FTransform>* OutTransforms, TArray<int32>* OutIds) const;
	TArray<class FString> GetUniqueMetadataValues(const class FString& Key) const;
	TMap<class FString, int32> GetUniqueMetadataValuesAndCounts(const class FString& Key) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PointCloudView">();
	}
	static class UPointCloudView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPointCloudView>();
	}
};

}

