#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PointCloud

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "StructUtils_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Enum PointCloud.EFilterMode
// NumValues: 0x0004
enum class EFilterMode : uint8
{
	FILTER_Or                                = 0,
	FILTER_And                               = 1,
	FILTER_Not                               = 2,
	FILTER_MAX                               = 3,
};

// Enum PointCloud.EPointCloudBoundsOption
// NumValues: 0x0003
enum class EPointCloudBoundsOption : uint8
{
	Compute                                  = 0,
	Manual                                   = 1,
	EPointCloudBoundsOption_MAX              = 2,
};

// Enum PointCloud.EPointCloudPivotType
// NumValues: 0x0005
enum class EPointCloudPivotType : uint8
{
	Default                                  = 0,
	WorldOrigin                              = 1,
	Center                                   = 2,
	CenterMinZ                               = 3,
	EPointCloudPivotType_MAX                 = 4,
};

// Enum PointCloud.EPointCloudReportLevel
// NumValues: 0x0004
enum class EPointCloudReportLevel : uint8
{
	Basic                                    = 0,
	Properties                               = 1,
	Values                                   = 2,
	EPointCloudReportLevel_MAX               = 3,
};

// Enum PointCloud.EPointCloudReloadBehavior
// NumValues: 0x0003
enum class EPointCloudReloadBehavior : uint8
{
	DontReload                               = 0,
	ReloadOnRun                              = 1,
	EPointCloudReloadBehavior_MAX            = 2,
};

// Enum PointCloud.EPointCloudReportMode
// NumValues: 0x0005
enum class EPointCloudReportMode : uint8
{
	Invalid                                  = 0,
	Report                                   = 1,
	Execute                                  = 2,
	ReportAndExecute                         = 3,
	EPointCloudReportMode_MAX                = 4,
};

// ScriptStruct PointCloud.PointCloudPoint
// 0x00B0 (0x00B0 - 0x0000)
struct FPointCloudPoint final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            Attributes;                                        // 0x0060(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct PointCloud.CustomOverrides
// 0x0028 (0x0028 - 0x0000)
struct FCustomOverrides final
{
public:
	class UScriptStruct*                          StructClass;                                       // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2145[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       StructInstance;                                    // 0x0010(0x0010)(Edit, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2146[0x8];                                     // 0x0020(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct PointCloud.SliceAndDiceManagedActorsHashInfo
// 0x0028 (0x0028 - 0x0000)
struct FSliceAndDiceManagedActorsHashInfo final
{
public:
	class FString                                 Hash;                                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParentHash;                                        // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ActorIndex;                                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ActorCount;                                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct PointCloud.PointCloudRuleData
// 0x0068 (0x0068 - 0x0000)
struct FPointCloudRuleData final
{
public:
	uint8                                         Pad_2147[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorld*                                 World;                                             // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2148[0x10];                                    // 0x0010(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomOverrides                       CustomOverrides;                                   // 0x0020(0x0028)(Edit, NativeAccessSpecifierPublic)
	TArray<class FName>                           OverrideableProperties;                            // 0x0048(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FName>                           OverridenProperties;                               // 0x0058(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// ScriptStruct PointCloud.SliceAndDiceActorMapping
// 0x0030 (0x0030 - 0x0000)
struct FSliceAndDiceActorMapping final
{
public:
	TArray<TSoftObjectPtr<class AActor>>          Actors;                                            // 0x0000(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FActorInstanceHandle>           ActorHandles;                                      // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         Statements;                                        // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct PointCloud.SliceAndDiceManagedActorsEntry
// 0x0030 (0x0030 - 0x0000)
struct FSliceAndDiceManagedActorsEntry final
{
public:
	class FString                                 ParentHash;                                        // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Hash;                                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSliceAndDiceActorMapping>      ActorMappings;                                     // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

}

