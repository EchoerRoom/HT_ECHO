#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SLY_FunctionLibrary

#include "Basic.hpp"

#include "SLY_FunctionLibrary_classes.hpp"
#include "SLY_FunctionLibrary_parameters.hpp"


namespace SDK
{

// Function SLY_FunctionLibrary.SLY_FunctionLibrary_C.IsQuestBetween_SLY
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             BeginQuest                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             EndQuest                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHTQuestComponent*                QuestComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsInclude                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USLY_FunctionLibrary_C::IsQuestBetween_SLY(class FName BeginQuest, class FName EndQuest, class UHTQuestComponent* QuestComponent, class UObject* __WorldContext, bool* IsInclude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SLY_FunctionLibrary_C", "IsQuestBetween_SLY");

	Params::SLY_FunctionLibrary_C_IsQuestBetween_SLY Parms{};

	Parms.BeginQuest = BeginQuest;
	Parms.EndQuest = EndQuest;
	Parms.QuestComponent = QuestComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsInclude != nullptr)
		*IsInclude = Parms.IsInclude;
}


// Function SLY_FunctionLibrary.SLY_FunctionLibrary_C.PlayerTurnToActor
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHTPlayerCharacter*               HTPlayerCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void USLY_FunctionLibrary_C::PlayerTurnToActor(class AHTPlayerCharacter* HTPlayerCharacter, class AActor* TargetActor, const struct FVector& TargetLocation, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SLY_FunctionLibrary_C", "PlayerTurnToActor");

	Params::SLY_FunctionLibrary_C_PlayerTurnToActor Parms{};

	Parms.HTPlayerCharacter = HTPlayerCharacter;
	Parms.TargetActor = TargetActor;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function SLY_FunctionLibrary.SLY_FunctionLibrary_C.SwapInt_SLY
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SwapA                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SwapB                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Aswap                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Bswap                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USLY_FunctionLibrary_C::SwapInt_SLY(int32 SwapA, int32 SwapB, class UObject* __WorldContext, int32* Aswap, int32* Bswap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SLY_FunctionLibrary_C", "SwapInt_SLY");

	Params::SLY_FunctionLibrary_C_SwapInt_SLY Parms{};

	Parms.SwapA = SwapA;
	Parms.SwapB = SwapB;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Aswap != nullptr)
		*Aswap = Parms.Aswap;

	if (Bswap != nullptr)
		*Bswap = Parms.Bswap;
}

}

