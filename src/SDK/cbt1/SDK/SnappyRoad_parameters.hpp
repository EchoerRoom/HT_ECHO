#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SnappyRoad

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SnappyRoad_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ZoneGraph_structs.hpp"


namespace SDK::Params
{

// Function SnappyRoad.ComponentPoolManager.GetComponentFromPool
// 0x0008 (0x0008 - 0x0000)
struct ComponentPoolManager_GetComponentFromPool final
{
public:
	class UActorComponent*                        ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.ComponentPoolManager.GetUsedComponentPool
// 0x0010 (0x0010 - 0x0000)
struct ComponentPoolManager_GetUsedComponentPool final
{
public:
	TArray<class UActorComponent*>                ReturnValue;                                       // 0x0000(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.ComponentPoolManager.InitializePool
// 0x0010 (0x0010 - 0x0000)
struct ComponentPoolManager_InitializePool final
{
public:
	TSubclassOf<class UActorComponent>            ComponentClass;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Param_Outer;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.ComponentPoolManager.ReturnComponentToPool
// 0x0008 (0x0008 - 0x0000)
struct ComponentPoolManager_ReturnComponentToPool final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadFanceComponent.Initialize
// 0x0280 (0x0280 - 0x0000)
struct RoadFanceComponent_Initialize final
{
public:
	struct FRoadFanceStruct                       FanceStruct;                                       // 0x0000(0x0270)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class USplineComponent*                       InSpline;                                          // 0x0270(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FDE[0x8];                                     // 0x0278(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SnappyRoad.RoadFanceComponent.OffsetSpline
// 0x0270 (0x0270 - 0x0000)
struct RoadFanceComponent_OffsetSpline final
{
public:
	struct FRoadFanceStruct                       FanceStruct;                                       // 0x0000(0x0270)(Parm, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadFanceComponent.SetSplinePoints
// 0x0290 (0x0290 - 0x0000)
struct RoadFanceComponent_SetSplinePoints final
{
public:
	struct FRoadFanceStruct                       FanceStruct;                                       // 0x0000(0x0270)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        Points;                                            // 0x0270(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	ESplineCoordinateSpace                        CoordinateSpace;                                   // 0x0280(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateSpline;                                     // 0x0281(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FDF[0xE];                                     // 0x0282(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SnappyRoad.RoadFanceComponent.UpdateSpline
// 0x0270 (0x0270 - 0x0000)
struct RoadFanceComponent_UpdateSpline final
{
public:
	struct FRoadFanceStruct                       FanceStruct;                                       // 0x0000(0x0270)(Parm, OutParm, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadFanceComponent.GetLocationAtSplineInputKey
// 0x0290 (0x0290 - 0x0000)
struct RoadFanceComponent_GetLocationAtSplineInputKey final
{
public:
	struct FRoadFanceStruct                       FanceStruct;                                       // 0x0000(0x0270)(Parm, NativeAccessSpecifierPublic)
	float                                         InKey;                                             // 0x0270(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESplineCoordinateSpace                        CoordinateSpace;                                   // 0x0274(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FE0[0x3];                                     // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0278(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadFanceComponent.GetScaleAtSplineInputKey
// 0x0290 (0x0290 - 0x0000)
struct RoadFanceComponent_GetScaleAtSplineInputKey final
{
public:
	struct FRoadFanceStruct                       FanceStruct;                                       // 0x0000(0x0270)(Parm, NativeAccessSpecifierPublic)
	float                                         InKey;                                             // 0x0270(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FE1[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0278(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadFanceComponent.GetSplineLength
// 0x0280 (0x0280 - 0x0000)
struct RoadFanceComponent_GetSplineLength final
{
public:
	struct FRoadFanceStruct                       FanceStruct;                                       // 0x0000(0x0270)(Parm, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0270(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FE2[0xC];                                     // 0x0274(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SnappyRoad.RoadFanceComponent.GetTransformAtDistanceAlongSpline
// 0x02E0 (0x02E0 - 0x0000)
struct RoadFanceComponent_GetTransformAtDistanceAlongSpline final
{
public:
	struct FRoadFanceStruct                       FanceStruct;                                       // 0x0000(0x0270)(Parm, NativeAccessSpecifierPublic)
	float                                         Distance;                                          // 0x0270(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESplineCoordinateSpace                        CoordinateSpace;                                   // 0x0274(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseScale;                                         // 0x0275(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FE3[0xA];                                     // 0x0276(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0280(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadFanceComponent.GetTransformAtSplineInputKey
// 0x02E0 (0x02E0 - 0x0000)
struct RoadFanceComponent_GetTransformAtSplineInputKey final
{
public:
	struct FRoadFanceStruct                       FanceStruct;                                       // 0x0000(0x0270)(Parm, NativeAccessSpecifierPublic)
	float                                         InKey;                                             // 0x0270(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESplineCoordinateSpace                        CoordinateSpace;                                   // 0x0274(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseScale;                                         // 0x0275(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FE4[0xA];                                     // 0x0276(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0280(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetCrosswalkMiddleIntersectionPoints
// 0x0190 (0x0190 - 0x0000)
struct RoadNetworkUtility_GetCrosswalkMiddleIntersectionPoints final
{
public:
	struct FZoneShapePointInfo                    PointInfo1;                                        // 0x0000(0x0098)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FZoneShapePointInfo                    PointInfo2;                                        // 0x0098(0x0098)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                MiddleIntersectionPosition;                        // 0x0130(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               MiddleIntersectionRotator;                         // 0x0148(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FZoneLaneProfileRef                    MiddleProfileRef;                                  // 0x0160(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FZoneShapePointInfo>            OutPointsInfo;                                     // 0x0178(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0188(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FE5[0x7];                                     // 0x0189(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SnappyRoad.RoadNetworkUtility.GetIntersectionConfig
// 0x0018 (0x0018 - 0x0000)
struct RoadNetworkUtility_GetIntersectionConfig final
{
public:
	const class UStaticMesh*                      Mesh;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FIntersectionConfig>            OutConfigs;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetIntersectionConfigByDirection
// 0x0100 (0x0100 - 0x0000)
struct RoadNetworkUtility_GetIntersectionConfigByDirection final
{
public:
	TArray<struct FIntersectionConfig>            IntersectionConfig;                                // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	ERoadIntersectionDirection                    Direction;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Succeful;                                          // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FE6[0xE];                                     // 0x0012(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntersectionConfig                    ReturnValue;                                       // 0x0020(0x00E0)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetIntersectionPoint
// 0x0080 (0x0080 - 0x0000)
struct RoadNetworkUtility_GetIntersectionPoint final
{
public:
	struct FVector                                Point1;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Dir1;                                              // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Point2;                                            // 0x0030(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Dir2;                                              // 0x0048(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                IntersectionPoint;                                 // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FE7[0x7];                                     // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SnappyRoad.RoadNetworkUtility.GetIntersectionTransform
// 0x0018 (0x0018 - 0x0000)
struct RoadNetworkUtility_GetIntersectionTransform final
{
public:
	const class UStaticMesh*                      Mesh;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     OutTransform;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetInverstDirection
// 0x0002 (0x0002 - 0x0000)
struct RoadNetworkUtility_GetInverstDirection final
{
public:
	ERoadIntersectionDirection                    SourceDir;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERoadIntersectionDirection                    ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetLaneProfileRefByName
// 0x0024 (0x0024 - 0x0000)
struct RoadNetworkUtility_GetLaneProfileRefByName final
{
public:
	class FName                                   LaneName;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Succeful;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FE8[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FZoneLaneProfileRef                    ReturnValue;                                       // 0x000C(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetLanesTotalWidthByProfileRef
// 0x001C (0x001C - 0x0000)
struct RoadNetworkUtility_GetLanesTotalWidthByProfileRef final
{
public:
	struct FZoneLaneProfileRef                    ProfileRef;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetMidpointBetweenTwoPoints
// 0x0048 (0x0048 - 0x0000)
struct RoadNetworkUtility_GetMidpointBetweenTwoPoints final
{
public:
	struct FVector                                Point1;                                            // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Point2;                                            // 0x0018(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetNextDirection
// 0x0002 (0x0002 - 0x0000)
struct RoadNetworkUtility_GetNextDirection final
{
public:
	ERoadIntersectionDirection                    SourceDir;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERoadIntersectionDirection                    ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetSideRoadIntersectionPointInfo
// 0x0210 (0x0210 - 0x0000)
struct RoadNetworkUtility_GetSideRoadIntersectionPointInfo final
{
public:
	struct FIntersectionConfig                    SocketConfig1;                                     // 0x0000(0x00E0)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FIntersectionConfig                    SocketConfig2;                                     // 0x00E0(0x00E0)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                SideRoadOffsetAlongTrunkLane;                      // 0x01C0(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CrosswalkLinkOffset;                               // 0x01D8(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FZoneShapePointInfo>            OutPointsInfo;                                     // 0x01F0(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0200(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FE9[0xF];                                     // 0x0201(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SnappyRoad.RoadNetworkUtility.GetSocketsName
// 0x0018 (0x0018 - 0x0000)
struct RoadNetworkUtility_GetSocketsName final
{
public:
	const class UStaticMesh*                      StaticMesh;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetStraightConfig
// 0x00F0 (0x00F0 - 0x0000)
struct RoadNetworkUtility_GetStraightConfig final
{
public:
	const class UStaticMesh*                      Mesh;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FEA[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStraightConfig                        OutConfigs;                                        // 0x0010(0x00D0)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FEB[0xF];                                     // 0x00E1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SnappyRoad.RoadNetworkUtility.GetStraightTransform
// 0x0018 (0x0018 - 0x0000)
struct RoadNetworkUtility_GetStraightTransform final
{
public:
	const class UStaticMesh*                      Mesh;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     OutTransform;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetTrafficLightInfo
// 0x0028 (0x0028 - 0x0000)
struct RoadNetworkUtility_GetTrafficLightInfo final
{
public:
	TArray<struct FIntersectionConfig>            Configs;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	const class UTrafficlightConfigDataAsset*     TrafficTypeAsset;                                  // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTrafficLightInfo>              OutPoints;                                         // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetTrunkIntersectionPointInfo
// 0x0020 (0x0020 - 0x0000)
struct RoadNetworkUtility_GetTrunkIntersectionPointInfo final
{
public:
	TArray<struct FIntersectionConfig>            SocketConfigs;                                     // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FZoneShapePointInfo>            OutPointsInfo;                                     // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.SetIntersectionConfig
// 0x0018 (0x0018 - 0x0000)
struct RoadNetworkUtility_SetIntersectionConfig final
{
public:
	class UStaticMesh*                            Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FIntersectionConfig>            Configs;                                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.SetStraightConfig
// 0x0018 (0x0018 - 0x0000)
struct RoadNetworkUtility_SetStraightConfig final
{
public:
	class UStaticMesh*                            Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStraightConfig>                Configs;                                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.RoadNetworkUtility.GetTrunkIntersectionSocketPoints
// 0x0020 (0x0020 - 0x0000)
struct RoadNetworkUtility_GetTrunkIntersectionSocketPoints final
{
public:
	TArray<struct FIntersectionConfig>            Configs;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSocketPoint>                   OutPoints;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.SnappyRoad.AddExtraMesh
// 0x0028 (0x0028 - 0x0000)
struct SnappyRoad_AddExtraMesh final
{
public:
	class USplineComponent*                       Spline;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          MeshExtraEnable;                                   // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FEC[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMeshExtra>                     MeshExtra;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         YScale;                                            // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseRoll;                                           // 0x0024(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FED[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SnappyRoad.SnappyRoad.AddInstancedSRC
// 0x0010 (0x0010 - 0x0000)
struct SnappyRoad_AddInstancedSRC final
{
public:
	TSubclassOf<class USnappyRoadComponent>       Type;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USnappyRoadComponent*                   ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SnappyRoad.SnappyRoad.AddRoadSegments_C
// 0x0098 (0x0098 - 0x0000)
struct SnappyRoad_AddRoadSegments_C final
{
public:
	class USplineComponent*                       Spline;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SegmentsNumber;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FEE[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 MeshSegmentIndexes;                                // 0x0010(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 MeshLengthCoefficients;                            // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                    StaticMeshes;                                      // 0x0030(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class UStaticMesh*                            StaticMeshLegacy;                                  // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  MeshFlipY;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                Offset;                                            // 0x0058(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          FlipY;                                             // 0x0070(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseScale;                                          // 0x0071(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FEF[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         YScale;                                            // 0x0074(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartOffset;                                       // 0x0078(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndOffset;                                         // 0x007C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NewCullDistance;                                   // 0x0080(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NewCastShadow;                                     // 0x0084(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FF0[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InCollisionProfileName;                            // 0x0088(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseRoll;                                           // 0x0090(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UpdateMeshCollision;                               // 0x0091(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseCustomTangents;                                 // 0x0092(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FF1[0x5];                                     // 0x0093(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SnappyRoad.SnappyRoad.AddRoadSegmentsSimple_C
// 0x0088 (0x0088 - 0x0000)
struct SnappyRoad_AddRoadSegmentsSimple_C final
{
public:
	class USplineComponent*                       Spline;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SegmentsNumber;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FF2[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 MeshSegmentIndexes;                                // 0x0010(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 MeshLengthCoefficients;                            // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                    StaticMeshes;                                      // 0x0030(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class UStaticMesh*                            StaticMeshLegacy;                                  // 0x0040(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Offset;                                            // 0x0048(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          FlipY;                                             // 0x0060(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseScale;                                          // 0x0061(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FF3[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         YScale;                                            // 0x0064(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartOffset;                                       // 0x0068(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndOffset;                                         // 0x006C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NewCullDistance;                                   // 0x0070(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NewCastShadow;                                     // 0x0074(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FF4[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InCollisionProfileName;                            // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseRoll;                                           // 0x0080(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UpdateMeshCollision;                               // 0x0081(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FF5[0x6];                                     // 0x0082(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SnappyRoad.SnappyRoad.CreateTrafficLight
// 0x0070 (0x0070 - 0x0000)
struct SnappyRoad_CreateTrafficLight final
{
public:
	class UStaticMesh*                            Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UTrafficlightConfigDataAsset*     TrafficTypeConfig;                                 // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             ZoneShapeTransform;                                // 0x0010(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

